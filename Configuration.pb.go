// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: Configuration.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ConfigUpdateType int32

const (
	ConfigUpdateType_Update  ConfigUpdateType = 0
	ConfigUpdateType_Remove  ConfigUpdateType = 1
	ConfigUpdateType_Replace ConfigUpdateType = 2
	ConfigUpdateType_Edited  ConfigUpdateType = 3
)

// Enum value maps for ConfigUpdateType.
var (
	ConfigUpdateType_name = map[int32]string{
		0: "Update",
		1: "Remove",
		2: "Replace",
		3: "Edited",
	}
	ConfigUpdateType_value = map[string]int32{
		"Update":  0,
		"Remove":  1,
		"Replace": 2,
		"Edited":  3,
	}
)

func (x ConfigUpdateType) Enum() *ConfigUpdateType {
	p := new(ConfigUpdateType)
	*p = x
	return p
}

func (x ConfigUpdateType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConfigUpdateType) Descriptor() protoreflect.EnumDescriptor {
	return file_Configuration_proto_enumTypes[0].Descriptor()
}

func (ConfigUpdateType) Type() protoreflect.EnumType {
	return &file_Configuration_proto_enumTypes[0]
}

func (x ConfigUpdateType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConfigUpdateType.Descriptor instead.
func (ConfigUpdateType) EnumDescriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{0}
}

type AccountGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
}

func (x *AccountGroup) Reset() {
	*x = AccountGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountGroup) ProtoMessage() {}

func (x *AccountGroup) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountGroup.ProtoReflect.Descriptor instead.
func (*AccountGroup) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{0}
}

func (x *AccountGroup) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AccountGroup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AccountGroup) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type AccountGroupSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Group      int32  `protobuf:"varint,2,opt,name=Group,proto3" json:"Group,omitempty"`
	SettingKey string `protobuf:"bytes,3,opt,name=SettingKey,proto3" json:"SettingKey,omitempty"`
	Type       string `protobuf:"bytes,4,opt,name=Type,proto3" json:"Type,omitempty"`
	Value      string `protobuf:"bytes,5,opt,name=Value,proto3" json:"Value,omitempty"`
}

func (x *AccountGroupSetting) Reset() {
	*x = AccountGroupSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountGroupSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountGroupSetting) ProtoMessage() {}

func (x *AccountGroupSetting) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountGroupSetting.ProtoReflect.Descriptor instead.
func (*AccountGroupSetting) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{1}
}

func (x *AccountGroupSetting) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AccountGroupSetting) GetGroup() int32 {
	if x != nil {
		return x.Group
	}
	return 0
}

func (x *AccountGroupSetting) GetSettingKey() string {
	if x != nil {
		return x.SettingKey
	}
	return ""
}

func (x *AccountGroupSetting) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *AccountGroupSetting) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type AccountProfileDividend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
}

func (x *AccountProfileDividend) Reset() {
	*x = AccountProfileDividend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountProfileDividend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountProfileDividend) ProtoMessage() {}

func (x *AccountProfileDividend) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountProfileDividend.ProtoReflect.Descriptor instead.
func (*AccountProfileDividend) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{2}
}

func (x *AccountProfileDividend) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AccountProfileDividend) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AccountProfileDividend) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type AccountProfileDividendSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32   `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	ProfileName string  `protobuf:"bytes,2,opt,name=ProfileName,proto3" json:"ProfileName,omitempty"`
	Symbol      string  `protobuf:"bytes,3,opt,name=Symbol,proto3" json:"Symbol,omitempty"`
	Long        float64 `protobuf:"fixed64,4,opt,name=Long,proto3" json:"Long,omitempty"`
	Short       float64 `protobuf:"fixed64,5,opt,name=Short,proto3" json:"Short,omitempty"`
	Tax         float64 `protobuf:"fixed64,6,opt,name=Tax,proto3" json:"Tax,omitempty"`
	Ccy         string  `protobuf:"bytes,7,opt,name=Ccy,proto3" json:"Ccy,omitempty"`
	Percentage  float64 `protobuf:"fixed64,8,opt,name=Percentage,proto3" json:"Percentage,omitempty"`
	Comment     string  `protobuf:"bytes,9,opt,name=Comment,proto3" json:"Comment,omitempty"`
	Comment2    string  `protobuf:"bytes,10,opt,name=Comment2,proto3" json:"Comment2,omitempty"`
}

func (x *AccountProfileDividendSetting) Reset() {
	*x = AccountProfileDividendSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountProfileDividendSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountProfileDividendSetting) ProtoMessage() {}

func (x *AccountProfileDividendSetting) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountProfileDividendSetting.ProtoReflect.Descriptor instead.
func (*AccountProfileDividendSetting) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{3}
}

func (x *AccountProfileDividendSetting) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AccountProfileDividendSetting) GetProfileName() string {
	if x != nil {
		return x.ProfileName
	}
	return ""
}

func (x *AccountProfileDividendSetting) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *AccountProfileDividendSetting) GetLong() float64 {
	if x != nil {
		return x.Long
	}
	return 0
}

func (x *AccountProfileDividendSetting) GetShort() float64 {
	if x != nil {
		return x.Short
	}
	return 0
}

func (x *AccountProfileDividendSetting) GetTax() float64 {
	if x != nil {
		return x.Tax
	}
	return 0
}

func (x *AccountProfileDividendSetting) GetCcy() string {
	if x != nil {
		return x.Ccy
	}
	return ""
}

func (x *AccountProfileDividendSetting) GetPercentage() float64 {
	if x != nil {
		return x.Percentage
	}
	return 0
}

func (x *AccountProfileDividendSetting) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *AccountProfileDividendSetting) GetComment2() string {
	if x != nil {
		return x.Comment2
	}
	return ""
}

type AccountProfileLeverageCcy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
}

func (x *AccountProfileLeverageCcy) Reset() {
	*x = AccountProfileLeverageCcy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountProfileLeverageCcy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountProfileLeverageCcy) ProtoMessage() {}

func (x *AccountProfileLeverageCcy) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountProfileLeverageCcy.ProtoReflect.Descriptor instead.
func (*AccountProfileLeverageCcy) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{4}
}

func (x *AccountProfileLeverageCcy) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AccountProfileLeverageCcy) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AccountProfileLeverageCcy) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type AccountProfileLeverageCcySetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int32   `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Profile  string  `protobuf:"bytes,2,opt,name=Profile,proto3" json:"Profile,omitempty"`
	Currency string  `protobuf:"bytes,3,opt,name=Currency,proto3" json:"Currency,omitempty"`
	Leverage float64 `protobuf:"fixed64,4,opt,name=Leverage,proto3" json:"Leverage,omitempty"`
}

func (x *AccountProfileLeverageCcySetting) Reset() {
	*x = AccountProfileLeverageCcySetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountProfileLeverageCcySetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountProfileLeverageCcySetting) ProtoMessage() {}

func (x *AccountProfileLeverageCcySetting) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountProfileLeverageCcySetting.ProtoReflect.Descriptor instead.
func (*AccountProfileLeverageCcySetting) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{5}
}

func (x *AccountProfileLeverageCcySetting) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AccountProfileLeverageCcySetting) GetProfile() string {
	if x != nil {
		return x.Profile
	}
	return ""
}

func (x *AccountProfileLeverageCcySetting) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *AccountProfileLeverageCcySetting) GetLeverage() float64 {
	if x != nil {
		return x.Leverage
	}
	return 0
}

type AccountProfileLeverageSym struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
}

func (x *AccountProfileLeverageSym) Reset() {
	*x = AccountProfileLeverageSym{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountProfileLeverageSym) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountProfileLeverageSym) ProtoMessage() {}

func (x *AccountProfileLeverageSym) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountProfileLeverageSym.ProtoReflect.Descriptor instead.
func (*AccountProfileLeverageSym) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{6}
}

func (x *AccountProfileLeverageSym) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AccountProfileLeverageSym) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AccountProfileLeverageSym) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type AccountProfileLeverageSymSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int32   `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Profile  string  `protobuf:"bytes,2,opt,name=Profile,proto3" json:"Profile,omitempty"`
	Symbol   string  `protobuf:"bytes,3,opt,name=Symbol,proto3" json:"Symbol,omitempty"`
	Leverage float64 `protobuf:"fixed64,4,opt,name=Leverage,proto3" json:"Leverage,omitempty"`
}

func (x *AccountProfileLeverageSymSetting) Reset() {
	*x = AccountProfileLeverageSymSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountProfileLeverageSymSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountProfileLeverageSymSetting) ProtoMessage() {}

func (x *AccountProfileLeverageSymSetting) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountProfileLeverageSymSetting.ProtoReflect.Descriptor instead.
func (*AccountProfileLeverageSymSetting) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{7}
}

func (x *AccountProfileLeverageSymSetting) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AccountProfileLeverageSymSetting) GetProfile() string {
	if x != nil {
		return x.Profile
	}
	return ""
}

func (x *AccountProfileLeverageSymSetting) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *AccountProfileLeverageSymSetting) GetLeverage() float64 {
	if x != nil {
		return x.Leverage
	}
	return 0
}

type AccountProfileLimitCurrency struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
}

func (x *AccountProfileLimitCurrency) Reset() {
	*x = AccountProfileLimitCurrency{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountProfileLimitCurrency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountProfileLimitCurrency) ProtoMessage() {}

func (x *AccountProfileLimitCurrency) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountProfileLimitCurrency.ProtoReflect.Descriptor instead.
func (*AccountProfileLimitCurrency) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{8}
}

func (x *AccountProfileLimitCurrency) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AccountProfileLimitCurrency) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AccountProfileLimitCurrency) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type AccountProfileLimitCurrencySetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int32   `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Profile  string  `protobuf:"bytes,2,opt,name=Profile,proto3" json:"Profile,omitempty"`
	Currency string  `protobuf:"bytes,3,opt,name=Currency,proto3" json:"Currency,omitempty"`
	Limit    float64 `protobuf:"fixed64,4,opt,name=Limit,proto3" json:"Limit,omitempty"`
	Perc     float64 `protobuf:"fixed64,5,opt,name=Perc,proto3" json:"Perc,omitempty"`
}

func (x *AccountProfileLimitCurrencySetting) Reset() {
	*x = AccountProfileLimitCurrencySetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountProfileLimitCurrencySetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountProfileLimitCurrencySetting) ProtoMessage() {}

func (x *AccountProfileLimitCurrencySetting) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountProfileLimitCurrencySetting.ProtoReflect.Descriptor instead.
func (*AccountProfileLimitCurrencySetting) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{9}
}

func (x *AccountProfileLimitCurrencySetting) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AccountProfileLimitCurrencySetting) GetProfile() string {
	if x != nil {
		return x.Profile
	}
	return ""
}

func (x *AccountProfileLimitCurrencySetting) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *AccountProfileLimitCurrencySetting) GetLimit() float64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *AccountProfileLimitCurrencySetting) GetPerc() float64 {
	if x != nil {
		return x.Perc
	}
	return 0
}

type AccountProfileLimitSymbol struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
}

func (x *AccountProfileLimitSymbol) Reset() {
	*x = AccountProfileLimitSymbol{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountProfileLimitSymbol) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountProfileLimitSymbol) ProtoMessage() {}

func (x *AccountProfileLimitSymbol) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountProfileLimitSymbol.ProtoReflect.Descriptor instead.
func (*AccountProfileLimitSymbol) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{10}
}

func (x *AccountProfileLimitSymbol) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AccountProfileLimitSymbol) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AccountProfileLimitSymbol) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type AccountProfileLimitSymbolSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int32   `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Profile string  `protobuf:"bytes,2,opt,name=Profile,proto3" json:"Profile,omitempty"`
	Symbol  string  `protobuf:"bytes,3,opt,name=Symbol,proto3" json:"Symbol,omitempty"`
	Limit   float64 `protobuf:"fixed64,4,opt,name=Limit,proto3" json:"Limit,omitempty"`
	Perc    float64 `protobuf:"fixed64,5,opt,name=Perc,proto3" json:"Perc,omitempty"`
	Ccy     string  `protobuf:"bytes,6,opt,name=Ccy,proto3" json:"Ccy,omitempty"`
}

func (x *AccountProfileLimitSymbolSetting) Reset() {
	*x = AccountProfileLimitSymbolSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountProfileLimitSymbolSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountProfileLimitSymbolSetting) ProtoMessage() {}

func (x *AccountProfileLimitSymbolSetting) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountProfileLimitSymbolSetting.ProtoReflect.Descriptor instead.
func (*AccountProfileLimitSymbolSetting) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{11}
}

func (x *AccountProfileLimitSymbolSetting) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AccountProfileLimitSymbolSetting) GetProfile() string {
	if x != nil {
		return x.Profile
	}
	return ""
}

func (x *AccountProfileLimitSymbolSetting) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *AccountProfileLimitSymbolSetting) GetLimit() float64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *AccountProfileLimitSymbolSetting) GetPerc() float64 {
	if x != nil {
		return x.Perc
	}
	return 0
}

func (x *AccountProfileLimitSymbolSetting) GetCcy() string {
	if x != nil {
		return x.Ccy
	}
	return ""
}

type AccountProfilePl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
}

func (x *AccountProfilePl) Reset() {
	*x = AccountProfilePl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountProfilePl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountProfilePl) ProtoMessage() {}

func (x *AccountProfilePl) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountProfilePl.ProtoReflect.Descriptor instead.
func (*AccountProfilePl) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{12}
}

func (x *AccountProfilePl) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AccountProfilePl) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AccountProfilePl) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type AccountProfilePlSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int32   `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Profile  string  `protobuf:"bytes,2,opt,name=Profile,proto3" json:"Profile,omitempty"`
	Symbol   string  `protobuf:"bytes,3,opt,name=Symbol,proto3" json:"Symbol,omitempty"`
	Time     string  `protobuf:"bytes,4,opt,name=Time,proto3" json:"Time,omitempty"`
	Interval int32   `protobuf:"varint,5,opt,name=Interval,proto3" json:"Interval,omitempty"`
	Ccy      string  `protobuf:"bytes,6,opt,name=Ccy,proto3" json:"Ccy,omitempty"`
	Markup   float64 `protobuf:"fixed64,7,opt,name=Markup,proto3" json:"Markup,omitempty"`
	Comment  string  `protobuf:"bytes,8,opt,name=Comment,proto3" json:"Comment,omitempty"`
	Comment2 string  `protobuf:"bytes,9,opt,name=Comment2,proto3" json:"Comment2,omitempty"`
}

func (x *AccountProfilePlSetting) Reset() {
	*x = AccountProfilePlSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountProfilePlSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountProfilePlSetting) ProtoMessage() {}

func (x *AccountProfilePlSetting) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountProfilePlSetting.ProtoReflect.Descriptor instead.
func (*AccountProfilePlSetting) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{13}
}

func (x *AccountProfilePlSetting) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AccountProfilePlSetting) GetProfile() string {
	if x != nil {
		return x.Profile
	}
	return ""
}

func (x *AccountProfilePlSetting) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *AccountProfilePlSetting) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *AccountProfilePlSetting) GetInterval() int32 {
	if x != nil {
		return x.Interval
	}
	return 0
}

func (x *AccountProfilePlSetting) GetCcy() string {
	if x != nil {
		return x.Ccy
	}
	return ""
}

func (x *AccountProfilePlSetting) GetMarkup() float64 {
	if x != nil {
		return x.Markup
	}
	return 0
}

func (x *AccountProfilePlSetting) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *AccountProfilePlSetting) GetComment2() string {
	if x != nil {
		return x.Comment2
	}
	return ""
}

type AccountProfileSwap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
}

func (x *AccountProfileSwap) Reset() {
	*x = AccountProfileSwap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountProfileSwap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountProfileSwap) ProtoMessage() {}

func (x *AccountProfileSwap) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountProfileSwap.ProtoReflect.Descriptor instead.
func (*AccountProfileSwap) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{14}
}

func (x *AccountProfileSwap) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AccountProfileSwap) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AccountProfileSwap) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type AccountProfileSwapSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32   `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Profile    string  `protobuf:"bytes,2,opt,name=Profile,proto3" json:"Profile,omitempty"`
	Symbol     string  `protobuf:"bytes,3,opt,name=Symbol,proto3" json:"Symbol,omitempty"`
	Type       string  `protobuf:"bytes,4,opt,name=Type,proto3" json:"Type,omitempty"`
	Long       float64 `protobuf:"fixed64,5,opt,name=Long,proto3" json:"Long,omitempty"`
	Short      float64 `protobuf:"fixed64,6,opt,name=Short,proto3" json:"Short,omitempty"`
	Time       string  `protobuf:"bytes,7,opt,name=Time,proto3" json:"Time,omitempty"`
	Interval   int32   `protobuf:"varint,8,opt,name=Interval,proto3" json:"Interval,omitempty"`
	Ccy        string  `protobuf:"bytes,9,opt,name=Ccy,proto3" json:"Ccy,omitempty"`
	Comment    string  `protobuf:"bytes,10,opt,name=Comment,proto3" json:"Comment,omitempty"`
	Percentage float64 `protobuf:"fixed64,11,opt,name=Percentage,proto3" json:"Percentage,omitempty"`
	Comment2   string  `protobuf:"bytes,12,opt,name=Comment2,proto3" json:"Comment2,omitempty"`
}

func (x *AccountProfileSwapSetting) Reset() {
	*x = AccountProfileSwapSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountProfileSwapSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountProfileSwapSetting) ProtoMessage() {}

func (x *AccountProfileSwapSetting) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountProfileSwapSetting.ProtoReflect.Descriptor instead.
func (*AccountProfileSwapSetting) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{15}
}

func (x *AccountProfileSwapSetting) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AccountProfileSwapSetting) GetProfile() string {
	if x != nil {
		return x.Profile
	}
	return ""
}

func (x *AccountProfileSwapSetting) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *AccountProfileSwapSetting) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *AccountProfileSwapSetting) GetLong() float64 {
	if x != nil {
		return x.Long
	}
	return 0
}

func (x *AccountProfileSwapSetting) GetShort() float64 {
	if x != nil {
		return x.Short
	}
	return 0
}

func (x *AccountProfileSwapSetting) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *AccountProfileSwapSetting) GetInterval() int32 {
	if x != nil {
		return x.Interval
	}
	return 0
}

func (x *AccountProfileSwapSetting) GetCcy() string {
	if x != nil {
		return x.Ccy
	}
	return ""
}

func (x *AccountProfileSwapSetting) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *AccountProfileSwapSetting) GetPercentage() float64 {
	if x != nil {
		return x.Percentage
	}
	return 0
}

func (x *AccountProfileSwapSetting) GetComment2() string {
	if x != nil {
		return x.Comment2
	}
	return ""
}

type AccountProfileWallet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
}

func (x *AccountProfileWallet) Reset() {
	*x = AccountProfileWallet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountProfileWallet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountProfileWallet) ProtoMessage() {}

func (x *AccountProfileWallet) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountProfileWallet.ProtoReflect.Descriptor instead.
func (*AccountProfileWallet) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{16}
}

func (x *AccountProfileWallet) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AccountProfileWallet) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AccountProfileWallet) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type AccountProfileWalletSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Profile     int32  `protobuf:"varint,2,opt,name=Profile,proto3" json:"Profile,omitempty"`
	Name        string `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`
	Pl          bool   `protobuf:"varint,5,opt,name=Pl,proto3" json:"Pl,omitempty"`
	Swap        bool   `protobuf:"varint,6,opt,name=Swap,proto3" json:"Swap,omitempty"`
	Dividend    bool   `protobuf:"varint,7,opt,name=Dividend,proto3" json:"Dividend,omitempty"`
	DividendTax bool   `protobuf:"varint,8,opt,name=DividendTax,proto3" json:"DividendTax,omitempty"`
}

func (x *AccountProfileWalletSetting) Reset() {
	*x = AccountProfileWalletSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountProfileWalletSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountProfileWalletSetting) ProtoMessage() {}

func (x *AccountProfileWalletSetting) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountProfileWalletSetting.ProtoReflect.Descriptor instead.
func (*AccountProfileWalletSetting) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{17}
}

func (x *AccountProfileWalletSetting) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AccountProfileWalletSetting) GetProfile() int32 {
	if x != nil {
		return x.Profile
	}
	return 0
}

func (x *AccountProfileWalletSetting) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AccountProfileWalletSetting) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AccountProfileWalletSetting) GetPl() bool {
	if x != nil {
		return x.Pl
	}
	return false
}

func (x *AccountProfileWalletSetting) GetSwap() bool {
	if x != nil {
		return x.Swap
	}
	return false
}

func (x *AccountProfileWalletSetting) GetDividend() bool {
	if x != nil {
		return x.Dividend
	}
	return false
}

func (x *AccountProfileWalletSetting) GetDividendTax() bool {
	if x != nil {
		return x.DividendTax
	}
	return false
}

type AccountSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                      int32   `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Type                    string  `protobuf:"bytes,2,opt,name=Type,proto3" json:"Type,omitempty"`
	Name                    string  `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	Currency                string  `protobuf:"bytes,4,opt,name=Currency,proto3" json:"Currency,omitempty"`
	Stopout                 int32   `protobuf:"varint,5,opt,name=Stopout,proto3" json:"Stopout,omitempty"`
	Description             string  `protobuf:"bytes,6,opt,name=Description,proto3" json:"Description,omitempty"`
	Parent                  int32   `protobuf:"varint,7,opt,name=Parent,proto3" json:"Parent,omitempty"`
	Warn                    string  `protobuf:"bytes,8,opt,name=Warn,proto3" json:"Warn,omitempty"`
	Underflow_Short         int32   `protobuf:"varint,9,opt,name=Underflow_Short,json=UnderflowShort,proto3" json:"Underflow_Short,omitempty"`
	ProfileNetting          string  `protobuf:"bytes,10,opt,name=ProfileNetting,proto3" json:"ProfileNetting,omitempty"`
	ProfileLeverageCcy      string  `protobuf:"bytes,11,opt,name=ProfileLeverageCcy,proto3" json:"ProfileLeverageCcy,omitempty"`
	ProfileLimitCcy         string  `protobuf:"bytes,12,opt,name=ProfileLimitCcy,proto3" json:"ProfileLimitCcy,omitempty"`
	ProfileLimitSymbol      string  `protobuf:"bytes,13,opt,name=ProfileLimitSymbol,proto3" json:"ProfileLimitSymbol,omitempty"`
	ProfileSettlement       string  `protobuf:"bytes,14,opt,name=ProfileSettlement,proto3" json:"ProfileSettlement,omitempty"`
	ProfileSwap             string  `protobuf:"bytes,15,opt,name=ProfileSwap,proto3" json:"ProfileSwap,omitempty"`
	ExpLimit                float64 `protobuf:"fixed64,16,opt,name=ExpLimit,proto3" json:"ExpLimit,omitempty"`
	ExpDelta                float64 `protobuf:"fixed64,17,opt,name=ExpDelta,proto3" json:"ExpDelta,omitempty"`
	ExpSpan                 int32   `protobuf:"varint,18,opt,name=ExpSpan,proto3" json:"ExpSpan,omitempty"`
	UpdateInterval          int32   `protobuf:"varint,19,opt,name=UpdateInterval,proto3" json:"UpdateInterval,omitempty"`
	ProfileLeverageSym      string  `protobuf:"bytes,20,opt,name=ProfileLeverageSym,proto3" json:"ProfileLeverageSym,omitempty"`
	Underflow               bool    `protobuf:"varint,21,opt,name=Underflow,proto3" json:"Underflow,omitempty"`
	ProfilePl               string  `protobuf:"bytes,22,opt,name=ProfilePl,proto3" json:"ProfilePl,omitempty"`
	StopoutConnector        string  `protobuf:"bytes,23,opt,name=Stopout_connector,json=StopoutConnector,proto3" json:"Stopout_connector,omitempty"`
	StopoutConnectorAccount string  `protobuf:"bytes,24,opt,name=Stopout_connector_account,json=StopoutConnectorAccount,proto3" json:"Stopout_connector_account,omitempty"`
	StopoutLevel            float64 `protobuf:"fixed64,25,opt,name=StopoutLevel,proto3" json:"StopoutLevel,omitempty"`
	Group                   int32   `protobuf:"varint,26,opt,name=Group,proto3" json:"Group,omitempty"`
	Enable                  bool    `protobuf:"varint,27,opt,name=Enable,proto3" json:"Enable,omitempty"`
}

func (x *AccountSetting) Reset() {
	*x = AccountSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountSetting) ProtoMessage() {}

func (x *AccountSetting) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountSetting.ProtoReflect.Descriptor instead.
func (*AccountSetting) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{18}
}

func (x *AccountSetting) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AccountSetting) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *AccountSetting) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AccountSetting) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *AccountSetting) GetStopout() int32 {
	if x != nil {
		return x.Stopout
	}
	return 0
}

func (x *AccountSetting) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AccountSetting) GetParent() int32 {
	if x != nil {
		return x.Parent
	}
	return 0
}

func (x *AccountSetting) GetWarn() string {
	if x != nil {
		return x.Warn
	}
	return ""
}

func (x *AccountSetting) GetUnderflow_Short() int32 {
	if x != nil {
		return x.Underflow_Short
	}
	return 0
}

func (x *AccountSetting) GetProfileNetting() string {
	if x != nil {
		return x.ProfileNetting
	}
	return ""
}

func (x *AccountSetting) GetProfileLeverageCcy() string {
	if x != nil {
		return x.ProfileLeverageCcy
	}
	return ""
}

func (x *AccountSetting) GetProfileLimitCcy() string {
	if x != nil {
		return x.ProfileLimitCcy
	}
	return ""
}

func (x *AccountSetting) GetProfileLimitSymbol() string {
	if x != nil {
		return x.ProfileLimitSymbol
	}
	return ""
}

func (x *AccountSetting) GetProfileSettlement() string {
	if x != nil {
		return x.ProfileSettlement
	}
	return ""
}

func (x *AccountSetting) GetProfileSwap() string {
	if x != nil {
		return x.ProfileSwap
	}
	return ""
}

func (x *AccountSetting) GetExpLimit() float64 {
	if x != nil {
		return x.ExpLimit
	}
	return 0
}

func (x *AccountSetting) GetExpDelta() float64 {
	if x != nil {
		return x.ExpDelta
	}
	return 0
}

func (x *AccountSetting) GetExpSpan() int32 {
	if x != nil {
		return x.ExpSpan
	}
	return 0
}

func (x *AccountSetting) GetUpdateInterval() int32 {
	if x != nil {
		return x.UpdateInterval
	}
	return 0
}

func (x *AccountSetting) GetProfileLeverageSym() string {
	if x != nil {
		return x.ProfileLeverageSym
	}
	return ""
}

func (x *AccountSetting) GetUnderflow() bool {
	if x != nil {
		return x.Underflow
	}
	return false
}

func (x *AccountSetting) GetProfilePl() string {
	if x != nil {
		return x.ProfilePl
	}
	return ""
}

func (x *AccountSetting) GetStopoutConnector() string {
	if x != nil {
		return x.StopoutConnector
	}
	return ""
}

func (x *AccountSetting) GetStopoutConnectorAccount() string {
	if x != nil {
		return x.StopoutConnectorAccount
	}
	return ""
}

func (x *AccountSetting) GetStopoutLevel() float64 {
	if x != nil {
		return x.StopoutLevel
	}
	return 0
}

func (x *AccountSetting) GetGroup() int32 {
	if x != nil {
		return x.Group
	}
	return 0
}

func (x *AccountSetting) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

type CommissionConnector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Connectors string `protobuf:"bytes,2,opt,name=Connectors,proto3" json:"Connectors,omitempty"`
	Accounts   string `protobuf:"bytes,3,opt,name=Accounts,proto3" json:"Accounts,omitempty"`
	Account    string `protobuf:"bytes,4,opt,name=Account,proto3" json:"Account,omitempty"`
	Source     string `protobuf:"bytes,5,opt,name=Source,proto3" json:"Source,omitempty"`
	Profile    string `protobuf:"bytes,6,opt,name=Profile,proto3" json:"Profile,omitempty"`
	Comment    string `protobuf:"bytes,7,opt,name=Comment,proto3" json:"Comment,omitempty"`
	Enable     bool   `protobuf:"varint,8,opt,name=Enable,proto3" json:"Enable,omitempty"`
	Priority   int32  `protobuf:"varint,9,opt,name=Priority,proto3" json:"Priority,omitempty"`
}

func (x *CommissionConnector) Reset() {
	*x = CommissionConnector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommissionConnector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommissionConnector) ProtoMessage() {}

func (x *CommissionConnector) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommissionConnector.ProtoReflect.Descriptor instead.
func (*CommissionConnector) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{19}
}

func (x *CommissionConnector) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CommissionConnector) GetConnectors() string {
	if x != nil {
		return x.Connectors
	}
	return ""
}

func (x *CommissionConnector) GetAccounts() string {
	if x != nil {
		return x.Accounts
	}
	return ""
}

func (x *CommissionConnector) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *CommissionConnector) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *CommissionConnector) GetProfile() string {
	if x != nil {
		return x.Profile
	}
	return ""
}

func (x *CommissionConnector) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *CommissionConnector) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

func (x *CommissionConnector) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

type CommissionProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
}

func (x *CommissionProfile) Reset() {
	*x = CommissionProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommissionProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommissionProfile) ProtoMessage() {}

func (x *CommissionProfile) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommissionProfile.ProtoReflect.Descriptor instead.
func (*CommissionProfile) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{20}
}

func (x *CommissionProfile) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CommissionProfile) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CommissionProfile) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type CommissionProfileSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int32   `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Profile  string  `protobuf:"bytes,2,opt,name=Profile,proto3" json:"Profile,omitempty"`
	Symbol   string  `protobuf:"bytes,3,opt,name=Symbol,proto3" json:"Symbol,omitempty"`
	Type     string  `protobuf:"bytes,4,opt,name=Type,proto3" json:"Type,omitempty"`
	Value    float64 `protobuf:"fixed64,5,opt,name=Value,proto3" json:"Value,omitempty"`
	Ccy      string  `protobuf:"bytes,6,opt,name=Ccy,proto3" json:"Ccy,omitempty"`
	Comment  string  `protobuf:"bytes,7,opt,name=Comment,proto3" json:"Comment,omitempty"`
	Comment2 string  `protobuf:"bytes,8,opt,name=Comment2,proto3" json:"Comment2,omitempty"`
}

func (x *CommissionProfileSetting) Reset() {
	*x = CommissionProfileSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommissionProfileSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommissionProfileSetting) ProtoMessage() {}

func (x *CommissionProfileSetting) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommissionProfileSetting.ProtoReflect.Descriptor instead.
func (*CommissionProfileSetting) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{21}
}

func (x *CommissionProfileSetting) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CommissionProfileSetting) GetProfile() string {
	if x != nil {
		return x.Profile
	}
	return ""
}

func (x *CommissionProfileSetting) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *CommissionProfileSetting) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CommissionProfileSetting) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *CommissionProfileSetting) GetCcy() string {
	if x != nil {
		return x.Ccy
	}
	return ""
}

func (x *CommissionProfileSetting) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *CommissionProfileSetting) GetComment2() string {
	if x != nil {
		return x.Comment2
	}
	return ""
}

type ConfigApiReferenceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId   int32               `protobuf:"varint,1,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
	RequestType ConfigReferenceType `protobuf:"varint,2,opt,name=RequestType,proto3,enum=Pxm.Enums.ConfigReferenceType" json:"RequestType,omitempty"`
}

func (x *ConfigApiReferenceRequest) Reset() {
	*x = ConfigApiReferenceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiReferenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiReferenceRequest) ProtoMessage() {}

func (x *ConfigApiReferenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiReferenceRequest.ProtoReflect.Descriptor instead.
func (*ConfigApiReferenceRequest) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{22}
}

func (x *ConfigApiReferenceRequest) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *ConfigApiReferenceRequest) GetRequestType() ConfigReferenceType {
	if x != nil {
		return x.RequestType
	}
	return ConfigReferenceType_PoolExecMode
}

type ConfigApiReferenceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId   int32               `protobuf:"varint,1,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
	Data        []*IdName           `protobuf:"bytes,2,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestType ConfigReferenceType `protobuf:"varint,3,opt,name=RequestType,proto3,enum=Pxm.Enums.ConfigReferenceType" json:"RequestType,omitempty"`
}

func (x *ConfigApiReferenceResponse) Reset() {
	*x = ConfigApiReferenceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiReferenceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiReferenceResponse) ProtoMessage() {}

func (x *ConfigApiReferenceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiReferenceResponse.ProtoReflect.Descriptor instead.
func (*ConfigApiReferenceResponse) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{23}
}

func (x *ConfigApiReferenceResponse) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *ConfigApiReferenceResponse) GetData() []*IdName {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiReferenceResponse) GetRequestType() ConfigReferenceType {
	if x != nil {
		return x.RequestType
	}
	return ConfigReferenceType_PoolExecMode
}

type ConfigApiResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId int32    `protobuf:"varint,1,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
	Error     bool     `protobuf:"varint,2,opt,name=Error,proto3" json:"Error,omitempty"`
	Message   []string `protobuf:"bytes,3,rep,name=Message,proto3" json:"Message,omitempty"`
	Warnings  string   `protobuf:"bytes,4,opt,name=Warnings,proto3" json:"Warnings,omitempty"`
}

func (x *ConfigApiResponse) Reset() {
	*x = ConfigApiResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiResponse) ProtoMessage() {}

func (x *ConfigApiResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiResponse.ProtoReflect.Descriptor instead.
func (*ConfigApiResponse) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{24}
}

func (x *ConfigApiResponse) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *ConfigApiResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ConfigApiResponse) GetMessage() []string {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *ConfigApiResponse) GetWarnings() string {
	if x != nil {
		return x.Warnings
	}
	return ""
}

type ConfigApiSubscribeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId   int32            `protobuf:"varint,1,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
	Unsubscribe bool             `protobuf:"varint,2,opt,name=Unsubscribe,proto3" json:"Unsubscribe,omitempty"`
	RequestType ConfigObjectType `protobuf:"varint,3,opt,name=RequestType,proto3,enum=Pxm.Enums.ConfigObjectType" json:"RequestType,omitempty"`
}

func (x *ConfigApiSubscribeRequest) Reset() {
	*x = ConfigApiSubscribeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiSubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiSubscribeRequest) ProtoMessage() {}

func (x *ConfigApiSubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiSubscribeRequest.ProtoReflect.Descriptor instead.
func (*ConfigApiSubscribeRequest) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{25}
}

func (x *ConfigApiSubscribeRequest) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *ConfigApiSubscribeRequest) GetUnsubscribe() bool {
	if x != nil {
		return x.Unsubscribe
	}
	return false
}

func (x *ConfigApiSubscribeRequest) GetRequestType() ConfigObjectType {
	if x != nil {
		return x.RequestType
	}
	return ConfigObjectType_Connector
}

type ConfigApiSubscribeResponse_AccountGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data       []*AccountGroup  `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId  int32            `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
	UpdateType ConfigUpdateType `protobuf:"varint,3,opt,name=UpdateType,proto3,enum=Pxm.Api.ConfigUpdateType" json:"UpdateType,omitempty"`
	Error      bool             `protobuf:"varint,4,opt,name=Error,proto3" json:"Error,omitempty"`
	Message    string           `protobuf:"bytes,5,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *ConfigApiSubscribeResponse_AccountGroup) Reset() {
	*x = ConfigApiSubscribeResponse_AccountGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiSubscribeResponse_AccountGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiSubscribeResponse_AccountGroup) ProtoMessage() {}

func (x *ConfigApiSubscribeResponse_AccountGroup) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiSubscribeResponse_AccountGroup.ProtoReflect.Descriptor instead.
func (*ConfigApiSubscribeResponse_AccountGroup) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{26}
}

func (x *ConfigApiSubscribeResponse_AccountGroup) GetData() []*AccountGroup {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiSubscribeResponse_AccountGroup) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *ConfigApiSubscribeResponse_AccountGroup) GetUpdateType() ConfigUpdateType {
	if x != nil {
		return x.UpdateType
	}
	return ConfigUpdateType_Update
}

func (x *ConfigApiSubscribeResponse_AccountGroup) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ConfigApiSubscribeResponse_AccountGroup) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ConfigApiSubscribeResponse_AccountGroupSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data       []*AccountGroupSetting `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId  int32                  `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
	UpdateType ConfigUpdateType       `protobuf:"varint,3,opt,name=UpdateType,proto3,enum=Pxm.Api.ConfigUpdateType" json:"UpdateType,omitempty"`
	Error      bool                   `protobuf:"varint,4,opt,name=Error,proto3" json:"Error,omitempty"`
	Message    string                 `protobuf:"bytes,5,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *ConfigApiSubscribeResponse_AccountGroupSetting) Reset() {
	*x = ConfigApiSubscribeResponse_AccountGroupSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiSubscribeResponse_AccountGroupSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiSubscribeResponse_AccountGroupSetting) ProtoMessage() {}

func (x *ConfigApiSubscribeResponse_AccountGroupSetting) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiSubscribeResponse_AccountGroupSetting.ProtoReflect.Descriptor instead.
func (*ConfigApiSubscribeResponse_AccountGroupSetting) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{27}
}

func (x *ConfigApiSubscribeResponse_AccountGroupSetting) GetData() []*AccountGroupSetting {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiSubscribeResponse_AccountGroupSetting) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *ConfigApiSubscribeResponse_AccountGroupSetting) GetUpdateType() ConfigUpdateType {
	if x != nil {
		return x.UpdateType
	}
	return ConfigUpdateType_Update
}

func (x *ConfigApiSubscribeResponse_AccountGroupSetting) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ConfigApiSubscribeResponse_AccountGroupSetting) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ConfigApiSubscribeResponse_AccountProfileDividend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data       []*AccountProfileDividend `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId  int32                     `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
	UpdateType ConfigUpdateType          `protobuf:"varint,3,opt,name=UpdateType,proto3,enum=Pxm.Api.ConfigUpdateType" json:"UpdateType,omitempty"`
	Error      bool                      `protobuf:"varint,4,opt,name=Error,proto3" json:"Error,omitempty"`
	Message    string                    `protobuf:"bytes,5,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *ConfigApiSubscribeResponse_AccountProfileDividend) Reset() {
	*x = ConfigApiSubscribeResponse_AccountProfileDividend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiSubscribeResponse_AccountProfileDividend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiSubscribeResponse_AccountProfileDividend) ProtoMessage() {}

func (x *ConfigApiSubscribeResponse_AccountProfileDividend) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiSubscribeResponse_AccountProfileDividend.ProtoReflect.Descriptor instead.
func (*ConfigApiSubscribeResponse_AccountProfileDividend) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{28}
}

func (x *ConfigApiSubscribeResponse_AccountProfileDividend) GetData() []*AccountProfileDividend {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiSubscribeResponse_AccountProfileDividend) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *ConfigApiSubscribeResponse_AccountProfileDividend) GetUpdateType() ConfigUpdateType {
	if x != nil {
		return x.UpdateType
	}
	return ConfigUpdateType_Update
}

func (x *ConfigApiSubscribeResponse_AccountProfileDividend) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ConfigApiSubscribeResponse_AccountProfileDividend) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ConfigApiSubscribeResponse_AccountProfileDividendSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data       []*AccountProfileDividendSetting `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId  int32                            `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
	UpdateType ConfigUpdateType                 `protobuf:"varint,3,opt,name=UpdateType,proto3,enum=Pxm.Api.ConfigUpdateType" json:"UpdateType,omitempty"`
	Error      bool                             `protobuf:"varint,4,opt,name=Error,proto3" json:"Error,omitempty"`
	Message    string                           `protobuf:"bytes,5,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *ConfigApiSubscribeResponse_AccountProfileDividendSetting) Reset() {
	*x = ConfigApiSubscribeResponse_AccountProfileDividendSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiSubscribeResponse_AccountProfileDividendSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiSubscribeResponse_AccountProfileDividendSetting) ProtoMessage() {}

func (x *ConfigApiSubscribeResponse_AccountProfileDividendSetting) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiSubscribeResponse_AccountProfileDividendSetting.ProtoReflect.Descriptor instead.
func (*ConfigApiSubscribeResponse_AccountProfileDividendSetting) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{29}
}

func (x *ConfigApiSubscribeResponse_AccountProfileDividendSetting) GetData() []*AccountProfileDividendSetting {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiSubscribeResponse_AccountProfileDividendSetting) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *ConfigApiSubscribeResponse_AccountProfileDividendSetting) GetUpdateType() ConfigUpdateType {
	if x != nil {
		return x.UpdateType
	}
	return ConfigUpdateType_Update
}

func (x *ConfigApiSubscribeResponse_AccountProfileDividendSetting) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ConfigApiSubscribeResponse_AccountProfileDividendSetting) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ConfigApiSubscribeResponse_AccountProfileLeverageCcy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data       []*AccountProfileLeverageCcy `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId  int32                        `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
	UpdateType ConfigUpdateType             `protobuf:"varint,3,opt,name=UpdateType,proto3,enum=Pxm.Api.ConfigUpdateType" json:"UpdateType,omitempty"`
	Error      bool                         `protobuf:"varint,4,opt,name=Error,proto3" json:"Error,omitempty"`
	Message    string                       `protobuf:"bytes,5,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *ConfigApiSubscribeResponse_AccountProfileLeverageCcy) Reset() {
	*x = ConfigApiSubscribeResponse_AccountProfileLeverageCcy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiSubscribeResponse_AccountProfileLeverageCcy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiSubscribeResponse_AccountProfileLeverageCcy) ProtoMessage() {}

func (x *ConfigApiSubscribeResponse_AccountProfileLeverageCcy) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiSubscribeResponse_AccountProfileLeverageCcy.ProtoReflect.Descriptor instead.
func (*ConfigApiSubscribeResponse_AccountProfileLeverageCcy) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{30}
}

func (x *ConfigApiSubscribeResponse_AccountProfileLeverageCcy) GetData() []*AccountProfileLeverageCcy {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiSubscribeResponse_AccountProfileLeverageCcy) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *ConfigApiSubscribeResponse_AccountProfileLeverageCcy) GetUpdateType() ConfigUpdateType {
	if x != nil {
		return x.UpdateType
	}
	return ConfigUpdateType_Update
}

func (x *ConfigApiSubscribeResponse_AccountProfileLeverageCcy) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ConfigApiSubscribeResponse_AccountProfileLeverageCcy) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ConfigApiSubscribeResponse_AccountProfileLeverageCcySetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data       []*AccountProfileLeverageCcySetting `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId  int32                               `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
	UpdateType ConfigUpdateType                    `protobuf:"varint,3,opt,name=UpdateType,proto3,enum=Pxm.Api.ConfigUpdateType" json:"UpdateType,omitempty"`
	Error      bool                                `protobuf:"varint,4,opt,name=Error,proto3" json:"Error,omitempty"`
	Message    string                              `protobuf:"bytes,5,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *ConfigApiSubscribeResponse_AccountProfileLeverageCcySetting) Reset() {
	*x = ConfigApiSubscribeResponse_AccountProfileLeverageCcySetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiSubscribeResponse_AccountProfileLeverageCcySetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiSubscribeResponse_AccountProfileLeverageCcySetting) ProtoMessage() {}

func (x *ConfigApiSubscribeResponse_AccountProfileLeverageCcySetting) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiSubscribeResponse_AccountProfileLeverageCcySetting.ProtoReflect.Descriptor instead.
func (*ConfigApiSubscribeResponse_AccountProfileLeverageCcySetting) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{31}
}

func (x *ConfigApiSubscribeResponse_AccountProfileLeverageCcySetting) GetData() []*AccountProfileLeverageCcySetting {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiSubscribeResponse_AccountProfileLeverageCcySetting) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *ConfigApiSubscribeResponse_AccountProfileLeverageCcySetting) GetUpdateType() ConfigUpdateType {
	if x != nil {
		return x.UpdateType
	}
	return ConfigUpdateType_Update
}

func (x *ConfigApiSubscribeResponse_AccountProfileLeverageCcySetting) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ConfigApiSubscribeResponse_AccountProfileLeverageCcySetting) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ConfigApiSubscribeResponse_AccountProfileLeverageSym struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data       []*AccountProfileLeverageSym `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId  int32                        `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
	UpdateType ConfigUpdateType             `protobuf:"varint,3,opt,name=UpdateType,proto3,enum=Pxm.Api.ConfigUpdateType" json:"UpdateType,omitempty"`
	Error      bool                         `protobuf:"varint,4,opt,name=Error,proto3" json:"Error,omitempty"`
	Message    string                       `protobuf:"bytes,5,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *ConfigApiSubscribeResponse_AccountProfileLeverageSym) Reset() {
	*x = ConfigApiSubscribeResponse_AccountProfileLeverageSym{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiSubscribeResponse_AccountProfileLeverageSym) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiSubscribeResponse_AccountProfileLeverageSym) ProtoMessage() {}

func (x *ConfigApiSubscribeResponse_AccountProfileLeverageSym) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiSubscribeResponse_AccountProfileLeverageSym.ProtoReflect.Descriptor instead.
func (*ConfigApiSubscribeResponse_AccountProfileLeverageSym) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{32}
}

func (x *ConfigApiSubscribeResponse_AccountProfileLeverageSym) GetData() []*AccountProfileLeverageSym {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiSubscribeResponse_AccountProfileLeverageSym) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *ConfigApiSubscribeResponse_AccountProfileLeverageSym) GetUpdateType() ConfigUpdateType {
	if x != nil {
		return x.UpdateType
	}
	return ConfigUpdateType_Update
}

func (x *ConfigApiSubscribeResponse_AccountProfileLeverageSym) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ConfigApiSubscribeResponse_AccountProfileLeverageSym) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ConfigApiSubscribeResponse_AccountProfileLeverageSymSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data       []*AccountProfileLeverageSymSetting `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId  int32                               `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
	UpdateType ConfigUpdateType                    `protobuf:"varint,3,opt,name=UpdateType,proto3,enum=Pxm.Api.ConfigUpdateType" json:"UpdateType,omitempty"`
	Error      bool                                `protobuf:"varint,4,opt,name=Error,proto3" json:"Error,omitempty"`
	Message    string                              `protobuf:"bytes,5,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *ConfigApiSubscribeResponse_AccountProfileLeverageSymSetting) Reset() {
	*x = ConfigApiSubscribeResponse_AccountProfileLeverageSymSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiSubscribeResponse_AccountProfileLeverageSymSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiSubscribeResponse_AccountProfileLeverageSymSetting) ProtoMessage() {}

func (x *ConfigApiSubscribeResponse_AccountProfileLeverageSymSetting) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiSubscribeResponse_AccountProfileLeverageSymSetting.ProtoReflect.Descriptor instead.
func (*ConfigApiSubscribeResponse_AccountProfileLeverageSymSetting) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{33}
}

func (x *ConfigApiSubscribeResponse_AccountProfileLeverageSymSetting) GetData() []*AccountProfileLeverageSymSetting {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiSubscribeResponse_AccountProfileLeverageSymSetting) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *ConfigApiSubscribeResponse_AccountProfileLeverageSymSetting) GetUpdateType() ConfigUpdateType {
	if x != nil {
		return x.UpdateType
	}
	return ConfigUpdateType_Update
}

func (x *ConfigApiSubscribeResponse_AccountProfileLeverageSymSetting) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ConfigApiSubscribeResponse_AccountProfileLeverageSymSetting) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ConfigApiSubscribeResponse_AccountProfileLimitCurrency struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data       []*AccountProfileLimitCurrency `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId  int32                          `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
	UpdateType ConfigUpdateType               `protobuf:"varint,3,opt,name=UpdateType,proto3,enum=Pxm.Api.ConfigUpdateType" json:"UpdateType,omitempty"`
	Error      bool                           `protobuf:"varint,4,opt,name=Error,proto3" json:"Error,omitempty"`
	Message    string                         `protobuf:"bytes,5,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *ConfigApiSubscribeResponse_AccountProfileLimitCurrency) Reset() {
	*x = ConfigApiSubscribeResponse_AccountProfileLimitCurrency{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiSubscribeResponse_AccountProfileLimitCurrency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiSubscribeResponse_AccountProfileLimitCurrency) ProtoMessage() {}

func (x *ConfigApiSubscribeResponse_AccountProfileLimitCurrency) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiSubscribeResponse_AccountProfileLimitCurrency.ProtoReflect.Descriptor instead.
func (*ConfigApiSubscribeResponse_AccountProfileLimitCurrency) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{34}
}

func (x *ConfigApiSubscribeResponse_AccountProfileLimitCurrency) GetData() []*AccountProfileLimitCurrency {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiSubscribeResponse_AccountProfileLimitCurrency) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *ConfigApiSubscribeResponse_AccountProfileLimitCurrency) GetUpdateType() ConfigUpdateType {
	if x != nil {
		return x.UpdateType
	}
	return ConfigUpdateType_Update
}

func (x *ConfigApiSubscribeResponse_AccountProfileLimitCurrency) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ConfigApiSubscribeResponse_AccountProfileLimitCurrency) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ConfigApiSubscribeResponse_AccountProfileLimitCurrencySetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data       []*AccountProfileLimitCurrencySetting `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId  int32                                 `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
	UpdateType ConfigUpdateType                      `protobuf:"varint,3,opt,name=UpdateType,proto3,enum=Pxm.Api.ConfigUpdateType" json:"UpdateType,omitempty"`
	Error      bool                                  `protobuf:"varint,4,opt,name=Error,proto3" json:"Error,omitempty"`
	Message    string                                `protobuf:"bytes,5,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *ConfigApiSubscribeResponse_AccountProfileLimitCurrencySetting) Reset() {
	*x = ConfigApiSubscribeResponse_AccountProfileLimitCurrencySetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiSubscribeResponse_AccountProfileLimitCurrencySetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiSubscribeResponse_AccountProfileLimitCurrencySetting) ProtoMessage() {}

func (x *ConfigApiSubscribeResponse_AccountProfileLimitCurrencySetting) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiSubscribeResponse_AccountProfileLimitCurrencySetting.ProtoReflect.Descriptor instead.
func (*ConfigApiSubscribeResponse_AccountProfileLimitCurrencySetting) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{35}
}

func (x *ConfigApiSubscribeResponse_AccountProfileLimitCurrencySetting) GetData() []*AccountProfileLimitCurrencySetting {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiSubscribeResponse_AccountProfileLimitCurrencySetting) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *ConfigApiSubscribeResponse_AccountProfileLimitCurrencySetting) GetUpdateType() ConfigUpdateType {
	if x != nil {
		return x.UpdateType
	}
	return ConfigUpdateType_Update
}

func (x *ConfigApiSubscribeResponse_AccountProfileLimitCurrencySetting) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ConfigApiSubscribeResponse_AccountProfileLimitCurrencySetting) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ConfigApiSubscribeResponse_AccountProfileLimitSymbol struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data       []*AccountProfileLimitSymbol `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId  int32                        `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
	UpdateType ConfigUpdateType             `protobuf:"varint,3,opt,name=UpdateType,proto3,enum=Pxm.Api.ConfigUpdateType" json:"UpdateType,omitempty"`
	Error      bool                         `protobuf:"varint,4,opt,name=Error,proto3" json:"Error,omitempty"`
	Message    string                       `protobuf:"bytes,5,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *ConfigApiSubscribeResponse_AccountProfileLimitSymbol) Reset() {
	*x = ConfigApiSubscribeResponse_AccountProfileLimitSymbol{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiSubscribeResponse_AccountProfileLimitSymbol) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiSubscribeResponse_AccountProfileLimitSymbol) ProtoMessage() {}

func (x *ConfigApiSubscribeResponse_AccountProfileLimitSymbol) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiSubscribeResponse_AccountProfileLimitSymbol.ProtoReflect.Descriptor instead.
func (*ConfigApiSubscribeResponse_AccountProfileLimitSymbol) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{36}
}

func (x *ConfigApiSubscribeResponse_AccountProfileLimitSymbol) GetData() []*AccountProfileLimitSymbol {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiSubscribeResponse_AccountProfileLimitSymbol) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *ConfigApiSubscribeResponse_AccountProfileLimitSymbol) GetUpdateType() ConfigUpdateType {
	if x != nil {
		return x.UpdateType
	}
	return ConfigUpdateType_Update
}

func (x *ConfigApiSubscribeResponse_AccountProfileLimitSymbol) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ConfigApiSubscribeResponse_AccountProfileLimitSymbol) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ConfigApiSubscribeResponse_AccountProfileLimitSymbolSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data       []*AccountProfileLimitSymbolSetting `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId  int32                               `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
	UpdateType ConfigUpdateType                    `protobuf:"varint,3,opt,name=UpdateType,proto3,enum=Pxm.Api.ConfigUpdateType" json:"UpdateType,omitempty"`
	Error      bool                                `protobuf:"varint,4,opt,name=Error,proto3" json:"Error,omitempty"`
	Message    string                              `protobuf:"bytes,5,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *ConfigApiSubscribeResponse_AccountProfileLimitSymbolSetting) Reset() {
	*x = ConfigApiSubscribeResponse_AccountProfileLimitSymbolSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiSubscribeResponse_AccountProfileLimitSymbolSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiSubscribeResponse_AccountProfileLimitSymbolSetting) ProtoMessage() {}

func (x *ConfigApiSubscribeResponse_AccountProfileLimitSymbolSetting) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiSubscribeResponse_AccountProfileLimitSymbolSetting.ProtoReflect.Descriptor instead.
func (*ConfigApiSubscribeResponse_AccountProfileLimitSymbolSetting) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{37}
}

func (x *ConfigApiSubscribeResponse_AccountProfileLimitSymbolSetting) GetData() []*AccountProfileLimitSymbolSetting {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiSubscribeResponse_AccountProfileLimitSymbolSetting) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *ConfigApiSubscribeResponse_AccountProfileLimitSymbolSetting) GetUpdateType() ConfigUpdateType {
	if x != nil {
		return x.UpdateType
	}
	return ConfigUpdateType_Update
}

func (x *ConfigApiSubscribeResponse_AccountProfileLimitSymbolSetting) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ConfigApiSubscribeResponse_AccountProfileLimitSymbolSetting) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ConfigApiSubscribeResponse_AccountProfilePl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data       []*AccountProfilePl `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId  int32               `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
	UpdateType ConfigUpdateType    `protobuf:"varint,3,opt,name=UpdateType,proto3,enum=Pxm.Api.ConfigUpdateType" json:"UpdateType,omitempty"`
	Error      bool                `protobuf:"varint,4,opt,name=Error,proto3" json:"Error,omitempty"`
	Message    string              `protobuf:"bytes,5,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *ConfigApiSubscribeResponse_AccountProfilePl) Reset() {
	*x = ConfigApiSubscribeResponse_AccountProfilePl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiSubscribeResponse_AccountProfilePl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiSubscribeResponse_AccountProfilePl) ProtoMessage() {}

func (x *ConfigApiSubscribeResponse_AccountProfilePl) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiSubscribeResponse_AccountProfilePl.ProtoReflect.Descriptor instead.
func (*ConfigApiSubscribeResponse_AccountProfilePl) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{38}
}

func (x *ConfigApiSubscribeResponse_AccountProfilePl) GetData() []*AccountProfilePl {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiSubscribeResponse_AccountProfilePl) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *ConfigApiSubscribeResponse_AccountProfilePl) GetUpdateType() ConfigUpdateType {
	if x != nil {
		return x.UpdateType
	}
	return ConfigUpdateType_Update
}

func (x *ConfigApiSubscribeResponse_AccountProfilePl) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ConfigApiSubscribeResponse_AccountProfilePl) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ConfigApiSubscribeResponse_AccountProfilePlSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data       []*AccountProfilePlSetting `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId  int32                      `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
	UpdateType ConfigUpdateType           `protobuf:"varint,3,opt,name=UpdateType,proto3,enum=Pxm.Api.ConfigUpdateType" json:"UpdateType,omitempty"`
	Error      bool                       `protobuf:"varint,4,opt,name=Error,proto3" json:"Error,omitempty"`
	Message    string                     `protobuf:"bytes,5,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *ConfigApiSubscribeResponse_AccountProfilePlSetting) Reset() {
	*x = ConfigApiSubscribeResponse_AccountProfilePlSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiSubscribeResponse_AccountProfilePlSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiSubscribeResponse_AccountProfilePlSetting) ProtoMessage() {}

func (x *ConfigApiSubscribeResponse_AccountProfilePlSetting) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiSubscribeResponse_AccountProfilePlSetting.ProtoReflect.Descriptor instead.
func (*ConfigApiSubscribeResponse_AccountProfilePlSetting) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{39}
}

func (x *ConfigApiSubscribeResponse_AccountProfilePlSetting) GetData() []*AccountProfilePlSetting {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiSubscribeResponse_AccountProfilePlSetting) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *ConfigApiSubscribeResponse_AccountProfilePlSetting) GetUpdateType() ConfigUpdateType {
	if x != nil {
		return x.UpdateType
	}
	return ConfigUpdateType_Update
}

func (x *ConfigApiSubscribeResponse_AccountProfilePlSetting) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ConfigApiSubscribeResponse_AccountProfilePlSetting) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ConfigApiSubscribeResponse_AccountProfileSwap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data       []*AccountProfileSwap `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId  int32                 `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
	UpdateType ConfigUpdateType      `protobuf:"varint,3,opt,name=UpdateType,proto3,enum=Pxm.Api.ConfigUpdateType" json:"UpdateType,omitempty"`
	Error      bool                  `protobuf:"varint,4,opt,name=Error,proto3" json:"Error,omitempty"`
	Message    string                `protobuf:"bytes,5,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *ConfigApiSubscribeResponse_AccountProfileSwap) Reset() {
	*x = ConfigApiSubscribeResponse_AccountProfileSwap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiSubscribeResponse_AccountProfileSwap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiSubscribeResponse_AccountProfileSwap) ProtoMessage() {}

func (x *ConfigApiSubscribeResponse_AccountProfileSwap) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiSubscribeResponse_AccountProfileSwap.ProtoReflect.Descriptor instead.
func (*ConfigApiSubscribeResponse_AccountProfileSwap) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{40}
}

func (x *ConfigApiSubscribeResponse_AccountProfileSwap) GetData() []*AccountProfileSwap {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiSubscribeResponse_AccountProfileSwap) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *ConfigApiSubscribeResponse_AccountProfileSwap) GetUpdateType() ConfigUpdateType {
	if x != nil {
		return x.UpdateType
	}
	return ConfigUpdateType_Update
}

func (x *ConfigApiSubscribeResponse_AccountProfileSwap) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ConfigApiSubscribeResponse_AccountProfileSwap) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ConfigApiSubscribeResponse_AccountProfileSwapSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data       []*AccountProfileSwapSetting `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId  int32                        `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
	UpdateType ConfigUpdateType             `protobuf:"varint,3,opt,name=UpdateType,proto3,enum=Pxm.Api.ConfigUpdateType" json:"UpdateType,omitempty"`
	Error      bool                         `protobuf:"varint,4,opt,name=Error,proto3" json:"Error,omitempty"`
	Message    string                       `protobuf:"bytes,5,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *ConfigApiSubscribeResponse_AccountProfileSwapSetting) Reset() {
	*x = ConfigApiSubscribeResponse_AccountProfileSwapSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiSubscribeResponse_AccountProfileSwapSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiSubscribeResponse_AccountProfileSwapSetting) ProtoMessage() {}

func (x *ConfigApiSubscribeResponse_AccountProfileSwapSetting) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiSubscribeResponse_AccountProfileSwapSetting.ProtoReflect.Descriptor instead.
func (*ConfigApiSubscribeResponse_AccountProfileSwapSetting) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{41}
}

func (x *ConfigApiSubscribeResponse_AccountProfileSwapSetting) GetData() []*AccountProfileSwapSetting {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiSubscribeResponse_AccountProfileSwapSetting) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *ConfigApiSubscribeResponse_AccountProfileSwapSetting) GetUpdateType() ConfigUpdateType {
	if x != nil {
		return x.UpdateType
	}
	return ConfigUpdateType_Update
}

func (x *ConfigApiSubscribeResponse_AccountProfileSwapSetting) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ConfigApiSubscribeResponse_AccountProfileSwapSetting) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ConfigApiSubscribeResponse_AccountProfileWallet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data       []*AccountProfileWallet `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId  int32                   `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
	UpdateType ConfigUpdateType        `protobuf:"varint,3,opt,name=UpdateType,proto3,enum=Pxm.Api.ConfigUpdateType" json:"UpdateType,omitempty"`
	Error      bool                    `protobuf:"varint,4,opt,name=Error,proto3" json:"Error,omitempty"`
	Message    string                  `protobuf:"bytes,5,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *ConfigApiSubscribeResponse_AccountProfileWallet) Reset() {
	*x = ConfigApiSubscribeResponse_AccountProfileWallet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiSubscribeResponse_AccountProfileWallet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiSubscribeResponse_AccountProfileWallet) ProtoMessage() {}

func (x *ConfigApiSubscribeResponse_AccountProfileWallet) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiSubscribeResponse_AccountProfileWallet.ProtoReflect.Descriptor instead.
func (*ConfigApiSubscribeResponse_AccountProfileWallet) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{42}
}

func (x *ConfigApiSubscribeResponse_AccountProfileWallet) GetData() []*AccountProfileWallet {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiSubscribeResponse_AccountProfileWallet) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *ConfigApiSubscribeResponse_AccountProfileWallet) GetUpdateType() ConfigUpdateType {
	if x != nil {
		return x.UpdateType
	}
	return ConfigUpdateType_Update
}

func (x *ConfigApiSubscribeResponse_AccountProfileWallet) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ConfigApiSubscribeResponse_AccountProfileWallet) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ConfigApiSubscribeResponse_AccountProfileWalletSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data       []*AccountProfileWalletSetting `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId  int32                          `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
	UpdateType ConfigUpdateType               `protobuf:"varint,3,opt,name=UpdateType,proto3,enum=Pxm.Api.ConfigUpdateType" json:"UpdateType,omitempty"`
	Error      bool                           `protobuf:"varint,4,opt,name=Error,proto3" json:"Error,omitempty"`
	Message    string                         `protobuf:"bytes,5,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *ConfigApiSubscribeResponse_AccountProfileWalletSetting) Reset() {
	*x = ConfigApiSubscribeResponse_AccountProfileWalletSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiSubscribeResponse_AccountProfileWalletSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiSubscribeResponse_AccountProfileWalletSetting) ProtoMessage() {}

func (x *ConfigApiSubscribeResponse_AccountProfileWalletSetting) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiSubscribeResponse_AccountProfileWalletSetting.ProtoReflect.Descriptor instead.
func (*ConfigApiSubscribeResponse_AccountProfileWalletSetting) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{43}
}

func (x *ConfigApiSubscribeResponse_AccountProfileWalletSetting) GetData() []*AccountProfileWalletSetting {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiSubscribeResponse_AccountProfileWalletSetting) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *ConfigApiSubscribeResponse_AccountProfileWalletSetting) GetUpdateType() ConfigUpdateType {
	if x != nil {
		return x.UpdateType
	}
	return ConfigUpdateType_Update
}

func (x *ConfigApiSubscribeResponse_AccountProfileWalletSetting) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ConfigApiSubscribeResponse_AccountProfileWalletSetting) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ConfigApiSubscribeResponse_AccountSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data       []*AccountSetting `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId  int32             `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
	UpdateType ConfigUpdateType  `protobuf:"varint,3,opt,name=UpdateType,proto3,enum=Pxm.Api.ConfigUpdateType" json:"UpdateType,omitempty"`
	Error      bool              `protobuf:"varint,4,opt,name=Error,proto3" json:"Error,omitempty"`
	Message    string            `protobuf:"bytes,5,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *ConfigApiSubscribeResponse_AccountSetting) Reset() {
	*x = ConfigApiSubscribeResponse_AccountSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiSubscribeResponse_AccountSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiSubscribeResponse_AccountSetting) ProtoMessage() {}

func (x *ConfigApiSubscribeResponse_AccountSetting) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiSubscribeResponse_AccountSetting.ProtoReflect.Descriptor instead.
func (*ConfigApiSubscribeResponse_AccountSetting) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{44}
}

func (x *ConfigApiSubscribeResponse_AccountSetting) GetData() []*AccountSetting {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiSubscribeResponse_AccountSetting) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *ConfigApiSubscribeResponse_AccountSetting) GetUpdateType() ConfigUpdateType {
	if x != nil {
		return x.UpdateType
	}
	return ConfigUpdateType_Update
}

func (x *ConfigApiSubscribeResponse_AccountSetting) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ConfigApiSubscribeResponse_AccountSetting) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ConfigApiSubscribeResponse_CommissionConnector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data       []*CommissionConnector `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId  int32                  `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
	UpdateType ConfigUpdateType       `protobuf:"varint,3,opt,name=UpdateType,proto3,enum=Pxm.Api.ConfigUpdateType" json:"UpdateType,omitempty"`
	Error      bool                   `protobuf:"varint,4,opt,name=Error,proto3" json:"Error,omitempty"`
	Message    string                 `protobuf:"bytes,5,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *ConfigApiSubscribeResponse_CommissionConnector) Reset() {
	*x = ConfigApiSubscribeResponse_CommissionConnector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiSubscribeResponse_CommissionConnector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiSubscribeResponse_CommissionConnector) ProtoMessage() {}

func (x *ConfigApiSubscribeResponse_CommissionConnector) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiSubscribeResponse_CommissionConnector.ProtoReflect.Descriptor instead.
func (*ConfigApiSubscribeResponse_CommissionConnector) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{45}
}

func (x *ConfigApiSubscribeResponse_CommissionConnector) GetData() []*CommissionConnector {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiSubscribeResponse_CommissionConnector) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *ConfigApiSubscribeResponse_CommissionConnector) GetUpdateType() ConfigUpdateType {
	if x != nil {
		return x.UpdateType
	}
	return ConfigUpdateType_Update
}

func (x *ConfigApiSubscribeResponse_CommissionConnector) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ConfigApiSubscribeResponse_CommissionConnector) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ConfigApiSubscribeResponse_CommissionProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data       []*CommissionProfile `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId  int32                `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
	UpdateType ConfigUpdateType     `protobuf:"varint,3,opt,name=UpdateType,proto3,enum=Pxm.Api.ConfigUpdateType" json:"UpdateType,omitempty"`
	Error      bool                 `protobuf:"varint,4,opt,name=Error,proto3" json:"Error,omitempty"`
	Message    string               `protobuf:"bytes,5,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *ConfigApiSubscribeResponse_CommissionProfile) Reset() {
	*x = ConfigApiSubscribeResponse_CommissionProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiSubscribeResponse_CommissionProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiSubscribeResponse_CommissionProfile) ProtoMessage() {}

func (x *ConfigApiSubscribeResponse_CommissionProfile) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiSubscribeResponse_CommissionProfile.ProtoReflect.Descriptor instead.
func (*ConfigApiSubscribeResponse_CommissionProfile) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{46}
}

func (x *ConfigApiSubscribeResponse_CommissionProfile) GetData() []*CommissionProfile {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiSubscribeResponse_CommissionProfile) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *ConfigApiSubscribeResponse_CommissionProfile) GetUpdateType() ConfigUpdateType {
	if x != nil {
		return x.UpdateType
	}
	return ConfigUpdateType_Update
}

func (x *ConfigApiSubscribeResponse_CommissionProfile) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ConfigApiSubscribeResponse_CommissionProfile) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ConfigApiSubscribeResponse_CommissionProfileSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data       []*CommissionProfileSetting `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId  int32                       `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
	UpdateType ConfigUpdateType            `protobuf:"varint,3,opt,name=UpdateType,proto3,enum=Pxm.Api.ConfigUpdateType" json:"UpdateType,omitempty"`
	Error      bool                        `protobuf:"varint,4,opt,name=Error,proto3" json:"Error,omitempty"`
	Message    string                      `protobuf:"bytes,5,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *ConfigApiSubscribeResponse_CommissionProfileSetting) Reset() {
	*x = ConfigApiSubscribeResponse_CommissionProfileSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiSubscribeResponse_CommissionProfileSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiSubscribeResponse_CommissionProfileSetting) ProtoMessage() {}

func (x *ConfigApiSubscribeResponse_CommissionProfileSetting) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiSubscribeResponse_CommissionProfileSetting.ProtoReflect.Descriptor instead.
func (*ConfigApiSubscribeResponse_CommissionProfileSetting) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{47}
}

func (x *ConfigApiSubscribeResponse_CommissionProfileSetting) GetData() []*CommissionProfileSetting {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiSubscribeResponse_CommissionProfileSetting) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *ConfigApiSubscribeResponse_CommissionProfileSetting) GetUpdateType() ConfigUpdateType {
	if x != nil {
		return x.UpdateType
	}
	return ConfigUpdateType_Update
}

func (x *ConfigApiSubscribeResponse_CommissionProfileSetting) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ConfigApiSubscribeResponse_CommissionProfileSetting) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ConfigApiSubscribeResponse_Connector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data       []*Connector     `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId  int32            `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
	UpdateType ConfigUpdateType `protobuf:"varint,3,opt,name=UpdateType,proto3,enum=Pxm.Api.ConfigUpdateType" json:"UpdateType,omitempty"`
	Error      bool             `protobuf:"varint,4,opt,name=Error,proto3" json:"Error,omitempty"`
	Message    string           `protobuf:"bytes,5,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *ConfigApiSubscribeResponse_Connector) Reset() {
	*x = ConfigApiSubscribeResponse_Connector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiSubscribeResponse_Connector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiSubscribeResponse_Connector) ProtoMessage() {}

func (x *ConfigApiSubscribeResponse_Connector) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiSubscribeResponse_Connector.ProtoReflect.Descriptor instead.
func (*ConfigApiSubscribeResponse_Connector) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{48}
}

func (x *ConfigApiSubscribeResponse_Connector) GetData() []*Connector {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiSubscribeResponse_Connector) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *ConfigApiSubscribeResponse_Connector) GetUpdateType() ConfigUpdateType {
	if x != nil {
		return x.UpdateType
	}
	return ConfigUpdateType_Update
}

func (x *ConfigApiSubscribeResponse_Connector) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ConfigApiSubscribeResponse_Connector) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ConfigApiSubscribeResponse_ConnectorAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data       []*ConnectorAccount `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId  int32               `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
	UpdateType ConfigUpdateType    `protobuf:"varint,3,opt,name=UpdateType,proto3,enum=Pxm.Api.ConfigUpdateType" json:"UpdateType,omitempty"`
	Error      bool                `protobuf:"varint,4,opt,name=Error,proto3" json:"Error,omitempty"`
	Message    string              `protobuf:"bytes,5,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *ConfigApiSubscribeResponse_ConnectorAccount) Reset() {
	*x = ConfigApiSubscribeResponse_ConnectorAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiSubscribeResponse_ConnectorAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiSubscribeResponse_ConnectorAccount) ProtoMessage() {}

func (x *ConfigApiSubscribeResponse_ConnectorAccount) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiSubscribeResponse_ConnectorAccount.ProtoReflect.Descriptor instead.
func (*ConfigApiSubscribeResponse_ConnectorAccount) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{49}
}

func (x *ConfigApiSubscribeResponse_ConnectorAccount) GetData() []*ConnectorAccount {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiSubscribeResponse_ConnectorAccount) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *ConfigApiSubscribeResponse_ConnectorAccount) GetUpdateType() ConfigUpdateType {
	if x != nil {
		return x.UpdateType
	}
	return ConfigUpdateType_Update
}

func (x *ConfigApiSubscribeResponse_ConnectorAccount) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ConfigApiSubscribeResponse_ConnectorAccount) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ConfigApiSubscribeResponse_ConnectorAccountSymbol struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data       []*ConnectorAccountSymbol `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId  int32                     `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
	UpdateType ConfigUpdateType          `protobuf:"varint,3,opt,name=UpdateType,proto3,enum=Pxm.Api.ConfigUpdateType" json:"UpdateType,omitempty"`
	Error      bool                      `protobuf:"varint,4,opt,name=Error,proto3" json:"Error,omitempty"`
	Message    string                    `protobuf:"bytes,5,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *ConfigApiSubscribeResponse_ConnectorAccountSymbol) Reset() {
	*x = ConfigApiSubscribeResponse_ConnectorAccountSymbol{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiSubscribeResponse_ConnectorAccountSymbol) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiSubscribeResponse_ConnectorAccountSymbol) ProtoMessage() {}

func (x *ConfigApiSubscribeResponse_ConnectorAccountSymbol) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiSubscribeResponse_ConnectorAccountSymbol.ProtoReflect.Descriptor instead.
func (*ConfigApiSubscribeResponse_ConnectorAccountSymbol) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{50}
}

func (x *ConfigApiSubscribeResponse_ConnectorAccountSymbol) GetData() []*ConnectorAccountSymbol {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiSubscribeResponse_ConnectorAccountSymbol) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *ConfigApiSubscribeResponse_ConnectorAccountSymbol) GetUpdateType() ConfigUpdateType {
	if x != nil {
		return x.UpdateType
	}
	return ConfigUpdateType_Update
}

func (x *ConfigApiSubscribeResponse_ConnectorAccountSymbol) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ConfigApiSubscribeResponse_ConnectorAccountSymbol) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ConfigApiSubscribeResponse_ConnectorConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data       []*ConnectorConfig `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId  int32              `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
	UpdateType ConfigUpdateType   `protobuf:"varint,3,opt,name=UpdateType,proto3,enum=Pxm.Api.ConfigUpdateType" json:"UpdateType,omitempty"`
	Error      bool               `protobuf:"varint,4,opt,name=Error,proto3" json:"Error,omitempty"`
	Message    string             `protobuf:"bytes,5,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *ConfigApiSubscribeResponse_ConnectorConfig) Reset() {
	*x = ConfigApiSubscribeResponse_ConnectorConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiSubscribeResponse_ConnectorConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiSubscribeResponse_ConnectorConfig) ProtoMessage() {}

func (x *ConfigApiSubscribeResponse_ConnectorConfig) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiSubscribeResponse_ConnectorConfig.ProtoReflect.Descriptor instead.
func (*ConfigApiSubscribeResponse_ConnectorConfig) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{51}
}

func (x *ConfigApiSubscribeResponse_ConnectorConfig) GetData() []*ConnectorConfig {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiSubscribeResponse_ConnectorConfig) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *ConfigApiSubscribeResponse_ConnectorConfig) GetUpdateType() ConfigUpdateType {
	if x != nil {
		return x.UpdateType
	}
	return ConfigUpdateType_Update
}

func (x *ConfigApiSubscribeResponse_ConnectorConfig) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ConfigApiSubscribeResponse_ConnectorConfig) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ConfigApiSubscribeResponse_ConnectorConfigSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data       []*ConnectorConfigSetting `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId  int32                     `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
	UpdateType ConfigUpdateType          `protobuf:"varint,3,opt,name=UpdateType,proto3,enum=Pxm.Api.ConfigUpdateType" json:"UpdateType,omitempty"`
	Error      bool                      `protobuf:"varint,4,opt,name=Error,proto3" json:"Error,omitempty"`
	Message    string                    `protobuf:"bytes,5,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *ConfigApiSubscribeResponse_ConnectorConfigSetting) Reset() {
	*x = ConfigApiSubscribeResponse_ConnectorConfigSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiSubscribeResponse_ConnectorConfigSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiSubscribeResponse_ConnectorConfigSetting) ProtoMessage() {}

func (x *ConfigApiSubscribeResponse_ConnectorConfigSetting) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiSubscribeResponse_ConnectorConfigSetting.ProtoReflect.Descriptor instead.
func (*ConfigApiSubscribeResponse_ConnectorConfigSetting) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{52}
}

func (x *ConfigApiSubscribeResponse_ConnectorConfigSetting) GetData() []*ConnectorConfigSetting {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiSubscribeResponse_ConnectorConfigSetting) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *ConfigApiSubscribeResponse_ConnectorConfigSetting) GetUpdateType() ConfigUpdateType {
	if x != nil {
		return x.UpdateType
	}
	return ConfigUpdateType_Update
}

func (x *ConfigApiSubscribeResponse_ConnectorConfigSetting) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ConfigApiSubscribeResponse_ConnectorConfigSetting) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ConfigApiSubscribeResponse_ConnectorProfileXhedge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data       []*ConnectorProfileXhedge `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId  int32                     `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
	UpdateType ConfigUpdateType          `protobuf:"varint,3,opt,name=UpdateType,proto3,enum=Pxm.Api.ConfigUpdateType" json:"UpdateType,omitempty"`
	Error      bool                      `protobuf:"varint,4,opt,name=Error,proto3" json:"Error,omitempty"`
	Message    string                    `protobuf:"bytes,5,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *ConfigApiSubscribeResponse_ConnectorProfileXhedge) Reset() {
	*x = ConfigApiSubscribeResponse_ConnectorProfileXhedge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiSubscribeResponse_ConnectorProfileXhedge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiSubscribeResponse_ConnectorProfileXhedge) ProtoMessage() {}

func (x *ConfigApiSubscribeResponse_ConnectorProfileXhedge) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiSubscribeResponse_ConnectorProfileXhedge.ProtoReflect.Descriptor instead.
func (*ConfigApiSubscribeResponse_ConnectorProfileXhedge) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{53}
}

func (x *ConfigApiSubscribeResponse_ConnectorProfileXhedge) GetData() []*ConnectorProfileXhedge {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiSubscribeResponse_ConnectorProfileXhedge) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *ConfigApiSubscribeResponse_ConnectorProfileXhedge) GetUpdateType() ConfigUpdateType {
	if x != nil {
		return x.UpdateType
	}
	return ConfigUpdateType_Update
}

func (x *ConfigApiSubscribeResponse_ConnectorProfileXhedge) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ConfigApiSubscribeResponse_ConnectorProfileXhedge) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ConfigApiSubscribeResponse_ConnectorProfileXhedgeSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data       []*ConnectorProfileXhedgeSetting `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId  int32                            `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
	UpdateType ConfigUpdateType                 `protobuf:"varint,3,opt,name=UpdateType,proto3,enum=Pxm.Api.ConfigUpdateType" json:"UpdateType,omitempty"`
	Error      bool                             `protobuf:"varint,4,opt,name=Error,proto3" json:"Error,omitempty"`
	Message    string                           `protobuf:"bytes,5,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *ConfigApiSubscribeResponse_ConnectorProfileXhedgeSetting) Reset() {
	*x = ConfigApiSubscribeResponse_ConnectorProfileXhedgeSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiSubscribeResponse_ConnectorProfileXhedgeSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiSubscribeResponse_ConnectorProfileXhedgeSetting) ProtoMessage() {}

func (x *ConfigApiSubscribeResponse_ConnectorProfileXhedgeSetting) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiSubscribeResponse_ConnectorProfileXhedgeSetting.ProtoReflect.Descriptor instead.
func (*ConfigApiSubscribeResponse_ConnectorProfileXhedgeSetting) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{54}
}

func (x *ConfigApiSubscribeResponse_ConnectorProfileXhedgeSetting) GetData() []*ConnectorProfileXhedgeSetting {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiSubscribeResponse_ConnectorProfileXhedgeSetting) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *ConfigApiSubscribeResponse_ConnectorProfileXhedgeSetting) GetUpdateType() ConfigUpdateType {
	if x != nil {
		return x.UpdateType
	}
	return ConfigUpdateType_Update
}

func (x *ConfigApiSubscribeResponse_ConnectorProfileXhedgeSetting) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ConfigApiSubscribeResponse_ConnectorProfileXhedgeSetting) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ConfigApiSubscribeResponse_ConnectorRouteAdd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data       []*ConnectorRouteAdd `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId  int32                `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
	UpdateType ConfigUpdateType     `protobuf:"varint,3,opt,name=UpdateType,proto3,enum=Pxm.Api.ConfigUpdateType" json:"UpdateType,omitempty"`
	Error      bool                 `protobuf:"varint,4,opt,name=Error,proto3" json:"Error,omitempty"`
	Message    string               `protobuf:"bytes,5,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *ConfigApiSubscribeResponse_ConnectorRouteAdd) Reset() {
	*x = ConfigApiSubscribeResponse_ConnectorRouteAdd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiSubscribeResponse_ConnectorRouteAdd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiSubscribeResponse_ConnectorRouteAdd) ProtoMessage() {}

func (x *ConfigApiSubscribeResponse_ConnectorRouteAdd) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiSubscribeResponse_ConnectorRouteAdd.ProtoReflect.Descriptor instead.
func (*ConfigApiSubscribeResponse_ConnectorRouteAdd) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{55}
}

func (x *ConfigApiSubscribeResponse_ConnectorRouteAdd) GetData() []*ConnectorRouteAdd {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiSubscribeResponse_ConnectorRouteAdd) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *ConfigApiSubscribeResponse_ConnectorRouteAdd) GetUpdateType() ConfigUpdateType {
	if x != nil {
		return x.UpdateType
	}
	return ConfigUpdateType_Update
}

func (x *ConfigApiSubscribeResponse_ConnectorRouteAdd) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ConfigApiSubscribeResponse_ConnectorRouteAdd) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ConfigApiSubscribeResponse_ConnectorStream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data       []*ConnectorStream `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId  int32              `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
	UpdateType ConfigUpdateType   `protobuf:"varint,3,opt,name=UpdateType,proto3,enum=Pxm.Api.ConfigUpdateType" json:"UpdateType,omitempty"`
	Error      bool               `protobuf:"varint,4,opt,name=Error,proto3" json:"Error,omitempty"`
	Message    string             `protobuf:"bytes,5,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *ConfigApiSubscribeResponse_ConnectorStream) Reset() {
	*x = ConfigApiSubscribeResponse_ConnectorStream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiSubscribeResponse_ConnectorStream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiSubscribeResponse_ConnectorStream) ProtoMessage() {}

func (x *ConfigApiSubscribeResponse_ConnectorStream) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiSubscribeResponse_ConnectorStream.ProtoReflect.Descriptor instead.
func (*ConfigApiSubscribeResponse_ConnectorStream) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{56}
}

func (x *ConfigApiSubscribeResponse_ConnectorStream) GetData() []*ConnectorStream {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiSubscribeResponse_ConnectorStream) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *ConfigApiSubscribeResponse_ConnectorStream) GetUpdateType() ConfigUpdateType {
	if x != nil {
		return x.UpdateType
	}
	return ConfigUpdateType_Update
}

func (x *ConfigApiSubscribeResponse_ConnectorStream) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ConfigApiSubscribeResponse_ConnectorStream) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ConfigApiSubscribeResponse_ConnectorStreamSymbol struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data       []*ConnectorStreamSymbol `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId  int32                    `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
	UpdateType ConfigUpdateType         `protobuf:"varint,3,opt,name=UpdateType,proto3,enum=Pxm.Api.ConfigUpdateType" json:"UpdateType,omitempty"`
	Error      bool                     `protobuf:"varint,4,opt,name=Error,proto3" json:"Error,omitempty"`
	Message    string                   `protobuf:"bytes,5,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *ConfigApiSubscribeResponse_ConnectorStreamSymbol) Reset() {
	*x = ConfigApiSubscribeResponse_ConnectorStreamSymbol{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiSubscribeResponse_ConnectorStreamSymbol) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiSubscribeResponse_ConnectorStreamSymbol) ProtoMessage() {}

func (x *ConfigApiSubscribeResponse_ConnectorStreamSymbol) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiSubscribeResponse_ConnectorStreamSymbol.ProtoReflect.Descriptor instead.
func (*ConfigApiSubscribeResponse_ConnectorStreamSymbol) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{57}
}

func (x *ConfigApiSubscribeResponse_ConnectorStreamSymbol) GetData() []*ConnectorStreamSymbol {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiSubscribeResponse_ConnectorStreamSymbol) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *ConfigApiSubscribeResponse_ConnectorStreamSymbol) GetUpdateType() ConfigUpdateType {
	if x != nil {
		return x.UpdateType
	}
	return ConfigUpdateType_Update
}

func (x *ConfigApiSubscribeResponse_ConnectorStreamSymbol) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ConfigApiSubscribeResponse_ConnectorStreamSymbol) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ConfigApiSubscribeResponse_Currency struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data       []*Currency      `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId  int32            `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
	UpdateType ConfigUpdateType `protobuf:"varint,3,opt,name=UpdateType,proto3,enum=Pxm.Api.ConfigUpdateType" json:"UpdateType,omitempty"`
	Error      bool             `protobuf:"varint,4,opt,name=Error,proto3" json:"Error,omitempty"`
	Message    string           `protobuf:"bytes,5,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *ConfigApiSubscribeResponse_Currency) Reset() {
	*x = ConfigApiSubscribeResponse_Currency{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiSubscribeResponse_Currency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiSubscribeResponse_Currency) ProtoMessage() {}

func (x *ConfigApiSubscribeResponse_Currency) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiSubscribeResponse_Currency.ProtoReflect.Descriptor instead.
func (*ConfigApiSubscribeResponse_Currency) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{58}
}

func (x *ConfigApiSubscribeResponse_Currency) GetData() []*Currency {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiSubscribeResponse_Currency) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *ConfigApiSubscribeResponse_Currency) GetUpdateType() ConfigUpdateType {
	if x != nil {
		return x.UpdateType
	}
	return ConfigUpdateType_Update
}

func (x *ConfigApiSubscribeResponse_Currency) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ConfigApiSubscribeResponse_Currency) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ConfigApiSubscribeResponse_Pool struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data       []*Pool          `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId  int32            `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
	UpdateType ConfigUpdateType `protobuf:"varint,3,opt,name=UpdateType,proto3,enum=Pxm.Api.ConfigUpdateType" json:"UpdateType,omitempty"`
	Error      bool             `protobuf:"varint,4,opt,name=Error,proto3" json:"Error,omitempty"`
	Message    string           `protobuf:"bytes,5,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *ConfigApiSubscribeResponse_Pool) Reset() {
	*x = ConfigApiSubscribeResponse_Pool{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiSubscribeResponse_Pool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiSubscribeResponse_Pool) ProtoMessage() {}

func (x *ConfigApiSubscribeResponse_Pool) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiSubscribeResponse_Pool.ProtoReflect.Descriptor instead.
func (*ConfigApiSubscribeResponse_Pool) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{59}
}

func (x *ConfigApiSubscribeResponse_Pool) GetData() []*Pool {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiSubscribeResponse_Pool) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *ConfigApiSubscribeResponse_Pool) GetUpdateType() ConfigUpdateType {
	if x != nil {
		return x.UpdateType
	}
	return ConfigUpdateType_Update
}

func (x *ConfigApiSubscribeResponse_Pool) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ConfigApiSubscribeResponse_Pool) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ConfigApiSubscribeResponse_PoolSymbol struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data       []*PoolSymbol    `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId  int32            `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
	UpdateType ConfigUpdateType `protobuf:"varint,3,opt,name=UpdateType,proto3,enum=Pxm.Api.ConfigUpdateType" json:"UpdateType,omitempty"`
	Error      bool             `protobuf:"varint,4,opt,name=Error,proto3" json:"Error,omitempty"`
	Message    string           `protobuf:"bytes,5,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *ConfigApiSubscribeResponse_PoolSymbol) Reset() {
	*x = ConfigApiSubscribeResponse_PoolSymbol{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiSubscribeResponse_PoolSymbol) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiSubscribeResponse_PoolSymbol) ProtoMessage() {}

func (x *ConfigApiSubscribeResponse_PoolSymbol) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiSubscribeResponse_PoolSymbol.ProtoReflect.Descriptor instead.
func (*ConfigApiSubscribeResponse_PoolSymbol) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{60}
}

func (x *ConfigApiSubscribeResponse_PoolSymbol) GetData() []*PoolSymbol {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiSubscribeResponse_PoolSymbol) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *ConfigApiSubscribeResponse_PoolSymbol) GetUpdateType() ConfigUpdateType {
	if x != nil {
		return x.UpdateType
	}
	return ConfigUpdateType_Update
}

func (x *ConfigApiSubscribeResponse_PoolSymbol) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ConfigApiSubscribeResponse_PoolSymbol) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ConfigApiSubscribeResponse_Profile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data       []*Profile       `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId  int32            `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
	UpdateType ConfigUpdateType `protobuf:"varint,3,opt,name=UpdateType,proto3,enum=Pxm.Api.ConfigUpdateType" json:"UpdateType,omitempty"`
	Error      bool             `protobuf:"varint,4,opt,name=Error,proto3" json:"Error,omitempty"`
	Message    string           `protobuf:"bytes,5,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *ConfigApiSubscribeResponse_Profile) Reset() {
	*x = ConfigApiSubscribeResponse_Profile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiSubscribeResponse_Profile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiSubscribeResponse_Profile) ProtoMessage() {}

func (x *ConfigApiSubscribeResponse_Profile) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiSubscribeResponse_Profile.ProtoReflect.Descriptor instead.
func (*ConfigApiSubscribeResponse_Profile) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{61}
}

func (x *ConfigApiSubscribeResponse_Profile) GetData() []*Profile {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiSubscribeResponse_Profile) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *ConfigApiSubscribeResponse_Profile) GetUpdateType() ConfigUpdateType {
	if x != nil {
		return x.UpdateType
	}
	return ConfigUpdateType_Update
}

func (x *ConfigApiSubscribeResponse_Profile) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ConfigApiSubscribeResponse_Profile) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ConfigApiSubscribeResponse_ProfileSymbol struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data       []*ProfileSymbol `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId  int32            `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
	UpdateType ConfigUpdateType `protobuf:"varint,3,opt,name=UpdateType,proto3,enum=Pxm.Api.ConfigUpdateType" json:"UpdateType,omitempty"`
	Error      bool             `protobuf:"varint,4,opt,name=Error,proto3" json:"Error,omitempty"`
	Message    string           `protobuf:"bytes,5,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *ConfigApiSubscribeResponse_ProfileSymbol) Reset() {
	*x = ConfigApiSubscribeResponse_ProfileSymbol{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiSubscribeResponse_ProfileSymbol) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiSubscribeResponse_ProfileSymbol) ProtoMessage() {}

func (x *ConfigApiSubscribeResponse_ProfileSymbol) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiSubscribeResponse_ProfileSymbol.ProtoReflect.Descriptor instead.
func (*ConfigApiSubscribeResponse_ProfileSymbol) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{62}
}

func (x *ConfigApiSubscribeResponse_ProfileSymbol) GetData() []*ProfileSymbol {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiSubscribeResponse_ProfileSymbol) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *ConfigApiSubscribeResponse_ProfileSymbol) GetUpdateType() ConfigUpdateType {
	if x != nil {
		return x.UpdateType
	}
	return ConfigUpdateType_Update
}

func (x *ConfigApiSubscribeResponse_ProfileSymbol) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ConfigApiSubscribeResponse_ProfileSymbol) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ConfigApiSubscribeResponse_Provider struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data       []*Provider      `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId  int32            `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
	UpdateType ConfigUpdateType `protobuf:"varint,3,opt,name=UpdateType,proto3,enum=Pxm.Api.ConfigUpdateType" json:"UpdateType,omitempty"`
	Error      bool             `protobuf:"varint,4,opt,name=Error,proto3" json:"Error,omitempty"`
	Message    string           `protobuf:"bytes,5,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *ConfigApiSubscribeResponse_Provider) Reset() {
	*x = ConfigApiSubscribeResponse_Provider{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiSubscribeResponse_Provider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiSubscribeResponse_Provider) ProtoMessage() {}

func (x *ConfigApiSubscribeResponse_Provider) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiSubscribeResponse_Provider.ProtoReflect.Descriptor instead.
func (*ConfigApiSubscribeResponse_Provider) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{63}
}

func (x *ConfigApiSubscribeResponse_Provider) GetData() []*Provider {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiSubscribeResponse_Provider) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *ConfigApiSubscribeResponse_Provider) GetUpdateType() ConfigUpdateType {
	if x != nil {
		return x.UpdateType
	}
	return ConfigUpdateType_Update
}

func (x *ConfigApiSubscribeResponse_Provider) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ConfigApiSubscribeResponse_Provider) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ConfigApiSubscribeResponse_ProviderConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data       []*ProviderConfig `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId  int32             `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
	UpdateType ConfigUpdateType  `protobuf:"varint,3,opt,name=UpdateType,proto3,enum=Pxm.Api.ConfigUpdateType" json:"UpdateType,omitempty"`
	Error      bool              `protobuf:"varint,4,opt,name=Error,proto3" json:"Error,omitempty"`
	Message    string            `protobuf:"bytes,5,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *ConfigApiSubscribeResponse_ProviderConfig) Reset() {
	*x = ConfigApiSubscribeResponse_ProviderConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiSubscribeResponse_ProviderConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiSubscribeResponse_ProviderConfig) ProtoMessage() {}

func (x *ConfigApiSubscribeResponse_ProviderConfig) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiSubscribeResponse_ProviderConfig.ProtoReflect.Descriptor instead.
func (*ConfigApiSubscribeResponse_ProviderConfig) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{64}
}

func (x *ConfigApiSubscribeResponse_ProviderConfig) GetData() []*ProviderConfig {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiSubscribeResponse_ProviderConfig) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *ConfigApiSubscribeResponse_ProviderConfig) GetUpdateType() ConfigUpdateType {
	if x != nil {
		return x.UpdateType
	}
	return ConfigUpdateType_Update
}

func (x *ConfigApiSubscribeResponse_ProviderConfig) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ConfigApiSubscribeResponse_ProviderConfig) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ConfigApiSubscribeResponse_ProviderConfigSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data       []*ProviderConfigSetting `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId  int32                    `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
	UpdateType ConfigUpdateType         `protobuf:"varint,3,opt,name=UpdateType,proto3,enum=Pxm.Api.ConfigUpdateType" json:"UpdateType,omitempty"`
	Error      bool                     `protobuf:"varint,4,opt,name=Error,proto3" json:"Error,omitempty"`
	Message    string                   `protobuf:"bytes,5,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *ConfigApiSubscribeResponse_ProviderConfigSetting) Reset() {
	*x = ConfigApiSubscribeResponse_ProviderConfigSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiSubscribeResponse_ProviderConfigSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiSubscribeResponse_ProviderConfigSetting) ProtoMessage() {}

func (x *ConfigApiSubscribeResponse_ProviderConfigSetting) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiSubscribeResponse_ProviderConfigSetting.ProtoReflect.Descriptor instead.
func (*ConfigApiSubscribeResponse_ProviderConfigSetting) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{65}
}

func (x *ConfigApiSubscribeResponse_ProviderConfigSetting) GetData() []*ProviderConfigSetting {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiSubscribeResponse_ProviderConfigSetting) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *ConfigApiSubscribeResponse_ProviderConfigSetting) GetUpdateType() ConfigUpdateType {
	if x != nil {
		return x.UpdateType
	}
	return ConfigUpdateType_Update
}

func (x *ConfigApiSubscribeResponse_ProviderConfigSetting) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ConfigApiSubscribeResponse_ProviderConfigSetting) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ConfigApiSubscribeResponse_ProviderStream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data       []*ProviderStream `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId  int32             `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
	UpdateType ConfigUpdateType  `protobuf:"varint,3,opt,name=UpdateType,proto3,enum=Pxm.Api.ConfigUpdateType" json:"UpdateType,omitempty"`
	Error      bool              `protobuf:"varint,4,opt,name=Error,proto3" json:"Error,omitempty"`
	Message    string            `protobuf:"bytes,5,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *ConfigApiSubscribeResponse_ProviderStream) Reset() {
	*x = ConfigApiSubscribeResponse_ProviderStream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiSubscribeResponse_ProviderStream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiSubscribeResponse_ProviderStream) ProtoMessage() {}

func (x *ConfigApiSubscribeResponse_ProviderStream) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiSubscribeResponse_ProviderStream.ProtoReflect.Descriptor instead.
func (*ConfigApiSubscribeResponse_ProviderStream) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{66}
}

func (x *ConfigApiSubscribeResponse_ProviderStream) GetData() []*ProviderStream {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiSubscribeResponse_ProviderStream) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *ConfigApiSubscribeResponse_ProviderStream) GetUpdateType() ConfigUpdateType {
	if x != nil {
		return x.UpdateType
	}
	return ConfigUpdateType_Update
}

func (x *ConfigApiSubscribeResponse_ProviderStream) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ConfigApiSubscribeResponse_ProviderStream) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ConfigApiSubscribeResponse_ProviderStreamSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data       []*ProviderStreamSetting `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId  int32                    `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
	UpdateType ConfigUpdateType         `protobuf:"varint,3,opt,name=UpdateType,proto3,enum=Pxm.Api.ConfigUpdateType" json:"UpdateType,omitempty"`
	Error      bool                     `protobuf:"varint,4,opt,name=Error,proto3" json:"Error,omitempty"`
	Message    string                   `protobuf:"bytes,5,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *ConfigApiSubscribeResponse_ProviderStreamSetting) Reset() {
	*x = ConfigApiSubscribeResponse_ProviderStreamSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiSubscribeResponse_ProviderStreamSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiSubscribeResponse_ProviderStreamSetting) ProtoMessage() {}

func (x *ConfigApiSubscribeResponse_ProviderStreamSetting) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiSubscribeResponse_ProviderStreamSetting.ProtoReflect.Descriptor instead.
func (*ConfigApiSubscribeResponse_ProviderStreamSetting) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{67}
}

func (x *ConfigApiSubscribeResponse_ProviderStreamSetting) GetData() []*ProviderStreamSetting {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiSubscribeResponse_ProviderStreamSetting) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *ConfigApiSubscribeResponse_ProviderStreamSetting) GetUpdateType() ConfigUpdateType {
	if x != nil {
		return x.UpdateType
	}
	return ConfigUpdateType_Update
}

func (x *ConfigApiSubscribeResponse_ProviderStreamSetting) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ConfigApiSubscribeResponse_ProviderStreamSetting) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ConfigApiSubscribeResponse_ProviderSymbolScaling struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data       []*ProviderSymbolScaling `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId  int32                    `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
	UpdateType ConfigUpdateType         `protobuf:"varint,3,opt,name=UpdateType,proto3,enum=Pxm.Api.ConfigUpdateType" json:"UpdateType,omitempty"`
	Error      bool                     `protobuf:"varint,4,opt,name=Error,proto3" json:"Error,omitempty"`
	Message    string                   `protobuf:"bytes,5,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *ConfigApiSubscribeResponse_ProviderSymbolScaling) Reset() {
	*x = ConfigApiSubscribeResponse_ProviderSymbolScaling{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiSubscribeResponse_ProviderSymbolScaling) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiSubscribeResponse_ProviderSymbolScaling) ProtoMessage() {}

func (x *ConfigApiSubscribeResponse_ProviderSymbolScaling) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiSubscribeResponse_ProviderSymbolScaling.ProtoReflect.Descriptor instead.
func (*ConfigApiSubscribeResponse_ProviderSymbolScaling) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{68}
}

func (x *ConfigApiSubscribeResponse_ProviderSymbolScaling) GetData() []*ProviderSymbolScaling {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiSubscribeResponse_ProviderSymbolScaling) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *ConfigApiSubscribeResponse_ProviderSymbolScaling) GetUpdateType() ConfigUpdateType {
	if x != nil {
		return x.UpdateType
	}
	return ConfigUpdateType_Update
}

func (x *ConfigApiSubscribeResponse_ProviderSymbolScaling) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ConfigApiSubscribeResponse_ProviderSymbolScaling) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ConfigApiSubscribeResponse_ProviderTrade struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data       []*ProviderTrade `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId  int32            `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
	UpdateType ConfigUpdateType `protobuf:"varint,3,opt,name=UpdateType,proto3,enum=Pxm.Api.ConfigUpdateType" json:"UpdateType,omitempty"`
	Error      bool             `protobuf:"varint,4,opt,name=Error,proto3" json:"Error,omitempty"`
	Message    string           `protobuf:"bytes,5,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *ConfigApiSubscribeResponse_ProviderTrade) Reset() {
	*x = ConfigApiSubscribeResponse_ProviderTrade{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiSubscribeResponse_ProviderTrade) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiSubscribeResponse_ProviderTrade) ProtoMessage() {}

func (x *ConfigApiSubscribeResponse_ProviderTrade) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiSubscribeResponse_ProviderTrade.ProtoReflect.Descriptor instead.
func (*ConfigApiSubscribeResponse_ProviderTrade) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{69}
}

func (x *ConfigApiSubscribeResponse_ProviderTrade) GetData() []*ProviderTrade {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiSubscribeResponse_ProviderTrade) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *ConfigApiSubscribeResponse_ProviderTrade) GetUpdateType() ConfigUpdateType {
	if x != nil {
		return x.UpdateType
	}
	return ConfigUpdateType_Update
}

func (x *ConfigApiSubscribeResponse_ProviderTrade) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ConfigApiSubscribeResponse_ProviderTrade) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ConfigApiSubscribeResponse_ProviderTradeSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data       []*ProviderTradeSetting `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId  int32                   `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
	UpdateType ConfigUpdateType        `protobuf:"varint,3,opt,name=UpdateType,proto3,enum=Pxm.Api.ConfigUpdateType" json:"UpdateType,omitempty"`
	Error      bool                    `protobuf:"varint,4,opt,name=Error,proto3" json:"Error,omitempty"`
	Message    string                  `protobuf:"bytes,5,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *ConfigApiSubscribeResponse_ProviderTradeSetting) Reset() {
	*x = ConfigApiSubscribeResponse_ProviderTradeSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiSubscribeResponse_ProviderTradeSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiSubscribeResponse_ProviderTradeSetting) ProtoMessage() {}

func (x *ConfigApiSubscribeResponse_ProviderTradeSetting) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiSubscribeResponse_ProviderTradeSetting.ProtoReflect.Descriptor instead.
func (*ConfigApiSubscribeResponse_ProviderTradeSetting) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{70}
}

func (x *ConfigApiSubscribeResponse_ProviderTradeSetting) GetData() []*ProviderTradeSetting {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiSubscribeResponse_ProviderTradeSetting) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *ConfigApiSubscribeResponse_ProviderTradeSetting) GetUpdateType() ConfigUpdateType {
	if x != nil {
		return x.UpdateType
	}
	return ConfigUpdateType_Update
}

func (x *ConfigApiSubscribeResponse_ProviderTradeSetting) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ConfigApiSubscribeResponse_ProviderTradeSetting) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ConfigApiSubscribeResponse_Security struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data       []*Security      `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId  int32            `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
	UpdateType ConfigUpdateType `protobuf:"varint,3,opt,name=UpdateType,proto3,enum=Pxm.Api.ConfigUpdateType" json:"UpdateType,omitempty"`
	Error      bool             `protobuf:"varint,4,opt,name=Error,proto3" json:"Error,omitempty"`
	Message    string           `protobuf:"bytes,5,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *ConfigApiSubscribeResponse_Security) Reset() {
	*x = ConfigApiSubscribeResponse_Security{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiSubscribeResponse_Security) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiSubscribeResponse_Security) ProtoMessage() {}

func (x *ConfigApiSubscribeResponse_Security) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiSubscribeResponse_Security.ProtoReflect.Descriptor instead.
func (*ConfigApiSubscribeResponse_Security) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{71}
}

func (x *ConfigApiSubscribeResponse_Security) GetData() []*Security {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiSubscribeResponse_Security) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *ConfigApiSubscribeResponse_Security) GetUpdateType() ConfigUpdateType {
	if x != nil {
		return x.UpdateType
	}
	return ConfigUpdateType_Update
}

func (x *ConfigApiSubscribeResponse_Security) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ConfigApiSubscribeResponse_Security) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ConfigApiSubscribeResponse_Symbol struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data       []*Symbol        `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId  int32            `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
	UpdateType ConfigUpdateType `protobuf:"varint,3,opt,name=UpdateType,proto3,enum=Pxm.Api.ConfigUpdateType" json:"UpdateType,omitempty"`
	Error      bool             `protobuf:"varint,4,opt,name=Error,proto3" json:"Error,omitempty"`
	Message    string           `protobuf:"bytes,5,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *ConfigApiSubscribeResponse_Symbol) Reset() {
	*x = ConfigApiSubscribeResponse_Symbol{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiSubscribeResponse_Symbol) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiSubscribeResponse_Symbol) ProtoMessage() {}

func (x *ConfigApiSubscribeResponse_Symbol) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiSubscribeResponse_Symbol.ProtoReflect.Descriptor instead.
func (*ConfigApiSubscribeResponse_Symbol) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{72}
}

func (x *ConfigApiSubscribeResponse_Symbol) GetData() []*Symbol {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiSubscribeResponse_Symbol) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *ConfigApiSubscribeResponse_Symbol) GetUpdateType() ConfigUpdateType {
	if x != nil {
		return x.UpdateType
	}
	return ConfigUpdateType_Update
}

func (x *ConfigApiSubscribeResponse_Symbol) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ConfigApiSubscribeResponse_Symbol) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ConfigApiUpdateRequest_AccountGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      []*AccountGroup `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId int32           `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
}

func (x *ConfigApiUpdateRequest_AccountGroup) Reset() {
	*x = ConfigApiUpdateRequest_AccountGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiUpdateRequest_AccountGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiUpdateRequest_AccountGroup) ProtoMessage() {}

func (x *ConfigApiUpdateRequest_AccountGroup) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiUpdateRequest_AccountGroup.ProtoReflect.Descriptor instead.
func (*ConfigApiUpdateRequest_AccountGroup) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{73}
}

func (x *ConfigApiUpdateRequest_AccountGroup) GetData() []*AccountGroup {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiUpdateRequest_AccountGroup) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

type ConfigApiUpdateRequest_AccountGroupSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      []*AccountGroupSetting `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId int32                  `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
}

func (x *ConfigApiUpdateRequest_AccountGroupSetting) Reset() {
	*x = ConfigApiUpdateRequest_AccountGroupSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiUpdateRequest_AccountGroupSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiUpdateRequest_AccountGroupSetting) ProtoMessage() {}

func (x *ConfigApiUpdateRequest_AccountGroupSetting) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiUpdateRequest_AccountGroupSetting.ProtoReflect.Descriptor instead.
func (*ConfigApiUpdateRequest_AccountGroupSetting) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{74}
}

func (x *ConfigApiUpdateRequest_AccountGroupSetting) GetData() []*AccountGroupSetting {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiUpdateRequest_AccountGroupSetting) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

type ConfigApiUpdateRequest_AccountProfileDividend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      []*AccountProfileDividend `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId int32                     `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
}

func (x *ConfigApiUpdateRequest_AccountProfileDividend) Reset() {
	*x = ConfigApiUpdateRequest_AccountProfileDividend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiUpdateRequest_AccountProfileDividend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiUpdateRequest_AccountProfileDividend) ProtoMessage() {}

func (x *ConfigApiUpdateRequest_AccountProfileDividend) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiUpdateRequest_AccountProfileDividend.ProtoReflect.Descriptor instead.
func (*ConfigApiUpdateRequest_AccountProfileDividend) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{75}
}

func (x *ConfigApiUpdateRequest_AccountProfileDividend) GetData() []*AccountProfileDividend {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiUpdateRequest_AccountProfileDividend) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

type ConfigApiUpdateRequest_AccountProfileDividendSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      []*AccountProfileDividendSetting `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId int32                            `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
}

func (x *ConfigApiUpdateRequest_AccountProfileDividendSetting) Reset() {
	*x = ConfigApiUpdateRequest_AccountProfileDividendSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiUpdateRequest_AccountProfileDividendSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiUpdateRequest_AccountProfileDividendSetting) ProtoMessage() {}

func (x *ConfigApiUpdateRequest_AccountProfileDividendSetting) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiUpdateRequest_AccountProfileDividendSetting.ProtoReflect.Descriptor instead.
func (*ConfigApiUpdateRequest_AccountProfileDividendSetting) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{76}
}

func (x *ConfigApiUpdateRequest_AccountProfileDividendSetting) GetData() []*AccountProfileDividendSetting {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiUpdateRequest_AccountProfileDividendSetting) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

type ConfigApiUpdateRequest_AccountProfileLeverageCcySetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      []*AccountProfileLeverageCcySetting `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId int32                               `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
}

func (x *ConfigApiUpdateRequest_AccountProfileLeverageCcySetting) Reset() {
	*x = ConfigApiUpdateRequest_AccountProfileLeverageCcySetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiUpdateRequest_AccountProfileLeverageCcySetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiUpdateRequest_AccountProfileLeverageCcySetting) ProtoMessage() {}

func (x *ConfigApiUpdateRequest_AccountProfileLeverageCcySetting) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiUpdateRequest_AccountProfileLeverageCcySetting.ProtoReflect.Descriptor instead.
func (*ConfigApiUpdateRequest_AccountProfileLeverageCcySetting) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{77}
}

func (x *ConfigApiUpdateRequest_AccountProfileLeverageCcySetting) GetData() []*AccountProfileLeverageCcySetting {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiUpdateRequest_AccountProfileLeverageCcySetting) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

type ConfigApiUpdateRequest_AccountProfileLeverageSymSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      []*AccountProfileLeverageSymSetting `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId int32                               `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
}

func (x *ConfigApiUpdateRequest_AccountProfileLeverageSymSetting) Reset() {
	*x = ConfigApiUpdateRequest_AccountProfileLeverageSymSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiUpdateRequest_AccountProfileLeverageSymSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiUpdateRequest_AccountProfileLeverageSymSetting) ProtoMessage() {}

func (x *ConfigApiUpdateRequest_AccountProfileLeverageSymSetting) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiUpdateRequest_AccountProfileLeverageSymSetting.ProtoReflect.Descriptor instead.
func (*ConfigApiUpdateRequest_AccountProfileLeverageSymSetting) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{78}
}

func (x *ConfigApiUpdateRequest_AccountProfileLeverageSymSetting) GetData() []*AccountProfileLeverageSymSetting {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiUpdateRequest_AccountProfileLeverageSymSetting) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

type ConfigApiUpdateRequest_AccountProfileLimitCurrencySetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      []*AccountProfileLimitCurrencySetting `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId int32                                 `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
}

func (x *ConfigApiUpdateRequest_AccountProfileLimitCurrencySetting) Reset() {
	*x = ConfigApiUpdateRequest_AccountProfileLimitCurrencySetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiUpdateRequest_AccountProfileLimitCurrencySetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiUpdateRequest_AccountProfileLimitCurrencySetting) ProtoMessage() {}

func (x *ConfigApiUpdateRequest_AccountProfileLimitCurrencySetting) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiUpdateRequest_AccountProfileLimitCurrencySetting.ProtoReflect.Descriptor instead.
func (*ConfigApiUpdateRequest_AccountProfileLimitCurrencySetting) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{79}
}

func (x *ConfigApiUpdateRequest_AccountProfileLimitCurrencySetting) GetData() []*AccountProfileLimitCurrencySetting {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiUpdateRequest_AccountProfileLimitCurrencySetting) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

type ConfigApiUpdateRequest_AccountProfileLimitSymbolSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      []*AccountProfileLimitSymbolSetting `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId int32                               `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
}

func (x *ConfigApiUpdateRequest_AccountProfileLimitSymbolSetting) Reset() {
	*x = ConfigApiUpdateRequest_AccountProfileLimitSymbolSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiUpdateRequest_AccountProfileLimitSymbolSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiUpdateRequest_AccountProfileLimitSymbolSetting) ProtoMessage() {}

func (x *ConfigApiUpdateRequest_AccountProfileLimitSymbolSetting) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiUpdateRequest_AccountProfileLimitSymbolSetting.ProtoReflect.Descriptor instead.
func (*ConfigApiUpdateRequest_AccountProfileLimitSymbolSetting) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{80}
}

func (x *ConfigApiUpdateRequest_AccountProfileLimitSymbolSetting) GetData() []*AccountProfileLimitSymbolSetting {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiUpdateRequest_AccountProfileLimitSymbolSetting) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

type ConfigApiUpdateRequest_AccountProfilePlSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      []*AccountProfilePlSetting `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId int32                      `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
}

func (x *ConfigApiUpdateRequest_AccountProfilePlSetting) Reset() {
	*x = ConfigApiUpdateRequest_AccountProfilePlSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiUpdateRequest_AccountProfilePlSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiUpdateRequest_AccountProfilePlSetting) ProtoMessage() {}

func (x *ConfigApiUpdateRequest_AccountProfilePlSetting) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiUpdateRequest_AccountProfilePlSetting.ProtoReflect.Descriptor instead.
func (*ConfigApiUpdateRequest_AccountProfilePlSetting) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{81}
}

func (x *ConfigApiUpdateRequest_AccountProfilePlSetting) GetData() []*AccountProfilePlSetting {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiUpdateRequest_AccountProfilePlSetting) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

type ConfigApiUpdateRequest_AccountProfileSwapSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      []*AccountProfileSwapSetting `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId int32                        `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
}

func (x *ConfigApiUpdateRequest_AccountProfileSwapSetting) Reset() {
	*x = ConfigApiUpdateRequest_AccountProfileSwapSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiUpdateRequest_AccountProfileSwapSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiUpdateRequest_AccountProfileSwapSetting) ProtoMessage() {}

func (x *ConfigApiUpdateRequest_AccountProfileSwapSetting) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiUpdateRequest_AccountProfileSwapSetting.ProtoReflect.Descriptor instead.
func (*ConfigApiUpdateRequest_AccountProfileSwapSetting) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{82}
}

func (x *ConfigApiUpdateRequest_AccountProfileSwapSetting) GetData() []*AccountProfileSwapSetting {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiUpdateRequest_AccountProfileSwapSetting) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

type ConfigApiUpdateRequest_AccountProfileWallet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      []*AccountProfileWallet `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId int32                   `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
}

func (x *ConfigApiUpdateRequest_AccountProfileWallet) Reset() {
	*x = ConfigApiUpdateRequest_AccountProfileWallet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiUpdateRequest_AccountProfileWallet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiUpdateRequest_AccountProfileWallet) ProtoMessage() {}

func (x *ConfigApiUpdateRequest_AccountProfileWallet) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiUpdateRequest_AccountProfileWallet.ProtoReflect.Descriptor instead.
func (*ConfigApiUpdateRequest_AccountProfileWallet) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{83}
}

func (x *ConfigApiUpdateRequest_AccountProfileWallet) GetData() []*AccountProfileWallet {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiUpdateRequest_AccountProfileWallet) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

type ConfigApiUpdateRequest_AccountProfileWalletSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      []*AccountProfileWalletSetting `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId int32                          `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
}

func (x *ConfigApiUpdateRequest_AccountProfileWalletSetting) Reset() {
	*x = ConfigApiUpdateRequest_AccountProfileWalletSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiUpdateRequest_AccountProfileWalletSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiUpdateRequest_AccountProfileWalletSetting) ProtoMessage() {}

func (x *ConfigApiUpdateRequest_AccountProfileWalletSetting) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiUpdateRequest_AccountProfileWalletSetting.ProtoReflect.Descriptor instead.
func (*ConfigApiUpdateRequest_AccountProfileWalletSetting) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{84}
}

func (x *ConfigApiUpdateRequest_AccountProfileWalletSetting) GetData() []*AccountProfileWalletSetting {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiUpdateRequest_AccountProfileWalletSetting) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

type ConfigApiUpdateRequest_AccountSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      []*AccountSetting `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId int32             `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
}

func (x *ConfigApiUpdateRequest_AccountSetting) Reset() {
	*x = ConfigApiUpdateRequest_AccountSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiUpdateRequest_AccountSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiUpdateRequest_AccountSetting) ProtoMessage() {}

func (x *ConfigApiUpdateRequest_AccountSetting) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiUpdateRequest_AccountSetting.ProtoReflect.Descriptor instead.
func (*ConfigApiUpdateRequest_AccountSetting) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{85}
}

func (x *ConfigApiUpdateRequest_AccountSetting) GetData() []*AccountSetting {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiUpdateRequest_AccountSetting) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

type ConfigApiUpdateRequest_CommissionProfileSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      []*CommissionProfileSetting `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId int32                       `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
}

func (x *ConfigApiUpdateRequest_CommissionProfileSetting) Reset() {
	*x = ConfigApiUpdateRequest_CommissionProfileSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiUpdateRequest_CommissionProfileSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiUpdateRequest_CommissionProfileSetting) ProtoMessage() {}

func (x *ConfigApiUpdateRequest_CommissionProfileSetting) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiUpdateRequest_CommissionProfileSetting.ProtoReflect.Descriptor instead.
func (*ConfigApiUpdateRequest_CommissionProfileSetting) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{86}
}

func (x *ConfigApiUpdateRequest_CommissionProfileSetting) GetData() []*CommissionProfileSetting {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiUpdateRequest_CommissionProfileSetting) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

type ConfigApiUpdateRequest_Connector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      []*Connector `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId int32        `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
}

func (x *ConfigApiUpdateRequest_Connector) Reset() {
	*x = ConfigApiUpdateRequest_Connector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiUpdateRequest_Connector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiUpdateRequest_Connector) ProtoMessage() {}

func (x *ConfigApiUpdateRequest_Connector) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiUpdateRequest_Connector.ProtoReflect.Descriptor instead.
func (*ConfigApiUpdateRequest_Connector) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{87}
}

func (x *ConfigApiUpdateRequest_Connector) GetData() []*Connector {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiUpdateRequest_Connector) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

type ConfigApiUpdateRequest_ConnectorAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      []*ConnectorAccount `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId int32               `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
}

func (x *ConfigApiUpdateRequest_ConnectorAccount) Reset() {
	*x = ConfigApiUpdateRequest_ConnectorAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiUpdateRequest_ConnectorAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiUpdateRequest_ConnectorAccount) ProtoMessage() {}

func (x *ConfigApiUpdateRequest_ConnectorAccount) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiUpdateRequest_ConnectorAccount.ProtoReflect.Descriptor instead.
func (*ConfigApiUpdateRequest_ConnectorAccount) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{88}
}

func (x *ConfigApiUpdateRequest_ConnectorAccount) GetData() []*ConnectorAccount {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiUpdateRequest_ConnectorAccount) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

type ConfigApiUpdateRequest_ConnectorAccountSymbol struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      []*ConnectorAccountSymbol `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId int32                     `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
}

func (x *ConfigApiUpdateRequest_ConnectorAccountSymbol) Reset() {
	*x = ConfigApiUpdateRequest_ConnectorAccountSymbol{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiUpdateRequest_ConnectorAccountSymbol) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiUpdateRequest_ConnectorAccountSymbol) ProtoMessage() {}

func (x *ConfigApiUpdateRequest_ConnectorAccountSymbol) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiUpdateRequest_ConnectorAccountSymbol.ProtoReflect.Descriptor instead.
func (*ConfigApiUpdateRequest_ConnectorAccountSymbol) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{89}
}

func (x *ConfigApiUpdateRequest_ConnectorAccountSymbol) GetData() []*ConnectorAccountSymbol {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiUpdateRequest_ConnectorAccountSymbol) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

type ConfigApiUpdateRequest_ConnectorConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      []*ConnectorConfig `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId int32              `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
}

func (x *ConfigApiUpdateRequest_ConnectorConfig) Reset() {
	*x = ConfigApiUpdateRequest_ConnectorConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiUpdateRequest_ConnectorConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiUpdateRequest_ConnectorConfig) ProtoMessage() {}

func (x *ConfigApiUpdateRequest_ConnectorConfig) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiUpdateRequest_ConnectorConfig.ProtoReflect.Descriptor instead.
func (*ConfigApiUpdateRequest_ConnectorConfig) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{90}
}

func (x *ConfigApiUpdateRequest_ConnectorConfig) GetData() []*ConnectorConfig {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiUpdateRequest_ConnectorConfig) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

type ConfigApiUpdateRequest_ConnectorConfigSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      []*ConnectorConfigSetting `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId int32                     `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
}

func (x *ConfigApiUpdateRequest_ConnectorConfigSetting) Reset() {
	*x = ConfigApiUpdateRequest_ConnectorConfigSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiUpdateRequest_ConnectorConfigSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiUpdateRequest_ConnectorConfigSetting) ProtoMessage() {}

func (x *ConfigApiUpdateRequest_ConnectorConfigSetting) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiUpdateRequest_ConnectorConfigSetting.ProtoReflect.Descriptor instead.
func (*ConfigApiUpdateRequest_ConnectorConfigSetting) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{91}
}

func (x *ConfigApiUpdateRequest_ConnectorConfigSetting) GetData() []*ConnectorConfigSetting {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiUpdateRequest_ConnectorConfigSetting) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

type ConfigApiUpdateRequest_ConnectorProfileXhedgeSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      []*ConnectorProfileXhedgeSetting `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId int32                            `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
}

func (x *ConfigApiUpdateRequest_ConnectorProfileXhedgeSetting) Reset() {
	*x = ConfigApiUpdateRequest_ConnectorProfileXhedgeSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiUpdateRequest_ConnectorProfileXhedgeSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiUpdateRequest_ConnectorProfileXhedgeSetting) ProtoMessage() {}

func (x *ConfigApiUpdateRequest_ConnectorProfileXhedgeSetting) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiUpdateRequest_ConnectorProfileXhedgeSetting.ProtoReflect.Descriptor instead.
func (*ConfigApiUpdateRequest_ConnectorProfileXhedgeSetting) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{92}
}

func (x *ConfigApiUpdateRequest_ConnectorProfileXhedgeSetting) GetData() []*ConnectorProfileXhedgeSetting {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiUpdateRequest_ConnectorProfileXhedgeSetting) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

type ConfigApiUpdateRequest_ConnectorRouteAdd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      []*ConnectorRouteAdd `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId int32                `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
}

func (x *ConfigApiUpdateRequest_ConnectorRouteAdd) Reset() {
	*x = ConfigApiUpdateRequest_ConnectorRouteAdd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiUpdateRequest_ConnectorRouteAdd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiUpdateRequest_ConnectorRouteAdd) ProtoMessage() {}

func (x *ConfigApiUpdateRequest_ConnectorRouteAdd) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiUpdateRequest_ConnectorRouteAdd.ProtoReflect.Descriptor instead.
func (*ConfigApiUpdateRequest_ConnectorRouteAdd) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{93}
}

func (x *ConfigApiUpdateRequest_ConnectorRouteAdd) GetData() []*ConnectorRouteAdd {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiUpdateRequest_ConnectorRouteAdd) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

type ConfigApiUpdateRequest_ConnectorRouteDelete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      []*ConnectorRouteDelete `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId int32                   `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
}

func (x *ConfigApiUpdateRequest_ConnectorRouteDelete) Reset() {
	*x = ConfigApiUpdateRequest_ConnectorRouteDelete{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiUpdateRequest_ConnectorRouteDelete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiUpdateRequest_ConnectorRouteDelete) ProtoMessage() {}

func (x *ConfigApiUpdateRequest_ConnectorRouteDelete) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiUpdateRequest_ConnectorRouteDelete.ProtoReflect.Descriptor instead.
func (*ConfigApiUpdateRequest_ConnectorRouteDelete) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{94}
}

func (x *ConfigApiUpdateRequest_ConnectorRouteDelete) GetData() []*ConnectorRouteDelete {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiUpdateRequest_ConnectorRouteDelete) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

type ConfigApiUpdateRequest_ConnectorRouteUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      []*ConnectorRouteUpdate `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId int32                   `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
}

func (x *ConfigApiUpdateRequest_ConnectorRouteUpdate) Reset() {
	*x = ConfigApiUpdateRequest_ConnectorRouteUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiUpdateRequest_ConnectorRouteUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiUpdateRequest_ConnectorRouteUpdate) ProtoMessage() {}

func (x *ConfigApiUpdateRequest_ConnectorRouteUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiUpdateRequest_ConnectorRouteUpdate.ProtoReflect.Descriptor instead.
func (*ConfigApiUpdateRequest_ConnectorRouteUpdate) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{95}
}

func (x *ConfigApiUpdateRequest_ConnectorRouteUpdate) GetData() []*ConnectorRouteUpdate {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiUpdateRequest_ConnectorRouteUpdate) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

type ConfigApiUpdateRequest_ConnectorStream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      []*ConnectorStream `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId int32              `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
}

func (x *ConfigApiUpdateRequest_ConnectorStream) Reset() {
	*x = ConfigApiUpdateRequest_ConnectorStream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiUpdateRequest_ConnectorStream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiUpdateRequest_ConnectorStream) ProtoMessage() {}

func (x *ConfigApiUpdateRequest_ConnectorStream) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiUpdateRequest_ConnectorStream.ProtoReflect.Descriptor instead.
func (*ConfigApiUpdateRequest_ConnectorStream) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{96}
}

func (x *ConfigApiUpdateRequest_ConnectorStream) GetData() []*ConnectorStream {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiUpdateRequest_ConnectorStream) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

type ConfigApiUpdateRequest_ConnectorStreamSymbol struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      []*ConnectorStreamSymbol `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId int32                    `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
}

func (x *ConfigApiUpdateRequest_ConnectorStreamSymbol) Reset() {
	*x = ConfigApiUpdateRequest_ConnectorStreamSymbol{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiUpdateRequest_ConnectorStreamSymbol) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiUpdateRequest_ConnectorStreamSymbol) ProtoMessage() {}

func (x *ConfigApiUpdateRequest_ConnectorStreamSymbol) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiUpdateRequest_ConnectorStreamSymbol.ProtoReflect.Descriptor instead.
func (*ConfigApiUpdateRequest_ConnectorStreamSymbol) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{97}
}

func (x *ConfigApiUpdateRequest_ConnectorStreamSymbol) GetData() []*ConnectorStreamSymbol {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiUpdateRequest_ConnectorStreamSymbol) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

type ConfigApiUpdateRequest_Currency struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      []*Currency `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId int32       `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
}

func (x *ConfigApiUpdateRequest_Currency) Reset() {
	*x = ConfigApiUpdateRequest_Currency{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiUpdateRequest_Currency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiUpdateRequest_Currency) ProtoMessage() {}

func (x *ConfigApiUpdateRequest_Currency) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiUpdateRequest_Currency.ProtoReflect.Descriptor instead.
func (*ConfigApiUpdateRequest_Currency) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{98}
}

func (x *ConfigApiUpdateRequest_Currency) GetData() []*Currency {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiUpdateRequest_Currency) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

type ConfigApiUpdateRequest_Pool struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      []*Pool `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId int32   `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
}

func (x *ConfigApiUpdateRequest_Pool) Reset() {
	*x = ConfigApiUpdateRequest_Pool{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiUpdateRequest_Pool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiUpdateRequest_Pool) ProtoMessage() {}

func (x *ConfigApiUpdateRequest_Pool) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiUpdateRequest_Pool.ProtoReflect.Descriptor instead.
func (*ConfigApiUpdateRequest_Pool) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{99}
}

func (x *ConfigApiUpdateRequest_Pool) GetData() []*Pool {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiUpdateRequest_Pool) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

type ConfigApiUpdateRequest_PoolSymbol struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      []*PoolSymbol `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId int32         `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
}

func (x *ConfigApiUpdateRequest_PoolSymbol) Reset() {
	*x = ConfigApiUpdateRequest_PoolSymbol{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiUpdateRequest_PoolSymbol) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiUpdateRequest_PoolSymbol) ProtoMessage() {}

func (x *ConfigApiUpdateRequest_PoolSymbol) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiUpdateRequest_PoolSymbol.ProtoReflect.Descriptor instead.
func (*ConfigApiUpdateRequest_PoolSymbol) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{100}
}

func (x *ConfigApiUpdateRequest_PoolSymbol) GetData() []*PoolSymbol {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiUpdateRequest_PoolSymbol) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

type ConfigApiUpdateRequest_Profile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      []*Profile `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId int32      `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
}

func (x *ConfigApiUpdateRequest_Profile) Reset() {
	*x = ConfigApiUpdateRequest_Profile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiUpdateRequest_Profile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiUpdateRequest_Profile) ProtoMessage() {}

func (x *ConfigApiUpdateRequest_Profile) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiUpdateRequest_Profile.ProtoReflect.Descriptor instead.
func (*ConfigApiUpdateRequest_Profile) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{101}
}

func (x *ConfigApiUpdateRequest_Profile) GetData() []*Profile {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiUpdateRequest_Profile) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

type ConfigApiUpdateRequest_ProfileSymbol struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      []*ProfileSymbol `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId int32            `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
}

func (x *ConfigApiUpdateRequest_ProfileSymbol) Reset() {
	*x = ConfigApiUpdateRequest_ProfileSymbol{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiUpdateRequest_ProfileSymbol) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiUpdateRequest_ProfileSymbol) ProtoMessage() {}

func (x *ConfigApiUpdateRequest_ProfileSymbol) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiUpdateRequest_ProfileSymbol.ProtoReflect.Descriptor instead.
func (*ConfigApiUpdateRequest_ProfileSymbol) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{102}
}

func (x *ConfigApiUpdateRequest_ProfileSymbol) GetData() []*ProfileSymbol {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiUpdateRequest_ProfileSymbol) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

type ConfigApiUpdateRequest_Provider struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      []*Provider `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId int32       `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
}

func (x *ConfigApiUpdateRequest_Provider) Reset() {
	*x = ConfigApiUpdateRequest_Provider{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiUpdateRequest_Provider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiUpdateRequest_Provider) ProtoMessage() {}

func (x *ConfigApiUpdateRequest_Provider) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiUpdateRequest_Provider.ProtoReflect.Descriptor instead.
func (*ConfigApiUpdateRequest_Provider) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{103}
}

func (x *ConfigApiUpdateRequest_Provider) GetData() []*Provider {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiUpdateRequest_Provider) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

type ConfigApiUpdateRequest_ProviderConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      []*ProviderConfig `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId int32             `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
}

func (x *ConfigApiUpdateRequest_ProviderConfig) Reset() {
	*x = ConfigApiUpdateRequest_ProviderConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiUpdateRequest_ProviderConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiUpdateRequest_ProviderConfig) ProtoMessage() {}

func (x *ConfigApiUpdateRequest_ProviderConfig) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiUpdateRequest_ProviderConfig.ProtoReflect.Descriptor instead.
func (*ConfigApiUpdateRequest_ProviderConfig) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{104}
}

func (x *ConfigApiUpdateRequest_ProviderConfig) GetData() []*ProviderConfig {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiUpdateRequest_ProviderConfig) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

type ConfigApiUpdateRequest_ProviderConfigSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      []*ProviderConfigSetting `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId int32                    `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
}

func (x *ConfigApiUpdateRequest_ProviderConfigSetting) Reset() {
	*x = ConfigApiUpdateRequest_ProviderConfigSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiUpdateRequest_ProviderConfigSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiUpdateRequest_ProviderConfigSetting) ProtoMessage() {}

func (x *ConfigApiUpdateRequest_ProviderConfigSetting) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiUpdateRequest_ProviderConfigSetting.ProtoReflect.Descriptor instead.
func (*ConfigApiUpdateRequest_ProviderConfigSetting) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{105}
}

func (x *ConfigApiUpdateRequest_ProviderConfigSetting) GetData() []*ProviderConfigSetting {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiUpdateRequest_ProviderConfigSetting) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

type ConfigApiUpdateRequest_ProviderStreamSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      []*ProviderStreamSetting `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId int32                    `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
}

func (x *ConfigApiUpdateRequest_ProviderStreamSetting) Reset() {
	*x = ConfigApiUpdateRequest_ProviderStreamSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiUpdateRequest_ProviderStreamSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiUpdateRequest_ProviderStreamSetting) ProtoMessage() {}

func (x *ConfigApiUpdateRequest_ProviderStreamSetting) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiUpdateRequest_ProviderStreamSetting.ProtoReflect.Descriptor instead.
func (*ConfigApiUpdateRequest_ProviderStreamSetting) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{106}
}

func (x *ConfigApiUpdateRequest_ProviderStreamSetting) GetData() []*ProviderStreamSetting {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiUpdateRequest_ProviderStreamSetting) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

type ConfigApiUpdateRequest_ProviderSymbolScaling struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      []*ProviderSymbolScaling `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId int32                    `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
}

func (x *ConfigApiUpdateRequest_ProviderSymbolScaling) Reset() {
	*x = ConfigApiUpdateRequest_ProviderSymbolScaling{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiUpdateRequest_ProviderSymbolScaling) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiUpdateRequest_ProviderSymbolScaling) ProtoMessage() {}

func (x *ConfigApiUpdateRequest_ProviderSymbolScaling) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiUpdateRequest_ProviderSymbolScaling.ProtoReflect.Descriptor instead.
func (*ConfigApiUpdateRequest_ProviderSymbolScaling) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{107}
}

func (x *ConfigApiUpdateRequest_ProviderSymbolScaling) GetData() []*ProviderSymbolScaling {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiUpdateRequest_ProviderSymbolScaling) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

type ConfigApiUpdateRequest_ProviderTradeSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      []*ProviderTradeSetting `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId int32                   `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
}

func (x *ConfigApiUpdateRequest_ProviderTradeSetting) Reset() {
	*x = ConfigApiUpdateRequest_ProviderTradeSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiUpdateRequest_ProviderTradeSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiUpdateRequest_ProviderTradeSetting) ProtoMessage() {}

func (x *ConfigApiUpdateRequest_ProviderTradeSetting) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiUpdateRequest_ProviderTradeSetting.ProtoReflect.Descriptor instead.
func (*ConfigApiUpdateRequest_ProviderTradeSetting) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{108}
}

func (x *ConfigApiUpdateRequest_ProviderTradeSetting) GetData() []*ProviderTradeSetting {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiUpdateRequest_ProviderTradeSetting) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

type ConfigApiUpdateRequest_Security struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      []*Security `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId int32       `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
}

func (x *ConfigApiUpdateRequest_Security) Reset() {
	*x = ConfigApiUpdateRequest_Security{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiUpdateRequest_Security) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiUpdateRequest_Security) ProtoMessage() {}

func (x *ConfigApiUpdateRequest_Security) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiUpdateRequest_Security.ProtoReflect.Descriptor instead.
func (*ConfigApiUpdateRequest_Security) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{109}
}

func (x *ConfigApiUpdateRequest_Security) GetData() []*Security {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiUpdateRequest_Security) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

type ConfigApiUpdateRequest_Symbol struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      []*Symbol `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	RequestId int32     `protobuf:"varint,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
}

func (x *ConfigApiUpdateRequest_Symbol) Reset() {
	*x = ConfigApiUpdateRequest_Symbol{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigApiUpdateRequest_Symbol) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApiUpdateRequest_Symbol) ProtoMessage() {}

func (x *ConfigApiUpdateRequest_Symbol) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApiUpdateRequest_Symbol.ProtoReflect.Descriptor instead.
func (*ConfigApiUpdateRequest_Symbol) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{110}
}

func (x *ConfigApiUpdateRequest_Symbol) GetData() []*Symbol {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigApiUpdateRequest_Symbol) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

type Connector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Type        uint32 `protobuf:"varint,2,opt,name=Type,proto3" json:"Type,omitempty"`
	Name        string `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`
	Enabled     bool   `protobuf:"varint,5,opt,name=Enabled,proto3" json:"Enabled,omitempty"`
	Values      string `protobuf:"bytes,6,opt,name=Values,proto3" json:"Values,omitempty"`
	RKey1       string `protobuf:"bytes,7,opt,name=RKey1,proto3" json:"RKey1,omitempty"`
	RKey2       string `protobuf:"bytes,8,opt,name=RKey2,proto3" json:"RKey2,omitempty"`
}

func (x *Connector) Reset() {
	*x = Connector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Connector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Connector) ProtoMessage() {}

func (x *Connector) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Connector.ProtoReflect.Descriptor instead.
func (*Connector) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{111}
}

func (x *Connector) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Connector) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Connector) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Connector) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Connector) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *Connector) GetValues() string {
	if x != nil {
		return x.Values
	}
	return ""
}

func (x *Connector) GetRKey1() string {
	if x != nil {
		return x.RKey1
	}
	return ""
}

func (x *Connector) GetRKey2() string {
	if x != nil {
		return x.RKey2
	}
	return ""
}

type ConnectorAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int32  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Connector     int32  `protobuf:"varint,2,opt,name=Connector,proto3" json:"Connector,omitempty"`
	Name          string `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	Description   string `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`
	Enabled       bool   `protobuf:"varint,5,opt,name=Enabled,proto3" json:"Enabled,omitempty"`
	Currency      string `protobuf:"bytes,6,opt,name=Currency,proto3" json:"Currency,omitempty"`
	TradeLimit    int32  `protobuf:"varint,7,opt,name=TradeLimit,proto3" json:"TradeLimit,omitempty"`
	TradeSpan     int32  `protobuf:"varint,8,opt,name=TradeSpan,proto3" json:"TradeSpan,omitempty"`
	TradeTimeout  int32  `protobuf:"varint,9,opt,name=TradeTimeout,proto3" json:"TradeTimeout,omitempty"`
	Margin        int32  `protobuf:"varint,10,opt,name=Margin,proto3" json:"Margin,omitempty"`
	Risk          int32  `protobuf:"varint,11,opt,name=Risk,proto3" json:"Risk,omitempty"`
	ProfileXHedge int32  `protobuf:"varint,12,opt,name=ProfileXHedge,proto3" json:"ProfileXHedge,omitempty"`
}

func (x *ConnectorAccount) Reset() {
	*x = ConnectorAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectorAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectorAccount) ProtoMessage() {}

func (x *ConnectorAccount) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectorAccount.ProtoReflect.Descriptor instead.
func (*ConnectorAccount) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{112}
}

func (x *ConnectorAccount) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ConnectorAccount) GetConnector() int32 {
	if x != nil {
		return x.Connector
	}
	return 0
}

func (x *ConnectorAccount) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ConnectorAccount) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ConnectorAccount) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *ConnectorAccount) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *ConnectorAccount) GetTradeLimit() int32 {
	if x != nil {
		return x.TradeLimit
	}
	return 0
}

func (x *ConnectorAccount) GetTradeSpan() int32 {
	if x != nil {
		return x.TradeSpan
	}
	return 0
}

func (x *ConnectorAccount) GetTradeTimeout() int32 {
	if x != nil {
		return x.TradeTimeout
	}
	return 0
}

func (x *ConnectorAccount) GetMargin() int32 {
	if x != nil {
		return x.Margin
	}
	return 0
}

func (x *ConnectorAccount) GetRisk() int32 {
	if x != nil {
		return x.Risk
	}
	return 0
}

func (x *ConnectorAccount) GetProfileXHedge() int32 {
	if x != nil {
		return x.ProfileXHedge
	}
	return 0
}

type ConnectorAccountSymbol struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32       `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Connector    int32       `protobuf:"varint,2,opt,name=Connector,proto3" json:"Connector,omitempty"`
	Account      int32       `protobuf:"varint,3,opt,name=Account,proto3" json:"Account,omitempty"`
	Security     int32       `protobuf:"varint,4,opt,name=Security,proto3" json:"Security,omitempty"`
	Name         string      `protobuf:"bytes,5,opt,name=Name,proto3" json:"Name,omitempty"`
	MinSize      float64     `protobuf:"fixed64,6,opt,name=MinSize,proto3" json:"MinSize,omitempty"`
	MaxSize      float64     `protobuf:"fixed64,7,opt,name=MaxSize,proto3" json:"MaxSize,omitempty"`
	TimeToLive   int32       `protobuf:"varint,8,opt,name=TimeToLive,proto3" json:"TimeToLive,omitempty"`
	AMin         float64     `protobuf:"fixed64,9,opt,name=AMin,proto3" json:"AMin,omitempty"`
	AStep        float64     `protobuf:"fixed64,10,opt,name=AStep,proto3" json:"AStep,omitempty"`
	BBook        float64     `protobuf:"fixed64,11,opt,name=BBook,proto3" json:"BBook,omitempty"`
	BLock        int32       `protobuf:"varint,12,opt,name=BLock,proto3" json:"BLock,omitempty"`
	BBoost       float64     `protobuf:"fixed64,13,opt,name=BBoost,proto3" json:"BBoost,omitempty"`
	BDelay       int32       `protobuf:"varint,14,opt,name=BDelay,proto3" json:"BDelay,omitempty"`
	BJitter      int32       `protobuf:"varint,15,opt,name=BJitter,proto3" json:"BJitter,omitempty"`
	LqProfile    int32       `protobuf:"varint,16,opt,name=LqProfile,proto3" json:"LqProfile,omitempty"`
	LqPool       int32       `protobuf:"varint,17,opt,name=LqPool,proto3" json:"LqPool,omitempty"`
	ExecMode     uint32      `protobuf:"varint,18,opt,name=ExecMode,proto3" json:"ExecMode,omitempty"`
	Enabled      bool        `protobuf:"varint,19,opt,name=Enabled,proto3" json:"Enabled,omitempty"`
	Improvements bool        `protobuf:"varint,20,opt,name=Improvements,proto3" json:"Improvements,omitempty"`
	Layers       []float64   `protobuf:"fixed64,21,rep,name=Layers,proto3" json:"Layers,omitempty"`
	Fok          float64     `protobuf:"fixed64,22,opt,name=Fok,proto3" json:"Fok,omitempty"`
	Step         float64     `protobuf:"fixed64,23,opt,name=Step,proto3" json:"Step,omitempty"`
	ADelay       int32       `protobuf:"varint,24,opt,name=ADelay,proto3" json:"ADelay,omitempty"`
	Sessions     []*Interval `protobuf:"bytes,101,rep,name=Sessions,proto3" json:"Sessions,omitempty"`
}

func (x *ConnectorAccountSymbol) Reset() {
	*x = ConnectorAccountSymbol{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectorAccountSymbol) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectorAccountSymbol) ProtoMessage() {}

func (x *ConnectorAccountSymbol) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectorAccountSymbol.ProtoReflect.Descriptor instead.
func (*ConnectorAccountSymbol) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{113}
}

func (x *ConnectorAccountSymbol) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ConnectorAccountSymbol) GetConnector() int32 {
	if x != nil {
		return x.Connector
	}
	return 0
}

func (x *ConnectorAccountSymbol) GetAccount() int32 {
	if x != nil {
		return x.Account
	}
	return 0
}

func (x *ConnectorAccountSymbol) GetSecurity() int32 {
	if x != nil {
		return x.Security
	}
	return 0
}

func (x *ConnectorAccountSymbol) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ConnectorAccountSymbol) GetMinSize() float64 {
	if x != nil {
		return x.MinSize
	}
	return 0
}

func (x *ConnectorAccountSymbol) GetMaxSize() float64 {
	if x != nil {
		return x.MaxSize
	}
	return 0
}

func (x *ConnectorAccountSymbol) GetTimeToLive() int32 {
	if x != nil {
		return x.TimeToLive
	}
	return 0
}

func (x *ConnectorAccountSymbol) GetAMin() float64 {
	if x != nil {
		return x.AMin
	}
	return 0
}

func (x *ConnectorAccountSymbol) GetAStep() float64 {
	if x != nil {
		return x.AStep
	}
	return 0
}

func (x *ConnectorAccountSymbol) GetBBook() float64 {
	if x != nil {
		return x.BBook
	}
	return 0
}

func (x *ConnectorAccountSymbol) GetBLock() int32 {
	if x != nil {
		return x.BLock
	}
	return 0
}

func (x *ConnectorAccountSymbol) GetBBoost() float64 {
	if x != nil {
		return x.BBoost
	}
	return 0
}

func (x *ConnectorAccountSymbol) GetBDelay() int32 {
	if x != nil {
		return x.BDelay
	}
	return 0
}

func (x *ConnectorAccountSymbol) GetBJitter() int32 {
	if x != nil {
		return x.BJitter
	}
	return 0
}

func (x *ConnectorAccountSymbol) GetLqProfile() int32 {
	if x != nil {
		return x.LqProfile
	}
	return 0
}

func (x *ConnectorAccountSymbol) GetLqPool() int32 {
	if x != nil {
		return x.LqPool
	}
	return 0
}

func (x *ConnectorAccountSymbol) GetExecMode() uint32 {
	if x != nil {
		return x.ExecMode
	}
	return 0
}

func (x *ConnectorAccountSymbol) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *ConnectorAccountSymbol) GetImprovements() bool {
	if x != nil {
		return x.Improvements
	}
	return false
}

func (x *ConnectorAccountSymbol) GetLayers() []float64 {
	if x != nil {
		return x.Layers
	}
	return nil
}

func (x *ConnectorAccountSymbol) GetFok() float64 {
	if x != nil {
		return x.Fok
	}
	return 0
}

func (x *ConnectorAccountSymbol) GetStep() float64 {
	if x != nil {
		return x.Step
	}
	return 0
}

func (x *ConnectorAccountSymbol) GetADelay() int32 {
	if x != nil {
		return x.ADelay
	}
	return 0
}

func (x *ConnectorAccountSymbol) GetSessions() []*Interval {
	if x != nil {
		return x.Sessions
	}
	return nil
}

type ConnectorConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Connector   int32  `protobuf:"varint,2,opt,name=Connector,proto3" json:"Connector,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
	Enabled     bool   `protobuf:"varint,5,opt,name=Enabled,proto3" json:"Enabled,omitempty"`
}

func (x *ConnectorConfig) Reset() {
	*x = ConnectorConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectorConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectorConfig) ProtoMessage() {}

func (x *ConnectorConfig) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectorConfig.ProtoReflect.Descriptor instead.
func (*ConnectorConfig) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{114}
}

func (x *ConnectorConfig) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ConnectorConfig) GetConnector() int32 {
	if x != nil {
		return x.Connector
	}
	return 0
}

func (x *ConnectorConfig) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ConnectorConfig) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type ConnectorConfigSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Connector int32  `protobuf:"varint,2,opt,name=Connector,proto3" json:"Connector,omitempty"`
	Config    int32  `protobuf:"varint,3,opt,name=Config,proto3" json:"Config,omitempty"`
	Key       string `protobuf:"bytes,4,opt,name=Key,proto3" json:"Key,omitempty"`
	Value     string `protobuf:"bytes,5,opt,name=Value,proto3" json:"Value,omitempty"`
}

func (x *ConnectorConfigSetting) Reset() {
	*x = ConnectorConfigSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectorConfigSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectorConfigSetting) ProtoMessage() {}

func (x *ConnectorConfigSetting) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectorConfigSetting.ProtoReflect.Descriptor instead.
func (*ConnectorConfigSetting) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{115}
}

func (x *ConnectorConfigSetting) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ConnectorConfigSetting) GetConnector() int32 {
	if x != nil {
		return x.Connector
	}
	return 0
}

func (x *ConnectorConfigSetting) GetConfig() int32 {
	if x != nil {
		return x.Config
	}
	return 0
}

func (x *ConnectorConfigSetting) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ConnectorConfigSetting) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type ConnectorProfileXhedge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
}

func (x *ConnectorProfileXhedge) Reset() {
	*x = ConnectorProfileXhedge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectorProfileXhedge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectorProfileXhedge) ProtoMessage() {}

func (x *ConnectorProfileXhedge) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectorProfileXhedge.ProtoReflect.Descriptor instead.
func (*ConnectorProfileXhedge) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{116}
}

func (x *ConnectorProfileXhedge) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ConnectorProfileXhedge) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ConnectorProfileXhedge) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type ConnectorProfileXhedgeSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	ProfileName string `protobuf:"bytes,2,opt,name=ProfileName,proto3" json:"ProfileName,omitempty"`
	Symbol      string `protobuf:"bytes,3,opt,name=Symbol,proto3" json:"Symbol,omitempty"`
	Target      string `protobuf:"bytes,4,opt,name=Target,proto3" json:"Target,omitempty"`
}

func (x *ConnectorProfileXhedgeSetting) Reset() {
	*x = ConnectorProfileXhedgeSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectorProfileXhedgeSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectorProfileXhedgeSetting) ProtoMessage() {}

func (x *ConnectorProfileXhedgeSetting) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectorProfileXhedgeSetting.ProtoReflect.Descriptor instead.
func (*ConnectorProfileXhedgeSetting) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{117}
}

func (x *ConnectorProfileXhedgeSetting) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ConnectorProfileXhedgeSetting) GetProfileName() string {
	if x != nil {
		return x.ProfileName
	}
	return ""
}

func (x *ConnectorProfileXhedgeSetting) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *ConnectorProfileXhedgeSetting) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

type ConnectorRouteAdd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Connector   int32  `protobuf:"varint,2,opt,name=Connector,proto3" json:"Connector,omitempty"`
	Sec         string `protobuf:"bytes,4,opt,name=Sec,proto3" json:"Sec,omitempty"`
	Sym         string `protobuf:"bytes,5,opt,name=Sym,proto3" json:"Sym,omitempty"`
	Acc         string `protobuf:"bytes,6,opt,name=Acc,proto3" json:"Acc,omitempty"`
	Subid1      string `protobuf:"bytes,7,opt,name=Subid1,proto3" json:"Subid1,omitempty"`
	Subid2      string `protobuf:"bytes,8,opt,name=Subid2,proto3" json:"Subid2,omitempty"`
	Subid3      string `protobuf:"bytes,9,opt,name=Subid3,proto3" json:"Subid3,omitempty"`
	Subid4      string `protobuf:"bytes,10,opt,name=Subid4,proto3" json:"Subid4,omitempty"`
	Target      int32  `protobuf:"varint,11,opt,name=Target,proto3" json:"Target,omitempty"`
	Description string `protobuf:"bytes,12,opt,name=Description,proto3" json:"Description,omitempty"`
}

func (x *ConnectorRouteAdd) Reset() {
	*x = ConnectorRouteAdd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectorRouteAdd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectorRouteAdd) ProtoMessage() {}

func (x *ConnectorRouteAdd) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectorRouteAdd.ProtoReflect.Descriptor instead.
func (*ConnectorRouteAdd) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{118}
}

func (x *ConnectorRouteAdd) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ConnectorRouteAdd) GetConnector() int32 {
	if x != nil {
		return x.Connector
	}
	return 0
}

func (x *ConnectorRouteAdd) GetSec() string {
	if x != nil {
		return x.Sec
	}
	return ""
}

func (x *ConnectorRouteAdd) GetSym() string {
	if x != nil {
		return x.Sym
	}
	return ""
}

func (x *ConnectorRouteAdd) GetAcc() string {
	if x != nil {
		return x.Acc
	}
	return ""
}

func (x *ConnectorRouteAdd) GetSubid1() string {
	if x != nil {
		return x.Subid1
	}
	return ""
}

func (x *ConnectorRouteAdd) GetSubid2() string {
	if x != nil {
		return x.Subid2
	}
	return ""
}

func (x *ConnectorRouteAdd) GetSubid3() string {
	if x != nil {
		return x.Subid3
	}
	return ""
}

func (x *ConnectorRouteAdd) GetSubid4() string {
	if x != nil {
		return x.Subid4
	}
	return ""
}

func (x *ConnectorRouteAdd) GetTarget() int32 {
	if x != nil {
		return x.Target
	}
	return 0
}

func (x *ConnectorRouteAdd) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type ConnectorRouteDelete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Connector int32 `protobuf:"varint,2,opt,name=Connector,proto3" json:"Connector,omitempty"`
}

func (x *ConnectorRouteDelete) Reset() {
	*x = ConnectorRouteDelete{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectorRouteDelete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectorRouteDelete) ProtoMessage() {}

func (x *ConnectorRouteDelete) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectorRouteDelete.ProtoReflect.Descriptor instead.
func (*ConnectorRouteDelete) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{119}
}

func (x *ConnectorRouteDelete) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ConnectorRouteDelete) GetConnector() int32 {
	if x != nil {
		return x.Connector
	}
	return 0
}

type ConnectorRouteUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Connector   int32  `protobuf:"varint,2,opt,name=Connector,proto3" json:"Connector,omitempty"`
	Sec         string `protobuf:"bytes,4,opt,name=Sec,proto3" json:"Sec,omitempty"`
	Sym         string `protobuf:"bytes,5,opt,name=Sym,proto3" json:"Sym,omitempty"`
	Acc         string `protobuf:"bytes,6,opt,name=Acc,proto3" json:"Acc,omitempty"`
	Subid1      string `protobuf:"bytes,7,opt,name=Subid1,proto3" json:"Subid1,omitempty"`
	Subid2      string `protobuf:"bytes,8,opt,name=Subid2,proto3" json:"Subid2,omitempty"`
	Subid3      string `protobuf:"bytes,9,opt,name=Subid3,proto3" json:"Subid3,omitempty"`
	Subid4      string `protobuf:"bytes,10,opt,name=Subid4,proto3" json:"Subid4,omitempty"`
	Target      int32  `protobuf:"varint,11,opt,name=Target,proto3" json:"Target,omitempty"`
	Description string `protobuf:"bytes,12,opt,name=Description,proto3" json:"Description,omitempty"`
}

func (x *ConnectorRouteUpdate) Reset() {
	*x = ConnectorRouteUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectorRouteUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectorRouteUpdate) ProtoMessage() {}

func (x *ConnectorRouteUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectorRouteUpdate.ProtoReflect.Descriptor instead.
func (*ConnectorRouteUpdate) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{120}
}

func (x *ConnectorRouteUpdate) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ConnectorRouteUpdate) GetConnector() int32 {
	if x != nil {
		return x.Connector
	}
	return 0
}

func (x *ConnectorRouteUpdate) GetSec() string {
	if x != nil {
		return x.Sec
	}
	return ""
}

func (x *ConnectorRouteUpdate) GetSym() string {
	if x != nil {
		return x.Sym
	}
	return ""
}

func (x *ConnectorRouteUpdate) GetAcc() string {
	if x != nil {
		return x.Acc
	}
	return ""
}

func (x *ConnectorRouteUpdate) GetSubid1() string {
	if x != nil {
		return x.Subid1
	}
	return ""
}

func (x *ConnectorRouteUpdate) GetSubid2() string {
	if x != nil {
		return x.Subid2
	}
	return ""
}

func (x *ConnectorRouteUpdate) GetSubid3() string {
	if x != nil {
		return x.Subid3
	}
	return ""
}

func (x *ConnectorRouteUpdate) GetSubid4() string {
	if x != nil {
		return x.Subid4
	}
	return ""
}

func (x *ConnectorRouteUpdate) GetTarget() int32 {
	if x != nil {
		return x.Target
	}
	return 0
}

func (x *ConnectorRouteUpdate) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type ConnectorStream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Connector   int32  `protobuf:"varint,2,opt,name=Connector,proto3" json:"Connector,omitempty"`
	Name        string `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`
	Enabled     bool   `protobuf:"varint,5,opt,name=Enabled,proto3" json:"Enabled,omitempty"`
}

func (x *ConnectorStream) Reset() {
	*x = ConnectorStream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectorStream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectorStream) ProtoMessage() {}

func (x *ConnectorStream) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectorStream.ProtoReflect.Descriptor instead.
func (*ConnectorStream) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{121}
}

func (x *ConnectorStream) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ConnectorStream) GetConnector() int32 {
	if x != nil {
		return x.Connector
	}
	return 0
}

func (x *ConnectorStream) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ConnectorStream) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ConnectorStream) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type ConnectorStreamSymbol struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32       `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Connector    int32       `protobuf:"varint,2,opt,name=Connector,proto3" json:"Connector,omitempty"`
	Stream       int32       `protobuf:"varint,3,opt,name=Stream,proto3" json:"Stream,omitempty"`
	Security     int32       `protobuf:"varint,4,opt,name=Security,proto3" json:"Security,omitempty"`
	Name         string      `protobuf:"bytes,5,opt,name=Name,proto3" json:"Name,omitempty"`
	Instrument   string      `protobuf:"bytes,6,opt,name=Instrument,proto3" json:"Instrument,omitempty"`
	Base         string      `protobuf:"bytes,7,opt,name=Base,proto3" json:"Base,omitempty"`
	Quote        string      `protobuf:"bytes,8,opt,name=Quote,proto3" json:"Quote,omitempty"`
	Volume       int32       `protobuf:"varint,9,opt,name=Volume,proto3" json:"Volume,omitempty"`
	Depth        int32       `protobuf:"varint,10,opt,name=Depth,proto3" json:"Depth,omitempty"`
	LqProfile    int32       `protobuf:"varint,11,opt,name=LqProfile,proto3" json:"LqProfile,omitempty"`
	LqPool       int32       `protobuf:"varint,12,opt,name=LqPool,proto3" json:"LqPool,omitempty"`
	Mode         uint32      `protobuf:"varint,13,opt,name=Mode,proto3" json:"Mode,omitempty"`
	Enabled      bool        `protobuf:"varint,14,opt,name=Enabled,proto3" json:"Enabled,omitempty"`
	Layers       []float64   `protobuf:"fixed64,15,rep,name=Layers,proto3" json:"Layers,omitempty"`
	VolumeDouble float64     `protobuf:"fixed64,16,opt,name=VolumeDouble,proto3" json:"VolumeDouble,omitempty"`
	Min          int32       `protobuf:"varint,17,opt,name=Min,proto3" json:"Min,omitempty"`
	LqSource     uint32      `protobuf:"varint,18,opt,name=LqSource,proto3" json:"LqSource,omitempty"`
	LqLock       int32       `protobuf:"varint,19,opt,name=LqLock,proto3" json:"LqLock,omitempty"`
	LqBoost      float64     `protobuf:"fixed64,20,opt,name=LqBoost,proto3" json:"LqBoost,omitempty"`
	Subscribe    bool        `protobuf:"varint,21,opt,name=Subscribe,proto3" json:"Subscribe,omitempty"`
	Sessions     []*Interval `protobuf:"bytes,101,rep,name=Sessions,proto3" json:"Sessions,omitempty"`
}

func (x *ConnectorStreamSymbol) Reset() {
	*x = ConnectorStreamSymbol{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectorStreamSymbol) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectorStreamSymbol) ProtoMessage() {}

func (x *ConnectorStreamSymbol) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectorStreamSymbol.ProtoReflect.Descriptor instead.
func (*ConnectorStreamSymbol) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{122}
}

func (x *ConnectorStreamSymbol) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ConnectorStreamSymbol) GetConnector() int32 {
	if x != nil {
		return x.Connector
	}
	return 0
}

func (x *ConnectorStreamSymbol) GetStream() int32 {
	if x != nil {
		return x.Stream
	}
	return 0
}

func (x *ConnectorStreamSymbol) GetSecurity() int32 {
	if x != nil {
		return x.Security
	}
	return 0
}

func (x *ConnectorStreamSymbol) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ConnectorStreamSymbol) GetInstrument() string {
	if x != nil {
		return x.Instrument
	}
	return ""
}

func (x *ConnectorStreamSymbol) GetBase() string {
	if x != nil {
		return x.Base
	}
	return ""
}

func (x *ConnectorStreamSymbol) GetQuote() string {
	if x != nil {
		return x.Quote
	}
	return ""
}

func (x *ConnectorStreamSymbol) GetVolume() int32 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *ConnectorStreamSymbol) GetDepth() int32 {
	if x != nil {
		return x.Depth
	}
	return 0
}

func (x *ConnectorStreamSymbol) GetLqProfile() int32 {
	if x != nil {
		return x.LqProfile
	}
	return 0
}

func (x *ConnectorStreamSymbol) GetLqPool() int32 {
	if x != nil {
		return x.LqPool
	}
	return 0
}

func (x *ConnectorStreamSymbol) GetMode() uint32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

func (x *ConnectorStreamSymbol) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *ConnectorStreamSymbol) GetLayers() []float64 {
	if x != nil {
		return x.Layers
	}
	return nil
}

func (x *ConnectorStreamSymbol) GetVolumeDouble() float64 {
	if x != nil {
		return x.VolumeDouble
	}
	return 0
}

func (x *ConnectorStreamSymbol) GetMin() int32 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *ConnectorStreamSymbol) GetLqSource() uint32 {
	if x != nil {
		return x.LqSource
	}
	return 0
}

func (x *ConnectorStreamSymbol) GetLqLock() int32 {
	if x != nil {
		return x.LqLock
	}
	return 0
}

func (x *ConnectorStreamSymbol) GetLqBoost() float64 {
	if x != nil {
		return x.LqBoost
	}
	return 0
}

func (x *ConnectorStreamSymbol) GetSubscribe() bool {
	if x != nil {
		return x.Subscribe
	}
	return false
}

func (x *ConnectorStreamSymbol) GetSessions() []*Interval {
	if x != nil {
		return x.Sessions
	}
	return nil
}

type Currency struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
}

func (x *Currency) Reset() {
	*x = Currency{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Currency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Currency) ProtoMessage() {}

func (x *Currency) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Currency.ProtoReflect.Descriptor instead.
func (*Currency) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{123}
}

func (x *Currency) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Currency) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Currency) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type IdName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint32 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
}

func (x *IdName) Reset() {
	*x = IdName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdName) ProtoMessage() {}

func (x *IdName) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdName.ProtoReflect.Descriptor instead.
func (*IdName) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{124}
}

func (x *IdName) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *IdName) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Interval struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EndOfWeek bool  `protobuf:"varint,1,opt,name=EndOfWeek,proto3" json:"EndOfWeek,omitempty"`
	FromDay   int32 `protobuf:"varint,2,opt,name=FromDay,proto3" json:"FromDay,omitempty"`
	FromHour  int32 `protobuf:"varint,3,opt,name=FromHour,proto3" json:"FromHour,omitempty"`
	FromMin   int32 `protobuf:"varint,4,opt,name=FromMin,proto3" json:"FromMin,omitempty"`
	FromSec   int32 `protobuf:"varint,5,opt,name=FromSec,proto3" json:"FromSec,omitempty"`
	Include   bool  `protobuf:"varint,6,opt,name=Include,proto3" json:"Include,omitempty"`
	ToDay     int32 `protobuf:"varint,7,opt,name=ToDay,proto3" json:"ToDay,omitempty"`
	ToHour    int32 `protobuf:"varint,8,opt,name=ToHour,proto3" json:"ToHour,omitempty"`
	ToMin     int32 `protobuf:"varint,9,opt,name=ToMin,proto3" json:"ToMin,omitempty"`
	ToSec     int32 `protobuf:"varint,10,opt,name=ToSec,proto3" json:"ToSec,omitempty"`
}

func (x *Interval) Reset() {
	*x = Interval{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Interval) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Interval) ProtoMessage() {}

func (x *Interval) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Interval.ProtoReflect.Descriptor instead.
func (*Interval) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{125}
}

func (x *Interval) GetEndOfWeek() bool {
	if x != nil {
		return x.EndOfWeek
	}
	return false
}

func (x *Interval) GetFromDay() int32 {
	if x != nil {
		return x.FromDay
	}
	return 0
}

func (x *Interval) GetFromHour() int32 {
	if x != nil {
		return x.FromHour
	}
	return 0
}

func (x *Interval) GetFromMin() int32 {
	if x != nil {
		return x.FromMin
	}
	return 0
}

func (x *Interval) GetFromSec() int32 {
	if x != nil {
		return x.FromSec
	}
	return 0
}

func (x *Interval) GetInclude() bool {
	if x != nil {
		return x.Include
	}
	return false
}

func (x *Interval) GetToDay() int32 {
	if x != nil {
		return x.ToDay
	}
	return 0
}

func (x *Interval) GetToHour() int32 {
	if x != nil {
		return x.ToHour
	}
	return 0
}

func (x *Interval) GetToMin() int32 {
	if x != nil {
		return x.ToMin
	}
	return 0
}

func (x *Interval) GetToSec() int32 {
	if x != nil {
		return x.ToSec
	}
	return 0
}

type Pool struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
	Enabled     bool   `protobuf:"varint,4,opt,name=Enabled,proto3" json:"Enabled,omitempty"`
}

func (x *Pool) Reset() {
	*x = Pool{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pool) ProtoMessage() {}

func (x *Pool) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pool.ProtoReflect.Descriptor instead.
func (*Pool) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{126}
}

func (x *Pool) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Pool) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Pool) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Pool) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type PoolSymbol struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int32       `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Security        int32       `protobuf:"varint,2,opt,name=Security,proto3" json:"Security,omitempty"`
	Pool            int32       `protobuf:"varint,3,opt,name=Pool,proto3" json:"Pool,omitempty"`
	Name            string      `protobuf:"bytes,4,opt,name=Name,proto3" json:"Name,omitempty"`
	Mode            uint32      `protobuf:"varint,5,opt,name=Mode,proto3" json:"Mode,omitempty"`
	Boost           bool        `protobuf:"varint,6,opt,name=Boost,proto3" json:"Boost,omitempty"`
	Enabled         bool        `protobuf:"varint,7,opt,name=Enabled,proto3" json:"Enabled,omitempty"`
	FilterLimit     float64     `protobuf:"fixed64,8,opt,name=FilterLimit,proto3" json:"FilterLimit,omitempty"`
	FilterFactor    float64     `protobuf:"fixed64,9,opt,name=FilterFactor,proto3" json:"FilterFactor,omitempty"`
	Provider        string      `protobuf:"bytes,10,opt,name=Provider,proto3" json:"Provider,omitempty"`
	Failover        string      `protobuf:"bytes,11,opt,name=Failover,proto3" json:"Failover,omitempty"`
	Timeout         int32       `protobuf:"varint,12,opt,name=Timeout,proto3" json:"Timeout,omitempty"`
	FilterTolerance int32       `protobuf:"varint,13,opt,name=FilterTolerance,proto3" json:"FilterTolerance,omitempty"`
	Sessions        []*Interval `protobuf:"bytes,101,rep,name=Sessions,proto3" json:"Sessions,omitempty"`
	Providers       []int32     `protobuf:"varint,102,rep,name=Providers,proto3" json:"Providers,omitempty"`
	Failovers       []int32     `protobuf:"varint,103,rep,name=Failovers,proto3" json:"Failovers,omitempty"`
}

func (x *PoolSymbol) Reset() {
	*x = PoolSymbol{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PoolSymbol) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PoolSymbol) ProtoMessage() {}

func (x *PoolSymbol) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PoolSymbol.ProtoReflect.Descriptor instead.
func (*PoolSymbol) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{127}
}

func (x *PoolSymbol) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PoolSymbol) GetSecurity() int32 {
	if x != nil {
		return x.Security
	}
	return 0
}

func (x *PoolSymbol) GetPool() int32 {
	if x != nil {
		return x.Pool
	}
	return 0
}

func (x *PoolSymbol) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PoolSymbol) GetMode() uint32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

func (x *PoolSymbol) GetBoost() bool {
	if x != nil {
		return x.Boost
	}
	return false
}

func (x *PoolSymbol) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *PoolSymbol) GetFilterLimit() float64 {
	if x != nil {
		return x.FilterLimit
	}
	return 0
}

func (x *PoolSymbol) GetFilterFactor() float64 {
	if x != nil {
		return x.FilterFactor
	}
	return 0
}

func (x *PoolSymbol) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *PoolSymbol) GetFailover() string {
	if x != nil {
		return x.Failover
	}
	return ""
}

func (x *PoolSymbol) GetTimeout() int32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *PoolSymbol) GetFilterTolerance() int32 {
	if x != nil {
		return x.FilterTolerance
	}
	return 0
}

func (x *PoolSymbol) GetSessions() []*Interval {
	if x != nil {
		return x.Sessions
	}
	return nil
}

func (x *PoolSymbol) GetProviders() []int32 {
	if x != nil {
		return x.Providers
	}
	return nil
}

func (x *PoolSymbol) GetFailovers() []int32 {
	if x != nil {
		return x.Failovers
	}
	return nil
}

type Profile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
	Enabled     bool   `protobuf:"varint,4,opt,name=Enabled,proto3" json:"Enabled,omitempty"`
}

func (x *Profile) Reset() {
	*x = Profile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Profile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Profile) ProtoMessage() {}

func (x *Profile) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Profile.ProtoReflect.Descriptor instead.
func (*Profile) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{128}
}

func (x *Profile) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Profile) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Profile) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Profile) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type ProfileSymbol struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32       `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Profile   int32       `protobuf:"varint,2,opt,name=Profile,proto3" json:"Profile,omitempty"`
	Security  int32       `protobuf:"varint,3,opt,name=Security,proto3" json:"Security,omitempty"`
	Name      string      `protobuf:"bytes,4,opt,name=Name,proto3" json:"Name,omitempty"`
	BidMarkup float64     `protobuf:"fixed64,5,opt,name=BidMarkup,proto3" json:"BidMarkup,omitempty"`
	AskMarkup float64     `protobuf:"fixed64,6,opt,name=AskMarkup,proto3" json:"AskMarkup,omitempty"`
	MinSpread float64     `protobuf:"fixed64,7,opt,name=MinSpread,proto3" json:"MinSpread,omitempty"`
	MaxSpread float64     `protobuf:"fixed64,8,opt,name=MaxSpread,proto3" json:"MaxSpread,omitempty"`
	Spread    uint32      `protobuf:"varint,9,opt,name=Spread,proto3" json:"Spread,omitempty"`
	Precision int32       `protobuf:"varint,10,opt,name=Precision,proto3" json:"Precision,omitempty"`
	Enabled   bool        `protobuf:"varint,11,opt,name=Enabled,proto3" json:"Enabled,omitempty"`
	Layer     uint32      `protobuf:"varint,12,opt,name=Layer,proto3" json:"Layer,omitempty"`
	Sessions  []*Interval `protobuf:"bytes,101,rep,name=Sessions,proto3" json:"Sessions,omitempty"`
}

func (x *ProfileSymbol) Reset() {
	*x = ProfileSymbol{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileSymbol) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileSymbol) ProtoMessage() {}

func (x *ProfileSymbol) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileSymbol.ProtoReflect.Descriptor instead.
func (*ProfileSymbol) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{129}
}

func (x *ProfileSymbol) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProfileSymbol) GetProfile() int32 {
	if x != nil {
		return x.Profile
	}
	return 0
}

func (x *ProfileSymbol) GetSecurity() int32 {
	if x != nil {
		return x.Security
	}
	return 0
}

func (x *ProfileSymbol) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProfileSymbol) GetBidMarkup() float64 {
	if x != nil {
		return x.BidMarkup
	}
	return 0
}

func (x *ProfileSymbol) GetAskMarkup() float64 {
	if x != nil {
		return x.AskMarkup
	}
	return 0
}

func (x *ProfileSymbol) GetMinSpread() float64 {
	if x != nil {
		return x.MinSpread
	}
	return 0
}

func (x *ProfileSymbol) GetMaxSpread() float64 {
	if x != nil {
		return x.MaxSpread
	}
	return 0
}

func (x *ProfileSymbol) GetSpread() uint32 {
	if x != nil {
		return x.Spread
	}
	return 0
}

func (x *ProfileSymbol) GetPrecision() int32 {
	if x != nil {
		return x.Precision
	}
	return 0
}

func (x *ProfileSymbol) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *ProfileSymbol) GetLayer() uint32 {
	if x != nil {
		return x.Layer
	}
	return 0
}

func (x *ProfileSymbol) GetSessions() []*Interval {
	if x != nil {
		return x.Sessions
	}
	return nil
}

type Provider struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name         string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Description  string `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
	Contacts     string `protobuf:"bytes,4,opt,name=Contacts,proto3" json:"Contacts,omitempty"`
	Enabled      bool   `protobuf:"varint,5,opt,name=Enabled,proto3" json:"Enabled,omitempty"`
	ProviderType uint32 `protobuf:"varint,6,opt,name=ProviderType,proto3" json:"ProviderType,omitempty"`
	Margin       int32  `protobuf:"varint,7,opt,name=Margin,proto3" json:"Margin,omitempty"`
}

func (x *Provider) Reset() {
	*x = Provider{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Provider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Provider) ProtoMessage() {}

func (x *Provider) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Provider.ProtoReflect.Descriptor instead.
func (*Provider) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{130}
}

func (x *Provider) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Provider) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Provider) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Provider) GetContacts() string {
	if x != nil {
		return x.Contacts
	}
	return ""
}

func (x *Provider) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *Provider) GetProviderType() uint32 {
	if x != nil {
		return x.ProviderType
	}
	return 0
}

func (x *Provider) GetMargin() int32 {
	if x != nil {
		return x.Margin
	}
	return 0
}

type ProviderConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Provider    int32  `protobuf:"varint,2,opt,name=Provider,proto3" json:"Provider,omitempty"`
	Config      int32  `protobuf:"varint,3,opt,name=Config,proto3" json:"Config,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`
	Enabled     bool   `protobuf:"varint,5,opt,name=Enabled,proto3" json:"Enabled,omitempty"`
}

func (x *ProviderConfig) Reset() {
	*x = ProviderConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProviderConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProviderConfig) ProtoMessage() {}

func (x *ProviderConfig) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[131]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProviderConfig.ProtoReflect.Descriptor instead.
func (*ProviderConfig) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{131}
}

func (x *ProviderConfig) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProviderConfig) GetProvider() int32 {
	if x != nil {
		return x.Provider
	}
	return 0
}

func (x *ProviderConfig) GetConfig() int32 {
	if x != nil {
		return x.Config
	}
	return 0
}

func (x *ProviderConfig) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ProviderConfig) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type ProviderConfigSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int32  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Provider int32  `protobuf:"varint,2,opt,name=Provider,proto3" json:"Provider,omitempty"`
	Config   int32  `protobuf:"varint,3,opt,name=Config,proto3" json:"Config,omitempty"`
	Key      string `protobuf:"bytes,4,opt,name=Key,proto3" json:"Key,omitempty"`
	Value    string `protobuf:"bytes,5,opt,name=Value,proto3" json:"Value,omitempty"`
}

func (x *ProviderConfigSetting) Reset() {
	*x = ProviderConfigSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[132]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProviderConfigSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProviderConfigSetting) ProtoMessage() {}

func (x *ProviderConfigSetting) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[132]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProviderConfigSetting.ProtoReflect.Descriptor instead.
func (*ProviderConfigSetting) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{132}
}

func (x *ProviderConfigSetting) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProviderConfigSetting) GetProvider() int32 {
	if x != nil {
		return x.Provider
	}
	return 0
}

func (x *ProviderConfigSetting) GetConfig() int32 {
	if x != nil {
		return x.Config
	}
	return 0
}

func (x *ProviderConfigSetting) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ProviderConfigSetting) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type ProviderStream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Provider    int32  `protobuf:"varint,2,opt,name=Provider,proto3" json:"Provider,omitempty"`
	Name        string `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`
}

func (x *ProviderStream) Reset() {
	*x = ProviderStream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[133]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProviderStream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProviderStream) ProtoMessage() {}

func (x *ProviderStream) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[133]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProviderStream.ProtoReflect.Descriptor instead.
func (*ProviderStream) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{133}
}

func (x *ProviderStream) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProviderStream) GetProvider() int32 {
	if x != nil {
		return x.Provider
	}
	return 0
}

func (x *ProviderStream) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProviderStream) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type ProviderStreamSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32       `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Provider   int32       `protobuf:"varint,2,opt,name=Provider,proto3" json:"Provider,omitempty"`
	Stream     int32       `protobuf:"varint,3,opt,name=Stream,proto3" json:"Stream,omitempty"`
	Symbol     string      `protobuf:"bytes,4,opt,name=Symbol,proto3" json:"Symbol,omitempty"`
	Instrument string      `protobuf:"bytes,5,opt,name=Instrument,proto3" json:"Instrument,omitempty"`
	Volumes    string      `protobuf:"bytes,6,opt,name=Volumes,proto3" json:"Volumes,omitempty"`
	Depth      uint32      `protobuf:"varint,7,opt,name=Depth,proto3" json:"Depth,omitempty"`
	MarkupBid  float64     `protobuf:"fixed64,8,opt,name=MarkupBid,proto3" json:"MarkupBid,omitempty"`
	MarkupAsk  float64     `protobuf:"fixed64,9,opt,name=MarkupAsk,proto3" json:"MarkupAsk,omitempty"`
	Priority   int32       `protobuf:"varint,10,opt,name=Priority,proto3" json:"Priority,omitempty"`
	Delay      int32       `protobuf:"varint,11,opt,name=Delay,proto3" json:"Delay,omitempty"`
	Enable     bool        `protobuf:"varint,13,opt,name=Enable,proto3" json:"Enable,omitempty"`
	Values     string      `protobuf:"bytes,14,opt,name=Values,proto3" json:"Values,omitempty"`
	Indicative bool        `protobuf:"varint,15,opt,name=Indicative,proto3" json:"Indicative,omitempty"`
	Sessions   []*Interval `protobuf:"bytes,101,rep,name=Sessions,proto3" json:"Sessions,omitempty"`
}

func (x *ProviderStreamSetting) Reset() {
	*x = ProviderStreamSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[134]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProviderStreamSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProviderStreamSetting) ProtoMessage() {}

func (x *ProviderStreamSetting) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[134]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProviderStreamSetting.ProtoReflect.Descriptor instead.
func (*ProviderStreamSetting) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{134}
}

func (x *ProviderStreamSetting) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProviderStreamSetting) GetProvider() int32 {
	if x != nil {
		return x.Provider
	}
	return 0
}

func (x *ProviderStreamSetting) GetStream() int32 {
	if x != nil {
		return x.Stream
	}
	return 0
}

func (x *ProviderStreamSetting) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *ProviderStreamSetting) GetInstrument() string {
	if x != nil {
		return x.Instrument
	}
	return ""
}

func (x *ProviderStreamSetting) GetVolumes() string {
	if x != nil {
		return x.Volumes
	}
	return ""
}

func (x *ProviderStreamSetting) GetDepth() uint32 {
	if x != nil {
		return x.Depth
	}
	return 0
}

func (x *ProviderStreamSetting) GetMarkupBid() float64 {
	if x != nil {
		return x.MarkupBid
	}
	return 0
}

func (x *ProviderStreamSetting) GetMarkupAsk() float64 {
	if x != nil {
		return x.MarkupAsk
	}
	return 0
}

func (x *ProviderStreamSetting) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *ProviderStreamSetting) GetDelay() int32 {
	if x != nil {
		return x.Delay
	}
	return 0
}

func (x *ProviderStreamSetting) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

func (x *ProviderStreamSetting) GetValues() string {
	if x != nil {
		return x.Values
	}
	return ""
}

func (x *ProviderStreamSetting) GetIndicative() bool {
	if x != nil {
		return x.Indicative
	}
	return false
}

func (x *ProviderStreamSetting) GetSessions() []*Interval {
	if x != nil {
		return x.Sessions
	}
	return nil
}

type ProviderSymbolScaling struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32   `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Provider   int32   `protobuf:"varint,2,opt,name=Provider,proto3" json:"Provider,omitempty"`
	Symbol     string  `protobuf:"bytes,3,opt,name=Symbol,proto3" json:"Symbol,omitempty"`
	QuotePrice float64 `protobuf:"fixed64,4,opt,name=QuotePrice,proto3" json:"QuotePrice,omitempty"`
	QuoteSize  float64 `protobuf:"fixed64,5,opt,name=QuoteSize,proto3" json:"QuoteSize,omitempty"`
	TradePrice float64 `protobuf:"fixed64,6,opt,name=TradePrice,proto3" json:"TradePrice,omitempty"`
	TradeSize  float64 `protobuf:"fixed64,7,opt,name=TradeSize,proto3" json:"TradeSize,omitempty"`
}

func (x *ProviderSymbolScaling) Reset() {
	*x = ProviderSymbolScaling{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[135]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProviderSymbolScaling) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProviderSymbolScaling) ProtoMessage() {}

func (x *ProviderSymbolScaling) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[135]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProviderSymbolScaling.ProtoReflect.Descriptor instead.
func (*ProviderSymbolScaling) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{135}
}

func (x *ProviderSymbolScaling) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProviderSymbolScaling) GetProvider() int32 {
	if x != nil {
		return x.Provider
	}
	return 0
}

func (x *ProviderSymbolScaling) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *ProviderSymbolScaling) GetQuotePrice() float64 {
	if x != nil {
		return x.QuotePrice
	}
	return 0
}

func (x *ProviderSymbolScaling) GetQuoteSize() float64 {
	if x != nil {
		return x.QuoteSize
	}
	return 0
}

func (x *ProviderSymbolScaling) GetTradePrice() float64 {
	if x != nil {
		return x.TradePrice
	}
	return 0
}

func (x *ProviderSymbolScaling) GetTradeSize() float64 {
	if x != nil {
		return x.TradeSize
	}
	return 0
}

type ProviderTrade struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Provider    int32  `protobuf:"varint,2,opt,name=Provider,proto3" json:"Provider,omitempty"`
	Name        string `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`
	Margin      int32  `protobuf:"varint,5,opt,name=Margin,proto3" json:"Margin,omitempty"`
}

func (x *ProviderTrade) Reset() {
	*x = ProviderTrade{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[136]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProviderTrade) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProviderTrade) ProtoMessage() {}

func (x *ProviderTrade) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[136]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProviderTrade.ProtoReflect.Descriptor instead.
func (*ProviderTrade) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{136}
}

func (x *ProviderTrade) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProviderTrade) GetProvider() int32 {
	if x != nil {
		return x.Provider
	}
	return 0
}

func (x *ProviderTrade) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProviderTrade) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ProviderTrade) GetMargin() int32 {
	if x != nil {
		return x.Margin
	}
	return 0
}

type ProviderTradeSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int32   `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Provider       int32   `protobuf:"varint,2,opt,name=Provider,proto3" json:"Provider,omitempty"`
	Trade          int32   `protobuf:"varint,3,opt,name=Trade,proto3" json:"Trade,omitempty"`
	Symbol         string  `protobuf:"bytes,4,opt,name=Symbol,proto3" json:"Symbol,omitempty"`
	Min            float64 `protobuf:"fixed64,5,opt,name=Min,proto3" json:"Min,omitempty"`
	Step           float64 `protobuf:"fixed64,6,opt,name=Step,proto3" json:"Step,omitempty"`
	Consume        uint32  `protobuf:"varint,7,opt,name=Consume,proto3" json:"Consume,omitempty"`
	Sweep          bool    `protobuf:"varint,8,opt,name=Sweep,proto3" json:"Sweep,omitempty"`
	Precision      uint32  `protobuf:"varint,9,opt,name=Precision,proto3" json:"Precision,omitempty"`
	PendingWarn    int32   `protobuf:"varint,10,opt,name=PendingWarn,proto3" json:"PendingWarn,omitempty"`
	PendingTimeout int32   `protobuf:"varint,11,opt,name=PendingTimeout,proto3" json:"PendingTimeout,omitempty"`
	PendingKill    int32   `protobuf:"varint,12,opt,name=PendingKill,proto3" json:"PendingKill,omitempty"`
	RejectLimit    int32   `protobuf:"varint,13,opt,name=RejectLimit,proto3" json:"RejectLimit,omitempty"`
	Enable         bool    `protobuf:"varint,14,opt,name=Enable,proto3" json:"Enable,omitempty"`
	Values         string  `protobuf:"bytes,15,opt,name=Values,proto3" json:"Values,omitempty"`
	Ccy            string  `protobuf:"bytes,16,opt,name=Ccy,proto3" json:"Ccy,omitempty"`
	PendingLimit   float64 `protobuf:"fixed64,17,opt,name=PendingLimit,proto3" json:"PendingLimit,omitempty"`
}

func (x *ProviderTradeSetting) Reset() {
	*x = ProviderTradeSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[137]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProviderTradeSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProviderTradeSetting) ProtoMessage() {}

func (x *ProviderTradeSetting) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[137]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProviderTradeSetting.ProtoReflect.Descriptor instead.
func (*ProviderTradeSetting) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{137}
}

func (x *ProviderTradeSetting) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProviderTradeSetting) GetProvider() int32 {
	if x != nil {
		return x.Provider
	}
	return 0
}

func (x *ProviderTradeSetting) GetTrade() int32 {
	if x != nil {
		return x.Trade
	}
	return 0
}

func (x *ProviderTradeSetting) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *ProviderTradeSetting) GetMin() float64 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *ProviderTradeSetting) GetStep() float64 {
	if x != nil {
		return x.Step
	}
	return 0
}

func (x *ProviderTradeSetting) GetConsume() uint32 {
	if x != nil {
		return x.Consume
	}
	return 0
}

func (x *ProviderTradeSetting) GetSweep() bool {
	if x != nil {
		return x.Sweep
	}
	return false
}

func (x *ProviderTradeSetting) GetPrecision() uint32 {
	if x != nil {
		return x.Precision
	}
	return 0
}

func (x *ProviderTradeSetting) GetPendingWarn() int32 {
	if x != nil {
		return x.PendingWarn
	}
	return 0
}

func (x *ProviderTradeSetting) GetPendingTimeout() int32 {
	if x != nil {
		return x.PendingTimeout
	}
	return 0
}

func (x *ProviderTradeSetting) GetPendingKill() int32 {
	if x != nil {
		return x.PendingKill
	}
	return 0
}

func (x *ProviderTradeSetting) GetRejectLimit() int32 {
	if x != nil {
		return x.RejectLimit
	}
	return 0
}

func (x *ProviderTradeSetting) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

func (x *ProviderTradeSetting) GetValues() string {
	if x != nil {
		return x.Values
	}
	return ""
}

func (x *ProviderTradeSetting) GetCcy() string {
	if x != nil {
		return x.Ccy
	}
	return ""
}

func (x *ProviderTradeSetting) GetPendingLimit() float64 {
	if x != nil {
		return x.PendingLimit
	}
	return 0
}

type Security struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Type        string `protobuf:"bytes,2,opt,name=Type,proto3" json:"Type,omitempty"`
	Name        string `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`
	Enabled     bool   `protobuf:"varint,5,opt,name=Enabled,proto3" json:"Enabled,omitempty"`
	TypeId      int32  `protobuf:"varint,6,opt,name=TypeId,proto3" json:"TypeId,omitempty"`
}

func (x *Security) Reset() {
	*x = Security{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[138]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Security) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Security) ProtoMessage() {}

func (x *Security) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[138]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Security.ProtoReflect.Descriptor instead.
func (*Security) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{138}
}

func (x *Security) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Security) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Security) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Security) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Security) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *Security) GetTypeId() int32 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

type Symbol struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int32       `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Security        int32       `protobuf:"varint,2,opt,name=Security,proto3" json:"Security,omitempty"`
	Base            string      `protobuf:"bytes,3,opt,name=Base,proto3" json:"Base,omitempty"`
	Quote           string      `protobuf:"bytes,4,opt,name=Quote,proto3" json:"Quote,omitempty"`
	Description     string      `protobuf:"bytes,5,opt,name=Description,proto3" json:"Description,omitempty"`
	Digits          float64     `protobuf:"fixed64,6,opt,name=Digits,proto3" json:"Digits,omitempty"`
	Enabled         bool        `protobuf:"varint,7,opt,name=Enabled,proto3" json:"Enabled,omitempty"`
	Min             float64     `protobuf:"fixed64,8,opt,name=Min,proto3" json:"Min,omitempty"`
	Factor          float64     `protobuf:"fixed64,9,opt,name=Factor,proto3" json:"Factor,omitempty"`
	BaseCurrencyId  int32       `protobuf:"varint,10,opt,name=BaseCurrencyId,proto3" json:"BaseCurrencyId,omitempty"`
	QuoteCurrencyId int32       `protobuf:"varint,11,opt,name=QuoteCurrencyId,proto3" json:"QuoteCurrencyId,omitempty"`
	Name            string      `protobuf:"bytes,12,opt,name=Name,proto3" json:"Name,omitempty"`
	Sessions        []*Interval `protobuf:"bytes,101,rep,name=Sessions,proto3" json:"Sessions,omitempty"`
}

func (x *Symbol) Reset() {
	*x = Symbol{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Configuration_proto_msgTypes[139]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Symbol) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Symbol) ProtoMessage() {}

func (x *Symbol) ProtoReflect() protoreflect.Message {
	mi := &file_Configuration_proto_msgTypes[139]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Symbol.ProtoReflect.Descriptor instead.
func (*Symbol) Descriptor() ([]byte, []int) {
	return file_Configuration_proto_rawDescGZIP(), []int{139}
}

func (x *Symbol) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Symbol) GetSecurity() int32 {
	if x != nil {
		return x.Security
	}
	return 0
}

func (x *Symbol) GetBase() string {
	if x != nil {
		return x.Base
	}
	return ""
}

func (x *Symbol) GetQuote() string {
	if x != nil {
		return x.Quote
	}
	return ""
}

func (x *Symbol) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Symbol) GetDigits() float64 {
	if x != nil {
		return x.Digits
	}
	return 0
}

func (x *Symbol) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *Symbol) GetMin() float64 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *Symbol) GetFactor() float64 {
	if x != nil {
		return x.Factor
	}
	return 0
}

func (x *Symbol) GetBaseCurrencyId() int32 {
	if x != nil {
		return x.BaseCurrencyId
	}
	return 0
}

func (x *Symbol) GetQuoteCurrencyId() int32 {
	if x != nil {
		return x.QuoteCurrencyId
	}
	return 0
}

func (x *Symbol) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Symbol) GetSessions() []*Interval {
	if x != nil {
		return x.Sessions
	}
	return nil
}

var File_Configuration_proto protoreflect.FileDescriptor

var file_Configuration_proto_rawDesc = []byte{
	0x0a, 0x13, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x1a, 0x0e,
	0x41, 0x70, 0x69, 0x45, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x54,
	0x0a, 0x0c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x85, 0x01, 0x0a, 0x13, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x4b,
	0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x5e, 0x0a, 0x16,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x44, 0x69,
	0x76, 0x69, 0x64, 0x65, 0x6e, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x8d, 0x02, 0x0a,
	0x1d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x44,
	0x69, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x64, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x4c, 0x6f, 0x6e, 0x67,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x4c, 0x6f, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05,
	0x53, 0x68, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x53, 0x68, 0x6f,
	0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x54, 0x61, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x03, 0x54, 0x61, 0x78, 0x12, 0x10, 0x0a, 0x03, 0x43, 0x63, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x43, 0x63, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x50, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x32, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x32, 0x22, 0x61, 0x0a, 0x19,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x65,
	0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x43, 0x63, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x84, 0x01, 0x0a, 0x20, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x43, 0x63, 0x79, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x65,
	0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x4c, 0x65,
	0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x22, 0x61, 0x0a, 0x19, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65,
	0x53, 0x79, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x80, 0x01, 0x0a, 0x20, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x65, 0x76, 0x65,
	0x72, 0x61, 0x67, 0x65, 0x53, 0x79, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x65, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x08, 0x4c, 0x65, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x22, 0x63, 0x0a, 0x1b,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x94, 0x01, 0x0a, 0x22, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x65, 0x72, 0x63, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x04, 0x50, 0x65, 0x72, 0x63, 0x22, 0x61, 0x0a, 0x19, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x53,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xa0, 0x01, 0x0a, 0x20,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x65, 0x72, 0x63,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x50, 0x65, 0x72, 0x63, 0x12, 0x10, 0x0a, 0x03,
	0x43, 0x63, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x43, 0x63, 0x79, 0x22, 0x58,
	0x0a, 0x10, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x50, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xeb, 0x01, 0x0a, 0x17, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x6c, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x43, 0x63, 0x79, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x43, 0x63, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x4d, 0x61, 0x72, 0x6b,
	0x75, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x4d, 0x61, 0x72, 0x6b, 0x75, 0x70,
	0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x32, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x32, 0x22, 0x5a, 0x0a, 0x12, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x77, 0x61, 0x70, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0xb3, 0x02, 0x0a, 0x19, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x77, 0x61, 0x70, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4c, 0x6f, 0x6e, 0x67, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x4c, 0x6f, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x68,
	0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x53, 0x68, 0x6f, 0x72, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x12, 0x10, 0x0a, 0x03, 0x43, 0x63, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x43,
	0x63, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0a, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x32, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x32, 0x22, 0x5c, 0x0a, 0x14, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xdf, 0x01, 0x0a, 0x1b, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x50, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x02, 0x50, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x77, 0x61, 0x70, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x53, 0x77, 0x61, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x69,
	0x76, 0x69, 0x64, 0x65, 0x6e, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x44, 0x69,
	0x76, 0x69, 0x64, 0x65, 0x6e, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65,
	0x6e, 0x64, 0x54, 0x61, 0x78, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x44, 0x69, 0x76,
	0x69, 0x64, 0x65, 0x6e, 0x64, 0x54, 0x61, 0x78, 0x22, 0x98, 0x07, 0x0a, 0x0e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12,
	0x18, 0x0a, 0x07, 0x53, 0x74, 0x6f, 0x70, 0x6f, 0x75, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x53, 0x74, 0x6f, 0x70, 0x6f, 0x75, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x50,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x50, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x57, 0x61, 0x72, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x57, 0x61, 0x72, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x55, 0x6e, 0x64, 0x65, 0x72,
	0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0e, 0x55, 0x6e, 0x64, 0x65, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x53, 0x68, 0x6f, 0x72, 0x74,
	0x12, 0x26, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x4e, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x2e, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x43, 0x63, 0x79, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x65, 0x76,
	0x65, 0x72, 0x61, 0x67, 0x65, 0x43, 0x63, 0x79, 0x12, 0x28, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x43, 0x63, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x43,
	0x63, 0x79, 0x12, 0x2e, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x53, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x12, 0x2c, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x74,
	0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x20, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x77, 0x61, 0x70, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x77,
	0x61, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x45, 0x78, 0x70, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x45, 0x78, 0x70, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x45, 0x78, 0x70, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x18, 0x11, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x08, 0x45, 0x78, 0x70, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x78,
	0x70, 0x53, 0x70, 0x61, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x45, 0x78, 0x70,
	0x53, 0x70, 0x61, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x2e, 0x0a, 0x12,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x53,
	0x79, 0x6d, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x4c, 0x65, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x53, 0x79, 0x6d, 0x12, 0x1c, 0x0a, 0x09,
	0x55, 0x6e, 0x64, 0x65, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x15, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x55, 0x6e, 0x64, 0x65, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x6c, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x6c, 0x12, 0x2b, 0x0a, 0x11, 0x53, 0x74, 0x6f, 0x70,
	0x6f, 0x75, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x17, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x53, 0x74, 0x6f, 0x70, 0x6f, 0x75, 0x74, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x3a, 0x0a, 0x19, 0x53, 0x74, 0x6f, 0x70, 0x6f, 0x75, 0x74,
	0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x53, 0x74, 0x6f, 0x70, 0x6f, 0x75,
	0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x74, 0x6f, 0x70, 0x6f, 0x75, 0x74, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x19, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x53, 0x74, 0x6f, 0x70, 0x6f, 0x75, 0x74,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x1a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x22, 0xfb, 0x01, 0x0a, 0x13, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x22, 0x59, 0x0a, 0x11, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xce, 0x01, 0x0a,
	0x18, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x43, 0x63, 0x79, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x43, 0x63, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x32, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x32, 0x22, 0x7b, 0x0a,
	0x19, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x40, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e,
	0x50, 0x78, 0x6d, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0xa1, 0x01, 0x0a, 0x1a, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e,
	0x49, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x40, 0x0a, 0x0b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1e, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x7d,
	0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x9a, 0x01,
	0x0a, 0x19, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x55, 0x6e, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x3d, 0x0a, 0x0b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1b, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0xdd, 0x01, 0x0a, 0x27, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x29, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12,
	0x39, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xeb, 0x01, 0x0a, 0x2e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x30, 0x0a,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x50, 0x78,
	0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a,
	0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x19, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18,
	0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xf1, 0x01, 0x0a, 0x31, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x64, 0x12, 0x33,
	0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x50,
	0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x64, 0x52, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x64, 0x12, 0x39, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xff, 0x01, 0x0a,
	0x38, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65,
	0x6e, 0x64, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x3a, 0x0a, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70,
	0x69, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x64, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70,
	0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xf7,
	0x01, 0x0a, 0x34, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x65, 0x76, 0x65,
	0x72, 0x61, 0x67, 0x65, 0x43, 0x63, 0x79, 0x12, 0x36, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x65,
	0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x43, 0x63, 0x79, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a,
	0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x19, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18,
	0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x85, 0x02, 0x0a, 0x3b, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x43, 0x63,
	0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x3d, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69,
	0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4c,
	0x65, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x43, 0x63, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x50, 0x78, 0x6d, 0x2e,
	0x41, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0xf7, 0x01, 0x0a, 0x34, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x65,
	0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x53, 0x79, 0x6d, 0x12, 0x36, 0x0a, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70,
	0x69, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x4c, 0x65, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x53, 0x79, 0x6d, 0x52, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12,
	0x39, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x85, 0x02, 0x0a, 0x3b, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65,
	0x53, 0x79, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x3d, 0x0a, 0x04, 0x44, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41,
	0x70, 0x69, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x4c, 0x65, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x53, 0x79, 0x6d, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x50, 0x78,
	0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0xfb, 0x01, 0x0a, 0x36, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x5f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x38, 0x0a,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x50, 0x78,
	0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x50, 0x78, 0x6d, 0x2e,
	0x41, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x89, 0x02, 0x0a, 0x3d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x12, 0x3f, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x64, 0x12, 0x39, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xf7, 0x01, 0x0a,
	0x34, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x53,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x36, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a,
	0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x19, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x85, 0x02, 0x0a, 0x3b, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x41, 0x70, 0x69, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x3d, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70,
	0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xe5,
	0x01, 0x0a, 0x2b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x6c, 0x12, 0x2d,
	0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x50,
	0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x6c, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a,
	0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x19, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xf3, 0x01, 0x0a, 0x32, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x41, 0x70, 0x69, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x50, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x34, 0x0a,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x50, 0x78,
	0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x50, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x64, 0x12, 0x39, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xe9, 0x01, 0x0a,
	0x2d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x77, 0x61, 0x70, 0x12, 0x2f,
	0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x50,
	0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x77, 0x61, 0x70, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a,
	0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x19, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18,
	0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xf7, 0x01, 0x0a, 0x34, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x77, 0x61, 0x70, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x12, 0x36, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x77, 0x61, 0x70, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x50, 0x78,
	0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0xed, 0x01, 0x0a, 0x2f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x5f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x31, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x50, 0x78,
	0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0xfb, 0x01, 0x0a, 0x36, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x5f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x38, 0x0a,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x50, 0x78,
	0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x50, 0x78, 0x6d, 0x2e,
	0x41, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0xe1, 0x01, 0x0a, 0x29, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x2b,
	0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x50,
	0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e,
	0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0xeb, 0x01, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41,
	0x70, 0x69, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x5f, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x30, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x50, 0x78,
	0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0xe7, 0x01, 0x0a, 0x2c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x5f, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x64, 0x12, 0x39, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xf5, 0x01, 0x0a,
	0x33, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x12, 0x35, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e,
	0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0xd7, 0x01, 0x0a, 0x24, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41,
	0x70, 0x69, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x26, 0x0a,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x50, 0x78,
	0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70,
	0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xe5,
	0x01, 0x0a, 0x2b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2d,
	0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x50,
	0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a,
	0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x19, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xf1, 0x01, 0x0a, 0x31, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x41, 0x70, 0x69, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x33, 0x0a, 0x04,
	0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x50, 0x78, 0x6d,
	0x2e, 0x41, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x52, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12,
	0x39, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xe3, 0x01, 0x0a, 0x2a, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2c, 0x0a, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70,
	0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x50, 0x78, 0x6d, 0x2e,
	0x41, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0xf1, 0x01, 0x0a, 0x31, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x33, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e,
	0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0xf1, 0x01, 0x0a, 0x31, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41,
	0x70, 0x69, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x58, 0x68, 0x65, 0x64, 0x67, 0x65, 0x12, 0x33, 0x0a, 0x04, 0x44, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41,
	0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x58, 0x68, 0x65, 0x64, 0x67, 0x65, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a,
	0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x19, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18,
	0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xff, 0x01, 0x0a, 0x38, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x58, 0x68, 0x65, 0x64, 0x67, 0x65, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x3a, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x58, 0x68,
	0x65, 0x64, 0x67, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12,
	0x39, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xe7, 0x01, 0x0a, 0x2c, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x41, 0x64, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x50, 0x78, 0x6d, 0x2e,
	0x41, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x41, 0x64, 0x64, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e,
	0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0xe3, 0x01, 0x0a, 0x2a, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41,
	0x70, 0x69, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x12, 0x2c, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12,
	0x39, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xef, 0x01, 0x0a, 0x30, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12,
	0x32, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x52, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x64, 0x12, 0x39, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xd5, 0x01, 0x0a,
	0x23, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x12, 0x25, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x43, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e,
	0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0xcd, 0x01, 0x0a, 0x1f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41,
	0x70, 0x69, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x5f, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x21, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69,
	0x2e, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e,
	0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0xd9, 0x01, 0x0a, 0x25, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41,
	0x70, 0x69, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x5f, 0x50, 0x6f, 0x6f, 0x6c, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x27,
	0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x50,
	0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x6f, 0x6f, 0x6c, 0x53, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x50, 0x78, 0x6d, 0x2e,
	0x41, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0xd3, 0x01, 0x0a, 0x22, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x24, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a,
	0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x19, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xdf, 0x01, 0x0a, 0x28, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x41, 0x70, 0x69, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x12, 0x2a, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a,
	0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x19, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18,
	0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xd5, 0x01, 0x0a, 0x23, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x12, 0x25, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x50, 0x78, 0x6d, 0x2e,
	0x41, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0xe1, 0x01, 0x0a, 0x29, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2b,
	0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x50,
	0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e,
	0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0xef, 0x01, 0x0a, 0x30, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41,
	0x70, 0x69, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x5f, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x32, 0x0a, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70,
	0x69, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a,
	0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x19, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xe1, 0x01, 0x0a, 0x29, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x41, 0x70, 0x69, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x12, 0x2b, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12,
	0x39, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xef, 0x01, 0x0a, 0x30, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12,
	0x32, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x64, 0x12, 0x39, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xef, 0x01, 0x0a,
	0x30, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x53, 0x63, 0x61, 0x6c, 0x69, 0x6e,
	0x67, 0x12, 0x32, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x53, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x52,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70,
	0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xdf,
	0x01, 0x0a, 0x28, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x54, 0x72, 0x61, 0x64, 0x65, 0x12, 0x2a, 0x0a, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x50, 0x78, 0x6d, 0x2e,
	0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x54, 0x72, 0x61, 0x64,
	0x65, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x50, 0x78, 0x6d, 0x2e,
	0x41, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0xed, 0x01, 0x0a, 0x2f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x54, 0x72, 0x61, 0x64, 0x65, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x12, 0x31, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x54, 0x72, 0x61, 0x64, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x50, 0x78, 0x6d, 0x2e,
	0x41, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0xd5, 0x01, 0x0a, 0x23, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f,
	0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x12, 0x25, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69,
	0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a,
	0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x19, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18,
	0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xd1, 0x01, 0x0a, 0x21, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x23,
	0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x50,
	0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x52, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x64, 0x12, 0x39, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x6e, 0x0a, 0x23,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x29, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c,
	0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x7c, 0x0a, 0x2a,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x30, 0x0a, 0x04, 0x44, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41,
	0x70, 0x69, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x82, 0x01, 0x0a, 0x2d, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x64, 0x12, 0x33, 0x0a, 0x04,
	0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x50, 0x78, 0x6d,
	0x2e, 0x41, 0x70, 0x69, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x64, 0x52, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22,
	0x90, 0x01, 0x0a, 0x34, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x6e,
	0x64, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x3a, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69,
	0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x44,
	0x69, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x64, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x04,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x64, 0x22, 0x96, 0x01, 0x0a, 0x37, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x65, 0x76, 0x65,
	0x72, 0x61, 0x67, 0x65, 0x43, 0x63, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x3d,
	0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x50,
	0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x43, 0x63, 0x79,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a,
	0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x96, 0x01, 0x0a, 0x37,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x53, 0x79, 0x6d,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x3d, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x65,
	0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x53, 0x79, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x64, 0x22, 0x9a, 0x01, 0x0a, 0x39, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41,
	0x70, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x12, 0x3f, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x64, 0x22, 0x96, 0x01, 0x0a, 0x37, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x3d, 0x0a,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x50, 0x78,
	0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x84, 0x01, 0x0a, 0x2e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x50, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x34, 0x0a,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x50, 0x78,
	0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x50, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x64, 0x22, 0x88, 0x01, 0x0a, 0x30, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x77, 0x61, 0x70, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x36, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x77, 0x61,
	0x70, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c,
	0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x7e, 0x0a, 0x2b,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x31, 0x0a, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x50, 0x78, 0x6d, 0x2e,
	0x41, 0x70, 0x69, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c,
	0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x8c, 0x01, 0x0a,
	0x32, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x12, 0x38, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a,
	0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x72, 0x0a, 0x25, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x12, 0x2b, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22,
	0x86, 0x01, 0x0a, 0x2f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x12, 0x35, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x68, 0x0a, 0x20, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x41, 0x70, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x26, 0x0a, 0x04,
	0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x50, 0x78, 0x6d,
	0x2e, 0x41, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x04,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x64, 0x22, 0x76, 0x0a, 0x27, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2d, 0x0a,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x50, 0x78,
	0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x82, 0x01, 0x0a, 0x2d, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x33, 0x0a, 0x04,
	0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x50, 0x78, 0x6d,
	0x2e, 0x41, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x52, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22,
	0x74, 0x0a, 0x26, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2c, 0x0a, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70,
	0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x82, 0x01, 0x0a, 0x2d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x41, 0x70, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x33, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x90, 0x01, 0x0a, 0x34, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x58, 0x68, 0x65, 0x64, 0x67, 0x65, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x12, 0x3a, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x58, 0x68, 0x65, 0x64,
	0x67, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x78, 0x0a,
	0x28, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x41, 0x64, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70,
	0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x41, 0x64, 0x64, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x7e, 0x0a, 0x2b, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x41, 0x70, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x7e, 0x0a, 0x2b, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x41, 0x70, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x74, 0x0a, 0x26, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x41, 0x70, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x12, 0x2c, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x80, 0x01,
	0x0a, 0x2c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x32,
	0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x50,
	0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x52, 0x04, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64,
	0x22, 0x66, 0x0a, 0x1f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x12, 0x25, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x5e, 0x0a, 0x1b, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x41, 0x70, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x21, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e,
	0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x6a, 0x0a, 0x21, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x41, 0x70, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x50, 0x6f, 0x6f, 0x6c, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x27, 0x0a,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x50, 0x78,
	0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x6f, 0x6f, 0x6c, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x64, 0x22, 0x64, 0x0a, 0x1e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70,
	0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x24, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x70, 0x0a, 0x24, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x12, 0x2a, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c,
	0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x66, 0x0a, 0x1f,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12,
	0x25, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x64, 0x22, 0x72, 0x0a, 0x25, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70,
	0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2b, 0x0a,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x50, 0x78,
	0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x80, 0x01, 0x0a, 0x2c, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x32, 0x0a, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70,
	0x69, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a,
	0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x80, 0x01, 0x0a, 0x2c,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x32, 0x0a, 0x04,
	0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x50, 0x78, 0x6d,
	0x2e, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x80,
	0x01, 0x0a, 0x2c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x53, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x12,
	0x32, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x53, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x64, 0x22, 0x7e, 0x0a, 0x2b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x54, 0x72, 0x61, 0x64, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x12, 0x31, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x54, 0x72, 0x61, 0x64, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x64, 0x22, 0x66, 0x0a, 0x1f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x53, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x12, 0x25, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x62, 0x0a, 0x1d, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x23, 0x0a, 0x04, 0x44, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41,
	0x70, 0x69, 0x2e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0xc3, 0x01,
	0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x52, 0x4b, 0x65, 0x79, 0x31,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x52, 0x4b, 0x65, 0x79, 0x31, 0x12, 0x14, 0x0a,
	0x05, 0x52, 0x4b, 0x65, 0x79, 0x32, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x52, 0x4b,
	0x65, 0x79, 0x32, 0x22, 0xe0, 0x02, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x72, 0x61, 0x64, 0x65, 0x53, 0x70, 0x61, 0x6e, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x54, 0x72, 0x61, 0x64, 0x65, 0x53, 0x70, 0x61, 0x6e,
	0x12, 0x22, 0x0a, 0x0c, 0x54, 0x72, 0x61, 0x64, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x54, 0x72, 0x61, 0x64, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x52, 0x69, 0x73, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x52, 0x69, 0x73, 0x6b,
	0x12, 0x24, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x58, 0x48, 0x65, 0x64, 0x67,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x58, 0x48, 0x65, 0x64, 0x67, 0x65, 0x22, 0x9d, 0x05, 0x0a, 0x16, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12,
	0x18, 0x0a, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x53, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x69, 0x6e,
	0x53, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x4d, 0x69, 0x6e, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x61, 0x78, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x4d, 0x61, 0x78, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x54, 0x69, 0x6d, 0x65, 0x54, 0x6f, 0x4c, 0x69, 0x76, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x54, 0x69, 0x6d, 0x65, 0x54, 0x6f, 0x4c, 0x69, 0x76, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x41, 0x4d, 0x69, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x41, 0x4d, 0x69,
	0x6e, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x53, 0x74, 0x65, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x05, 0x41, 0x53, 0x74, 0x65, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x42, 0x42, 0x6f, 0x6f, 0x6b,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x42, 0x42, 0x6f, 0x6f, 0x6b, 0x12, 0x14, 0x0a,
	0x05, 0x42, 0x4c, 0x6f, 0x63, 0x6b, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x42, 0x4c,
	0x6f, 0x63, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x42, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x06, 0x42, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x42,
	0x44, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x42, 0x44, 0x65,
	0x6c, 0x61, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x4a, 0x69, 0x74, 0x74, 0x65, 0x72, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x42, 0x4a, 0x69, 0x74, 0x74, 0x65, 0x72, 0x12, 0x1c, 0x0a,
	0x09, 0x4c, 0x71, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x4c, 0x71, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x4c,
	0x71, 0x50, 0x6f, 0x6f, 0x6c, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4c, 0x71, 0x50,
	0x6f, 0x6f, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x45, 0x78, 0x65, 0x63, 0x4d, 0x6f, 0x64, 0x65, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x45, 0x78, 0x65, 0x63, 0x4d, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x49, 0x6d, 0x70,
	0x72, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0c, 0x49, 0x6d, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1a, 0x0a,
	0x06, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x15, 0x20, 0x03, 0x28, 0x01, 0x42, 0x02, 0x10,
	0x00, 0x52, 0x06, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x46, 0x6f, 0x6b,
	0x18, 0x16, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x46, 0x6f, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x53,
	0x74, 0x65, 0x70, 0x18, 0x17, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x53, 0x74, 0x65, 0x70, 0x12,
	0x16, 0x0a, 0x06, 0x41, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x18, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x41, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x2d, 0x0a, 0x08, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x65, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x50, 0x78, 0x6d, 0x2e,
	0x41, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x52, 0x08, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x7b, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x22, 0x86, 0x01, 0x0a, 0x16, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x5e, 0x0a, 0x16,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x58, 0x68, 0x65, 0x64, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x81, 0x01, 0x0a,
	0x1d, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x58, 0x68, 0x65, 0x64, 0x67, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x22, 0x91, 0x02, 0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x41, 0x64, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x53, 0x65, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x53, 0x65, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x53, 0x79, 0x6d, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x53, 0x79, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x41, 0x63, 0x63, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x41, 0x63, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x75,
	0x62, 0x69, 0x64, 0x31, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x75, 0x62, 0x69,
	0x64, 0x31, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x75, 0x62, 0x69, 0x64, 0x32, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x53, 0x75, 0x62, 0x69, 0x64, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x75,
	0x62, 0x69, 0x64, 0x33, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x75, 0x62, 0x69,
	0x64, 0x33, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x75, 0x62, 0x69, 0x64, 0x34, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x53, 0x75, 0x62, 0x69, 0x64, 0x34, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x44, 0x0a, 0x14, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x22, 0x94, 0x02, 0x0a, 0x14, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x12, 0x10, 0x0a, 0x03, 0x53, 0x65, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x53, 0x65, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x53, 0x79, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x53, 0x79, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x41, 0x63, 0x63, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x41, 0x63, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x75, 0x62, 0x69, 0x64,
	0x31, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x75, 0x62, 0x69, 0x64, 0x31, 0x12,
	0x16, 0x0a, 0x06, 0x53, 0x75, 0x62, 0x69, 0x64, 0x32, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x53, 0x75, 0x62, 0x69, 0x64, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x75, 0x62, 0x69, 0x64,
	0x33, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x75, 0x62, 0x69, 0x64, 0x33, 0x12,
	0x16, 0x0a, 0x06, 0x53, 0x75, 0x62, 0x69, 0x64, 0x34, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x53, 0x75, 0x62, 0x69, 0x64, 0x34, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12,
	0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x8f, 0x01, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x22, 0xd6, 0x04, 0x0a, 0x15, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x42, 0x61, 0x73, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x42, 0x61, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x51, 0x75, 0x6f, 0x74, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x56,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x44, 0x65, 0x70, 0x74, 0x68, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x44, 0x65, 0x70, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x4c,
	0x71, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x4c, 0x71, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x71, 0x50,
	0x6f, 0x6f, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4c, 0x71, 0x50, 0x6f, 0x6f,
	0x6c, 0x12, 0x12, 0x0a, 0x04, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12,
	0x1a, 0x0a, 0x06, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x01, 0x42,
	0x02, 0x10, 0x00, 0x52, 0x06, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x56,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x4d, 0x69, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x4d, 0x69,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x71, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x4c, 0x71, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x4c, 0x71, 0x4c, 0x6f, 0x63, 0x6b, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4c,
	0x71, 0x4c, 0x6f, 0x63, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x4c, 0x71, 0x42, 0x6f, 0x6f, 0x73, 0x74,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x4c, 0x71, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x2d, 0x0a,
	0x08, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x65, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x61, 0x6c, 0x52, 0x08, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x50, 0x0a, 0x08,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2c,
	0x0a, 0x06, 0x49, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x86, 0x02, 0x0a,
	0x08, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x45, 0x6e, 0x64,
	0x4f, 0x66, 0x57, 0x65, 0x65, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x45, 0x6e,
	0x64, 0x4f, 0x66, 0x57, 0x65, 0x65, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x46, 0x72, 0x6f, 0x6d, 0x44,
	0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x46, 0x72, 0x6f, 0x6d, 0x44, 0x61,
	0x79, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x72, 0x6f, 0x6d, 0x48, 0x6f, 0x75, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x46, 0x72, 0x6f, 0x6d, 0x48, 0x6f, 0x75, 0x72, 0x12, 0x18, 0x0a,
	0x07, 0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x46, 0x72, 0x6f, 0x6d, 0x53,
	0x65, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x65,
	0x63, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x54,
	0x6f, 0x44, 0x61, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x54, 0x6f, 0x44, 0x61,
	0x79, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x6f, 0x48, 0x6f, 0x75, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x54, 0x6f, 0x48, 0x6f, 0x75, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x4d,
	0x69, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x54, 0x6f, 0x4d, 0x69, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x54, 0x6f, 0x53, 0x65, 0x63, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x54, 0x6f, 0x53, 0x65, 0x63, 0x22, 0x66, 0x0a, 0x04, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0xd9, 0x03,
	0x0a, 0x0a, 0x50, 0x6f, 0x6f, 0x6c, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x6f, 0x6f, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x4d, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x61, 0x69, 0x6c, 0x6f, 0x76,
	0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x61, 0x69, 0x6c, 0x6f, 0x76,
	0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x28, 0x0a, 0x0f,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x6f, 0x6c, 0x65, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x6f, 0x6c,
	0x65, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x2d, 0x0a, 0x08, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x65, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41,
	0x70, 0x69, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x52, 0x08, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x20, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x73, 0x18, 0x66, 0x20, 0x03, 0x28, 0x05, 0x42, 0x02, 0x10, 0x00, 0x52, 0x09, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x12, 0x20, 0x0a, 0x09, 0x46, 0x61, 0x69, 0x6c, 0x6f,
	0x76, 0x65, 0x72, 0x73, 0x18, 0x67, 0x20, 0x03, 0x28, 0x05, 0x42, 0x02, 0x10, 0x00, 0x52, 0x09,
	0x46, 0x61, 0x69, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x73, 0x22, 0x69, 0x0a, 0x07, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x22, 0xf6, 0x02, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x42, 0x69, 0x64, 0x4d, 0x61, 0x72, 0x6b, 0x75, 0x70, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x09, 0x42, 0x69, 0x64, 0x4d, 0x61, 0x72, 0x6b, 0x75, 0x70, 0x12, 0x1c,
	0x0a, 0x09, 0x41, 0x73, 0x6b, 0x4d, 0x61, 0x72, 0x6b, 0x75, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x09, 0x41, 0x73, 0x6b, 0x4d, 0x61, 0x72, 0x6b, 0x75, 0x70, 0x12, 0x1c, 0x0a, 0x09,
	0x4d, 0x69, 0x6e, 0x53, 0x70, 0x72, 0x65, 0x61, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x09, 0x4d, 0x69, 0x6e, 0x53, 0x70, 0x72, 0x65, 0x61, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x61,
	0x78, 0x53, 0x70, 0x72, 0x65, 0x61, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x4d,
	0x61, 0x78, 0x53, 0x70, 0x72, 0x65, 0x61, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x70, 0x72, 0x65,
	0x61, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x53, 0x70, 0x72, 0x65, 0x61, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x50, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18,
	0x0a, 0x07, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x61, 0x79, 0x65,
	0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x2d,
	0x0a, 0x08, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x65, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x61, 0x6c, 0x52, 0x08, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xc2, 0x01,
	0x0a, 0x08, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x4d, 0x61,
	0x72, 0x67, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4d, 0x61, 0x72, 0x67,
	0x69, 0x6e, 0x22, 0x90, 0x01, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x83, 0x01, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x72, 0x0a, 0x0e, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0xb0, 0x03, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x16, 0x0a,
	0x06, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x49, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x44, 0x65, 0x70, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x44, 0x65, 0x70, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x61, 0x72, 0x6b, 0x75, 0x70, 0x42,
	0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x4d, 0x61, 0x72, 0x6b, 0x75, 0x70,
	0x42, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x61, 0x72, 0x6b, 0x75, 0x70, 0x41, 0x73, 0x6b,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x4d, 0x61, 0x72, 0x6b, 0x75, 0x70, 0x41, 0x73,
	0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x44, 0x65,
	0x6c, 0x61, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x76, 0x65, 0x12, 0x2d, 0x0a, 0x08, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x65, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x52, 0x08, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0xd7, 0x01, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x53,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x53, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x12, 0x1e, 0x0a, 0x0a, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x09, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x54, 0x72, 0x61, 0x64, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0a, 0x54, 0x72, 0x61, 0x64, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x54, 0x72, 0x61, 0x64, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x09, 0x54, 0x72, 0x61, 0x64, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x89, 0x01, 0x0a,
	0x0d, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x54, 0x72, 0x61, 0x64, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x22, 0xd8, 0x03, 0x0a, 0x14, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x54, 0x72, 0x61, 0x64, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x54, 0x72, 0x61, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x54, 0x72,
	0x61, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x4d,
	0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x4d, 0x69, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x53, 0x74, 0x65, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x53, 0x74, 0x65,
	0x70, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x53,
	0x77, 0x65, 0x65, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x53, 0x77, 0x65, 0x65,
	0x70, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x50, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x20, 0x0a, 0x0b, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x57, 0x61, 0x72, 0x6e, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x57, 0x61, 0x72,
	0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x50, 0x65, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x65, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x4b, 0x69, 0x6c, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4b, 0x69, 0x6c, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x52,
	0x65, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x10, 0x0a,
	0x03, 0x43, 0x63, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x43, 0x63, 0x79, 0x12,
	0x22, 0x0a, 0x0c, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x22, 0x96, 0x01, 0x0a, 0x08, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x22, 0xf1, 0x02, 0x0a,
	0x06, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x63, 0x75, 0x72,
	0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x53, 0x65, 0x63, 0x75, 0x72,
	0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x42, 0x61, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x42, 0x61, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x51, 0x75, 0x6f, 0x74, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x44, 0x69, 0x67, 0x69, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x06, 0x44, 0x69, 0x67, 0x69, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x69, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03,
	0x4d, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x06, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x42,
	0x61, 0x73, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x64, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0e, 0x42, 0x61, 0x73, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x51, 0x75,
	0x6f, 0x74, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x2d, 0x0a, 0x08, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x65, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x50, 0x78, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x52, 0x08, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x2a, 0x43, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x10, 0x00,
	0x12, 0x0a, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07,
	0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x45, 0x64, 0x69,
	0x74, 0x65, 0x64, 0x10, 0x03, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_Configuration_proto_rawDescOnce sync.Once
	file_Configuration_proto_rawDescData = file_Configuration_proto_rawDesc
)

func file_Configuration_proto_rawDescGZIP() []byte {
	file_Configuration_proto_rawDescOnce.Do(func() {
		file_Configuration_proto_rawDescData = protoimpl.X.CompressGZIP(file_Configuration_proto_rawDescData)
	})
	return file_Configuration_proto_rawDescData
}

var file_Configuration_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_Configuration_proto_msgTypes = make([]protoimpl.MessageInfo, 140)
var file_Configuration_proto_goTypes = []interface{}{
	(ConfigUpdateType)(0),                                                 // 0: Pxm.Api.ConfigUpdateType
	(*AccountGroup)(nil),                                                  // 1: Pxm.Api.AccountGroup
	(*AccountGroupSetting)(nil),                                           // 2: Pxm.Api.AccountGroupSetting
	(*AccountProfileDividend)(nil),                                        // 3: Pxm.Api.AccountProfileDividend
	(*AccountProfileDividendSetting)(nil),                                 // 4: Pxm.Api.AccountProfileDividendSetting
	(*AccountProfileLeverageCcy)(nil),                                     // 5: Pxm.Api.AccountProfileLeverageCcy
	(*AccountProfileLeverageCcySetting)(nil),                              // 6: Pxm.Api.AccountProfileLeverageCcySetting
	(*AccountProfileLeverageSym)(nil),                                     // 7: Pxm.Api.AccountProfileLeverageSym
	(*AccountProfileLeverageSymSetting)(nil),                              // 8: Pxm.Api.AccountProfileLeverageSymSetting
	(*AccountProfileLimitCurrency)(nil),                                   // 9: Pxm.Api.AccountProfileLimitCurrency
	(*AccountProfileLimitCurrencySetting)(nil),                            // 10: Pxm.Api.AccountProfileLimitCurrencySetting
	(*AccountProfileLimitSymbol)(nil),                                     // 11: Pxm.Api.AccountProfileLimitSymbol
	(*AccountProfileLimitSymbolSetting)(nil),                              // 12: Pxm.Api.AccountProfileLimitSymbolSetting
	(*AccountProfilePl)(nil),                                              // 13: Pxm.Api.AccountProfilePl
	(*AccountProfilePlSetting)(nil),                                       // 14: Pxm.Api.AccountProfilePlSetting
	(*AccountProfileSwap)(nil),                                            // 15: Pxm.Api.AccountProfileSwap
	(*AccountProfileSwapSetting)(nil),                                     // 16: Pxm.Api.AccountProfileSwapSetting
	(*AccountProfileWallet)(nil),                                          // 17: Pxm.Api.AccountProfileWallet
	(*AccountProfileWalletSetting)(nil),                                   // 18: Pxm.Api.AccountProfileWalletSetting
	(*AccountSetting)(nil),                                                // 19: Pxm.Api.AccountSetting
	(*CommissionConnector)(nil),                                           // 20: Pxm.Api.CommissionConnector
	(*CommissionProfile)(nil),                                             // 21: Pxm.Api.CommissionProfile
	(*CommissionProfileSetting)(nil),                                      // 22: Pxm.Api.CommissionProfileSetting
	(*ConfigApiReferenceRequest)(nil),                                     // 23: Pxm.Api.ConfigApiReferenceRequest
	(*ConfigApiReferenceResponse)(nil),                                    // 24: Pxm.Api.ConfigApiReferenceResponse
	(*ConfigApiResponse)(nil),                                             // 25: Pxm.Api.ConfigApiResponse
	(*ConfigApiSubscribeRequest)(nil),                                     // 26: Pxm.Api.ConfigApiSubscribeRequest
	(*ConfigApiSubscribeResponse_AccountGroup)(nil),                       // 27: Pxm.Api.ConfigApiSubscribeResponse_AccountGroup
	(*ConfigApiSubscribeResponse_AccountGroupSetting)(nil),                // 28: Pxm.Api.ConfigApiSubscribeResponse_AccountGroupSetting
	(*ConfigApiSubscribeResponse_AccountProfileDividend)(nil),             // 29: Pxm.Api.ConfigApiSubscribeResponse_AccountProfileDividend
	(*ConfigApiSubscribeResponse_AccountProfileDividendSetting)(nil),      // 30: Pxm.Api.ConfigApiSubscribeResponse_AccountProfileDividendSetting
	(*ConfigApiSubscribeResponse_AccountProfileLeverageCcy)(nil),          // 31: Pxm.Api.ConfigApiSubscribeResponse_AccountProfileLeverageCcy
	(*ConfigApiSubscribeResponse_AccountProfileLeverageCcySetting)(nil),   // 32: Pxm.Api.ConfigApiSubscribeResponse_AccountProfileLeverageCcySetting
	(*ConfigApiSubscribeResponse_AccountProfileLeverageSym)(nil),          // 33: Pxm.Api.ConfigApiSubscribeResponse_AccountProfileLeverageSym
	(*ConfigApiSubscribeResponse_AccountProfileLeverageSymSetting)(nil),   // 34: Pxm.Api.ConfigApiSubscribeResponse_AccountProfileLeverageSymSetting
	(*ConfigApiSubscribeResponse_AccountProfileLimitCurrency)(nil),        // 35: Pxm.Api.ConfigApiSubscribeResponse_AccountProfileLimitCurrency
	(*ConfigApiSubscribeResponse_AccountProfileLimitCurrencySetting)(nil), // 36: Pxm.Api.ConfigApiSubscribeResponse_AccountProfileLimitCurrencySetting
	(*ConfigApiSubscribeResponse_AccountProfileLimitSymbol)(nil),          // 37: Pxm.Api.ConfigApiSubscribeResponse_AccountProfileLimitSymbol
	(*ConfigApiSubscribeResponse_AccountProfileLimitSymbolSetting)(nil),   // 38: Pxm.Api.ConfigApiSubscribeResponse_AccountProfileLimitSymbolSetting
	(*ConfigApiSubscribeResponse_AccountProfilePl)(nil),                   // 39: Pxm.Api.ConfigApiSubscribeResponse_AccountProfilePl
	(*ConfigApiSubscribeResponse_AccountProfilePlSetting)(nil),            // 40: Pxm.Api.ConfigApiSubscribeResponse_AccountProfilePlSetting
	(*ConfigApiSubscribeResponse_AccountProfileSwap)(nil),                 // 41: Pxm.Api.ConfigApiSubscribeResponse_AccountProfileSwap
	(*ConfigApiSubscribeResponse_AccountProfileSwapSetting)(nil),          // 42: Pxm.Api.ConfigApiSubscribeResponse_AccountProfileSwapSetting
	(*ConfigApiSubscribeResponse_AccountProfileWallet)(nil),               // 43: Pxm.Api.ConfigApiSubscribeResponse_AccountProfileWallet
	(*ConfigApiSubscribeResponse_AccountProfileWalletSetting)(nil),        // 44: Pxm.Api.ConfigApiSubscribeResponse_AccountProfileWalletSetting
	(*ConfigApiSubscribeResponse_AccountSetting)(nil),                     // 45: Pxm.Api.ConfigApiSubscribeResponse_AccountSetting
	(*ConfigApiSubscribeResponse_CommissionConnector)(nil),                // 46: Pxm.Api.ConfigApiSubscribeResponse_CommissionConnector
	(*ConfigApiSubscribeResponse_CommissionProfile)(nil),                  // 47: Pxm.Api.ConfigApiSubscribeResponse_CommissionProfile
	(*ConfigApiSubscribeResponse_CommissionProfileSetting)(nil),           // 48: Pxm.Api.ConfigApiSubscribeResponse_CommissionProfileSetting
	(*ConfigApiSubscribeResponse_Connector)(nil),                          // 49: Pxm.Api.ConfigApiSubscribeResponse_Connector
	(*ConfigApiSubscribeResponse_ConnectorAccount)(nil),                   // 50: Pxm.Api.ConfigApiSubscribeResponse_ConnectorAccount
	(*ConfigApiSubscribeResponse_ConnectorAccountSymbol)(nil),             // 51: Pxm.Api.ConfigApiSubscribeResponse_ConnectorAccountSymbol
	(*ConfigApiSubscribeResponse_ConnectorConfig)(nil),                    // 52: Pxm.Api.ConfigApiSubscribeResponse_ConnectorConfig
	(*ConfigApiSubscribeResponse_ConnectorConfigSetting)(nil),             // 53: Pxm.Api.ConfigApiSubscribeResponse_ConnectorConfigSetting
	(*ConfigApiSubscribeResponse_ConnectorProfileXhedge)(nil),             // 54: Pxm.Api.ConfigApiSubscribeResponse_ConnectorProfileXhedge
	(*ConfigApiSubscribeResponse_ConnectorProfileXhedgeSetting)(nil),      // 55: Pxm.Api.ConfigApiSubscribeResponse_ConnectorProfileXhedgeSetting
	(*ConfigApiSubscribeResponse_ConnectorRouteAdd)(nil),                  // 56: Pxm.Api.ConfigApiSubscribeResponse_ConnectorRouteAdd
	(*ConfigApiSubscribeResponse_ConnectorStream)(nil),                    // 57: Pxm.Api.ConfigApiSubscribeResponse_ConnectorStream
	(*ConfigApiSubscribeResponse_ConnectorStreamSymbol)(nil),              // 58: Pxm.Api.ConfigApiSubscribeResponse_ConnectorStreamSymbol
	(*ConfigApiSubscribeResponse_Currency)(nil),                           // 59: Pxm.Api.ConfigApiSubscribeResponse_Currency
	(*ConfigApiSubscribeResponse_Pool)(nil),                               // 60: Pxm.Api.ConfigApiSubscribeResponse_Pool
	(*ConfigApiSubscribeResponse_PoolSymbol)(nil),                         // 61: Pxm.Api.ConfigApiSubscribeResponse_PoolSymbol
	(*ConfigApiSubscribeResponse_Profile)(nil),                            // 62: Pxm.Api.ConfigApiSubscribeResponse_Profile
	(*ConfigApiSubscribeResponse_ProfileSymbol)(nil),                      // 63: Pxm.Api.ConfigApiSubscribeResponse_ProfileSymbol
	(*ConfigApiSubscribeResponse_Provider)(nil),                           // 64: Pxm.Api.ConfigApiSubscribeResponse_Provider
	(*ConfigApiSubscribeResponse_ProviderConfig)(nil),                     // 65: Pxm.Api.ConfigApiSubscribeResponse_ProviderConfig
	(*ConfigApiSubscribeResponse_ProviderConfigSetting)(nil),              // 66: Pxm.Api.ConfigApiSubscribeResponse_ProviderConfigSetting
	(*ConfigApiSubscribeResponse_ProviderStream)(nil),                     // 67: Pxm.Api.ConfigApiSubscribeResponse_ProviderStream
	(*ConfigApiSubscribeResponse_ProviderStreamSetting)(nil),              // 68: Pxm.Api.ConfigApiSubscribeResponse_ProviderStreamSetting
	(*ConfigApiSubscribeResponse_ProviderSymbolScaling)(nil),              // 69: Pxm.Api.ConfigApiSubscribeResponse_ProviderSymbolScaling
	(*ConfigApiSubscribeResponse_ProviderTrade)(nil),                      // 70: Pxm.Api.ConfigApiSubscribeResponse_ProviderTrade
	(*ConfigApiSubscribeResponse_ProviderTradeSetting)(nil),               // 71: Pxm.Api.ConfigApiSubscribeResponse_ProviderTradeSetting
	(*ConfigApiSubscribeResponse_Security)(nil),                           // 72: Pxm.Api.ConfigApiSubscribeResponse_Security
	(*ConfigApiSubscribeResponse_Symbol)(nil),                             // 73: Pxm.Api.ConfigApiSubscribeResponse_Symbol
	(*ConfigApiUpdateRequest_AccountGroup)(nil),                           // 74: Pxm.Api.ConfigApiUpdateRequest_AccountGroup
	(*ConfigApiUpdateRequest_AccountGroupSetting)(nil),                    // 75: Pxm.Api.ConfigApiUpdateRequest_AccountGroupSetting
	(*ConfigApiUpdateRequest_AccountProfileDividend)(nil),                 // 76: Pxm.Api.ConfigApiUpdateRequest_AccountProfileDividend
	(*ConfigApiUpdateRequest_AccountProfileDividendSetting)(nil),          // 77: Pxm.Api.ConfigApiUpdateRequest_AccountProfileDividendSetting
	(*ConfigApiUpdateRequest_AccountProfileLeverageCcySetting)(nil),       // 78: Pxm.Api.ConfigApiUpdateRequest_AccountProfileLeverageCcySetting
	(*ConfigApiUpdateRequest_AccountProfileLeverageSymSetting)(nil),       // 79: Pxm.Api.ConfigApiUpdateRequest_AccountProfileLeverageSymSetting
	(*ConfigApiUpdateRequest_AccountProfileLimitCurrencySetting)(nil),     // 80: Pxm.Api.ConfigApiUpdateRequest_AccountProfileLimitCurrencySetting
	(*ConfigApiUpdateRequest_AccountProfileLimitSymbolSetting)(nil),       // 81: Pxm.Api.ConfigApiUpdateRequest_AccountProfileLimitSymbolSetting
	(*ConfigApiUpdateRequest_AccountProfilePlSetting)(nil),                // 82: Pxm.Api.ConfigApiUpdateRequest_AccountProfilePlSetting
	(*ConfigApiUpdateRequest_AccountProfileSwapSetting)(nil),              // 83: Pxm.Api.ConfigApiUpdateRequest_AccountProfileSwapSetting
	(*ConfigApiUpdateRequest_AccountProfileWallet)(nil),                   // 84: Pxm.Api.ConfigApiUpdateRequest_AccountProfileWallet
	(*ConfigApiUpdateRequest_AccountProfileWalletSetting)(nil),            // 85: Pxm.Api.ConfigApiUpdateRequest_AccountProfileWalletSetting
	(*ConfigApiUpdateRequest_AccountSetting)(nil),                         // 86: Pxm.Api.ConfigApiUpdateRequest_AccountSetting
	(*ConfigApiUpdateRequest_CommissionProfileSetting)(nil),               // 87: Pxm.Api.ConfigApiUpdateRequest_CommissionProfileSetting
	(*ConfigApiUpdateRequest_Connector)(nil),                              // 88: Pxm.Api.ConfigApiUpdateRequest_Connector
	(*ConfigApiUpdateRequest_ConnectorAccount)(nil),                       // 89: Pxm.Api.ConfigApiUpdateRequest_ConnectorAccount
	(*ConfigApiUpdateRequest_ConnectorAccountSymbol)(nil),                 // 90: Pxm.Api.ConfigApiUpdateRequest_ConnectorAccountSymbol
	(*ConfigApiUpdateRequest_ConnectorConfig)(nil),                        // 91: Pxm.Api.ConfigApiUpdateRequest_ConnectorConfig
	(*ConfigApiUpdateRequest_ConnectorConfigSetting)(nil),                 // 92: Pxm.Api.ConfigApiUpdateRequest_ConnectorConfigSetting
	(*ConfigApiUpdateRequest_ConnectorProfileXhedgeSetting)(nil),          // 93: Pxm.Api.ConfigApiUpdateRequest_ConnectorProfileXhedgeSetting
	(*ConfigApiUpdateRequest_ConnectorRouteAdd)(nil),                      // 94: Pxm.Api.ConfigApiUpdateRequest_ConnectorRouteAdd
	(*ConfigApiUpdateRequest_ConnectorRouteDelete)(nil),                   // 95: Pxm.Api.ConfigApiUpdateRequest_ConnectorRouteDelete
	(*ConfigApiUpdateRequest_ConnectorRouteUpdate)(nil),                   // 96: Pxm.Api.ConfigApiUpdateRequest_ConnectorRouteUpdate
	(*ConfigApiUpdateRequest_ConnectorStream)(nil),                        // 97: Pxm.Api.ConfigApiUpdateRequest_ConnectorStream
	(*ConfigApiUpdateRequest_ConnectorStreamSymbol)(nil),                  // 98: Pxm.Api.ConfigApiUpdateRequest_ConnectorStreamSymbol
	(*ConfigApiUpdateRequest_Currency)(nil),                               // 99: Pxm.Api.ConfigApiUpdateRequest_Currency
	(*ConfigApiUpdateRequest_Pool)(nil),                                   // 100: Pxm.Api.ConfigApiUpdateRequest_Pool
	(*ConfigApiUpdateRequest_PoolSymbol)(nil),                             // 101: Pxm.Api.ConfigApiUpdateRequest_PoolSymbol
	(*ConfigApiUpdateRequest_Profile)(nil),                                // 102: Pxm.Api.ConfigApiUpdateRequest_Profile
	(*ConfigApiUpdateRequest_ProfileSymbol)(nil),                          // 103: Pxm.Api.ConfigApiUpdateRequest_ProfileSymbol
	(*ConfigApiUpdateRequest_Provider)(nil),                               // 104: Pxm.Api.ConfigApiUpdateRequest_Provider
	(*ConfigApiUpdateRequest_ProviderConfig)(nil),                         // 105: Pxm.Api.ConfigApiUpdateRequest_ProviderConfig
	(*ConfigApiUpdateRequest_ProviderConfigSetting)(nil),                  // 106: Pxm.Api.ConfigApiUpdateRequest_ProviderConfigSetting
	(*ConfigApiUpdateRequest_ProviderStreamSetting)(nil),                  // 107: Pxm.Api.ConfigApiUpdateRequest_ProviderStreamSetting
	(*ConfigApiUpdateRequest_ProviderSymbolScaling)(nil),                  // 108: Pxm.Api.ConfigApiUpdateRequest_ProviderSymbolScaling
	(*ConfigApiUpdateRequest_ProviderTradeSetting)(nil),                   // 109: Pxm.Api.ConfigApiUpdateRequest_ProviderTradeSetting
	(*ConfigApiUpdateRequest_Security)(nil),                               // 110: Pxm.Api.ConfigApiUpdateRequest_Security
	(*ConfigApiUpdateRequest_Symbol)(nil),                                 // 111: Pxm.Api.ConfigApiUpdateRequest_Symbol
	(*Connector)(nil),                                                     // 112: Pxm.Api.Connector
	(*ConnectorAccount)(nil),                                              // 113: Pxm.Api.ConnectorAccount
	(*ConnectorAccountSymbol)(nil),                                        // 114: Pxm.Api.ConnectorAccountSymbol
	(*ConnectorConfig)(nil),                                               // 115: Pxm.Api.ConnectorConfig
	(*ConnectorConfigSetting)(nil),                                        // 116: Pxm.Api.ConnectorConfigSetting
	(*ConnectorProfileXhedge)(nil),                                        // 117: Pxm.Api.ConnectorProfileXhedge
	(*ConnectorProfileXhedgeSetting)(nil),                                 // 118: Pxm.Api.ConnectorProfileXhedgeSetting
	(*ConnectorRouteAdd)(nil),                                             // 119: Pxm.Api.ConnectorRouteAdd
	(*ConnectorRouteDelete)(nil),                                          // 120: Pxm.Api.ConnectorRouteDelete
	(*ConnectorRouteUpdate)(nil),                                          // 121: Pxm.Api.ConnectorRouteUpdate
	(*ConnectorStream)(nil),                                               // 122: Pxm.Api.ConnectorStream
	(*ConnectorStreamSymbol)(nil),                                         // 123: Pxm.Api.ConnectorStreamSymbol
	(*Currency)(nil),                                                      // 124: Pxm.Api.Currency
	(*IdName)(nil),                                                        // 125: Pxm.Api.IdName
	(*Interval)(nil),                                                      // 126: Pxm.Api.Interval
	(*Pool)(nil),                                                          // 127: Pxm.Api.Pool
	(*PoolSymbol)(nil),                                                    // 128: Pxm.Api.PoolSymbol
	(*Profile)(nil),                                                       // 129: Pxm.Api.Profile
	(*ProfileSymbol)(nil),                                                 // 130: Pxm.Api.ProfileSymbol
	(*Provider)(nil),                                                      // 131: Pxm.Api.Provider
	(*ProviderConfig)(nil),                                                // 132: Pxm.Api.ProviderConfig
	(*ProviderConfigSetting)(nil),                                         // 133: Pxm.Api.ProviderConfigSetting
	(*ProviderStream)(nil),                                                // 134: Pxm.Api.ProviderStream
	(*ProviderStreamSetting)(nil),                                         // 135: Pxm.Api.ProviderStreamSetting
	(*ProviderSymbolScaling)(nil),                                         // 136: Pxm.Api.ProviderSymbolScaling
	(*ProviderTrade)(nil),                                                 // 137: Pxm.Api.ProviderTrade
	(*ProviderTradeSetting)(nil),                                          // 138: Pxm.Api.ProviderTradeSetting
	(*Security)(nil),                                                      // 139: Pxm.Api.Security
	(*Symbol)(nil),                                                        // 140: Pxm.Api.Symbol
	(ConfigReferenceType)(0),                                              // 141: Pxm.Enums.ConfigReferenceType
	(ConfigObjectType)(0),                                                 // 142: Pxm.Enums.ConfigObjectType
}
var file_Configuration_proto_depIdxs = []int32{
	141, // 0: Pxm.Api.ConfigApiReferenceRequest.RequestType:type_name -> Pxm.Enums.ConfigReferenceType
	125, // 1: Pxm.Api.ConfigApiReferenceResponse.Data:type_name -> Pxm.Api.IdName
	141, // 2: Pxm.Api.ConfigApiReferenceResponse.RequestType:type_name -> Pxm.Enums.ConfigReferenceType
	142, // 3: Pxm.Api.ConfigApiSubscribeRequest.RequestType:type_name -> Pxm.Enums.ConfigObjectType
	1,   // 4: Pxm.Api.ConfigApiSubscribeResponse_AccountGroup.Data:type_name -> Pxm.Api.AccountGroup
	0,   // 5: Pxm.Api.ConfigApiSubscribeResponse_AccountGroup.UpdateType:type_name -> Pxm.Api.ConfigUpdateType
	2,   // 6: Pxm.Api.ConfigApiSubscribeResponse_AccountGroupSetting.Data:type_name -> Pxm.Api.AccountGroupSetting
	0,   // 7: Pxm.Api.ConfigApiSubscribeResponse_AccountGroupSetting.UpdateType:type_name -> Pxm.Api.ConfigUpdateType
	3,   // 8: Pxm.Api.ConfigApiSubscribeResponse_AccountProfileDividend.Data:type_name -> Pxm.Api.AccountProfileDividend
	0,   // 9: Pxm.Api.ConfigApiSubscribeResponse_AccountProfileDividend.UpdateType:type_name -> Pxm.Api.ConfigUpdateType
	4,   // 10: Pxm.Api.ConfigApiSubscribeResponse_AccountProfileDividendSetting.Data:type_name -> Pxm.Api.AccountProfileDividendSetting
	0,   // 11: Pxm.Api.ConfigApiSubscribeResponse_AccountProfileDividendSetting.UpdateType:type_name -> Pxm.Api.ConfigUpdateType
	5,   // 12: Pxm.Api.ConfigApiSubscribeResponse_AccountProfileLeverageCcy.Data:type_name -> Pxm.Api.AccountProfileLeverageCcy
	0,   // 13: Pxm.Api.ConfigApiSubscribeResponse_AccountProfileLeverageCcy.UpdateType:type_name -> Pxm.Api.ConfigUpdateType
	6,   // 14: Pxm.Api.ConfigApiSubscribeResponse_AccountProfileLeverageCcySetting.Data:type_name -> Pxm.Api.AccountProfileLeverageCcySetting
	0,   // 15: Pxm.Api.ConfigApiSubscribeResponse_AccountProfileLeverageCcySetting.UpdateType:type_name -> Pxm.Api.ConfigUpdateType
	7,   // 16: Pxm.Api.ConfigApiSubscribeResponse_AccountProfileLeverageSym.Data:type_name -> Pxm.Api.AccountProfileLeverageSym
	0,   // 17: Pxm.Api.ConfigApiSubscribeResponse_AccountProfileLeverageSym.UpdateType:type_name -> Pxm.Api.ConfigUpdateType
	8,   // 18: Pxm.Api.ConfigApiSubscribeResponse_AccountProfileLeverageSymSetting.Data:type_name -> Pxm.Api.AccountProfileLeverageSymSetting
	0,   // 19: Pxm.Api.ConfigApiSubscribeResponse_AccountProfileLeverageSymSetting.UpdateType:type_name -> Pxm.Api.ConfigUpdateType
	9,   // 20: Pxm.Api.ConfigApiSubscribeResponse_AccountProfileLimitCurrency.Data:type_name -> Pxm.Api.AccountProfileLimitCurrency
	0,   // 21: Pxm.Api.ConfigApiSubscribeResponse_AccountProfileLimitCurrency.UpdateType:type_name -> Pxm.Api.ConfigUpdateType
	10,  // 22: Pxm.Api.ConfigApiSubscribeResponse_AccountProfileLimitCurrencySetting.Data:type_name -> Pxm.Api.AccountProfileLimitCurrencySetting
	0,   // 23: Pxm.Api.ConfigApiSubscribeResponse_AccountProfileLimitCurrencySetting.UpdateType:type_name -> Pxm.Api.ConfigUpdateType
	11,  // 24: Pxm.Api.ConfigApiSubscribeResponse_AccountProfileLimitSymbol.Data:type_name -> Pxm.Api.AccountProfileLimitSymbol
	0,   // 25: Pxm.Api.ConfigApiSubscribeResponse_AccountProfileLimitSymbol.UpdateType:type_name -> Pxm.Api.ConfigUpdateType
	12,  // 26: Pxm.Api.ConfigApiSubscribeResponse_AccountProfileLimitSymbolSetting.Data:type_name -> Pxm.Api.AccountProfileLimitSymbolSetting
	0,   // 27: Pxm.Api.ConfigApiSubscribeResponse_AccountProfileLimitSymbolSetting.UpdateType:type_name -> Pxm.Api.ConfigUpdateType
	13,  // 28: Pxm.Api.ConfigApiSubscribeResponse_AccountProfilePl.Data:type_name -> Pxm.Api.AccountProfilePl
	0,   // 29: Pxm.Api.ConfigApiSubscribeResponse_AccountProfilePl.UpdateType:type_name -> Pxm.Api.ConfigUpdateType
	14,  // 30: Pxm.Api.ConfigApiSubscribeResponse_AccountProfilePlSetting.Data:type_name -> Pxm.Api.AccountProfilePlSetting
	0,   // 31: Pxm.Api.ConfigApiSubscribeResponse_AccountProfilePlSetting.UpdateType:type_name -> Pxm.Api.ConfigUpdateType
	15,  // 32: Pxm.Api.ConfigApiSubscribeResponse_AccountProfileSwap.Data:type_name -> Pxm.Api.AccountProfileSwap
	0,   // 33: Pxm.Api.ConfigApiSubscribeResponse_AccountProfileSwap.UpdateType:type_name -> Pxm.Api.ConfigUpdateType
	16,  // 34: Pxm.Api.ConfigApiSubscribeResponse_AccountProfileSwapSetting.Data:type_name -> Pxm.Api.AccountProfileSwapSetting
	0,   // 35: Pxm.Api.ConfigApiSubscribeResponse_AccountProfileSwapSetting.UpdateType:type_name -> Pxm.Api.ConfigUpdateType
	17,  // 36: Pxm.Api.ConfigApiSubscribeResponse_AccountProfileWallet.Data:type_name -> Pxm.Api.AccountProfileWallet
	0,   // 37: Pxm.Api.ConfigApiSubscribeResponse_AccountProfileWallet.UpdateType:type_name -> Pxm.Api.ConfigUpdateType
	18,  // 38: Pxm.Api.ConfigApiSubscribeResponse_AccountProfileWalletSetting.Data:type_name -> Pxm.Api.AccountProfileWalletSetting
	0,   // 39: Pxm.Api.ConfigApiSubscribeResponse_AccountProfileWalletSetting.UpdateType:type_name -> Pxm.Api.ConfigUpdateType
	19,  // 40: Pxm.Api.ConfigApiSubscribeResponse_AccountSetting.Data:type_name -> Pxm.Api.AccountSetting
	0,   // 41: Pxm.Api.ConfigApiSubscribeResponse_AccountSetting.UpdateType:type_name -> Pxm.Api.ConfigUpdateType
	20,  // 42: Pxm.Api.ConfigApiSubscribeResponse_CommissionConnector.Data:type_name -> Pxm.Api.CommissionConnector
	0,   // 43: Pxm.Api.ConfigApiSubscribeResponse_CommissionConnector.UpdateType:type_name -> Pxm.Api.ConfigUpdateType
	21,  // 44: Pxm.Api.ConfigApiSubscribeResponse_CommissionProfile.Data:type_name -> Pxm.Api.CommissionProfile
	0,   // 45: Pxm.Api.ConfigApiSubscribeResponse_CommissionProfile.UpdateType:type_name -> Pxm.Api.ConfigUpdateType
	22,  // 46: Pxm.Api.ConfigApiSubscribeResponse_CommissionProfileSetting.Data:type_name -> Pxm.Api.CommissionProfileSetting
	0,   // 47: Pxm.Api.ConfigApiSubscribeResponse_CommissionProfileSetting.UpdateType:type_name -> Pxm.Api.ConfigUpdateType
	112, // 48: Pxm.Api.ConfigApiSubscribeResponse_Connector.Data:type_name -> Pxm.Api.Connector
	0,   // 49: Pxm.Api.ConfigApiSubscribeResponse_Connector.UpdateType:type_name -> Pxm.Api.ConfigUpdateType
	113, // 50: Pxm.Api.ConfigApiSubscribeResponse_ConnectorAccount.Data:type_name -> Pxm.Api.ConnectorAccount
	0,   // 51: Pxm.Api.ConfigApiSubscribeResponse_ConnectorAccount.UpdateType:type_name -> Pxm.Api.ConfigUpdateType
	114, // 52: Pxm.Api.ConfigApiSubscribeResponse_ConnectorAccountSymbol.Data:type_name -> Pxm.Api.ConnectorAccountSymbol
	0,   // 53: Pxm.Api.ConfigApiSubscribeResponse_ConnectorAccountSymbol.UpdateType:type_name -> Pxm.Api.ConfigUpdateType
	115, // 54: Pxm.Api.ConfigApiSubscribeResponse_ConnectorConfig.Data:type_name -> Pxm.Api.ConnectorConfig
	0,   // 55: Pxm.Api.ConfigApiSubscribeResponse_ConnectorConfig.UpdateType:type_name -> Pxm.Api.ConfigUpdateType
	116, // 56: Pxm.Api.ConfigApiSubscribeResponse_ConnectorConfigSetting.Data:type_name -> Pxm.Api.ConnectorConfigSetting
	0,   // 57: Pxm.Api.ConfigApiSubscribeResponse_ConnectorConfigSetting.UpdateType:type_name -> Pxm.Api.ConfigUpdateType
	117, // 58: Pxm.Api.ConfigApiSubscribeResponse_ConnectorProfileXhedge.Data:type_name -> Pxm.Api.ConnectorProfileXhedge
	0,   // 59: Pxm.Api.ConfigApiSubscribeResponse_ConnectorProfileXhedge.UpdateType:type_name -> Pxm.Api.ConfigUpdateType
	118, // 60: Pxm.Api.ConfigApiSubscribeResponse_ConnectorProfileXhedgeSetting.Data:type_name -> Pxm.Api.ConnectorProfileXhedgeSetting
	0,   // 61: Pxm.Api.ConfigApiSubscribeResponse_ConnectorProfileXhedgeSetting.UpdateType:type_name -> Pxm.Api.ConfigUpdateType
	119, // 62: Pxm.Api.ConfigApiSubscribeResponse_ConnectorRouteAdd.Data:type_name -> Pxm.Api.ConnectorRouteAdd
	0,   // 63: Pxm.Api.ConfigApiSubscribeResponse_ConnectorRouteAdd.UpdateType:type_name -> Pxm.Api.ConfigUpdateType
	122, // 64: Pxm.Api.ConfigApiSubscribeResponse_ConnectorStream.Data:type_name -> Pxm.Api.ConnectorStream
	0,   // 65: Pxm.Api.ConfigApiSubscribeResponse_ConnectorStream.UpdateType:type_name -> Pxm.Api.ConfigUpdateType
	123, // 66: Pxm.Api.ConfigApiSubscribeResponse_ConnectorStreamSymbol.Data:type_name -> Pxm.Api.ConnectorStreamSymbol
	0,   // 67: Pxm.Api.ConfigApiSubscribeResponse_ConnectorStreamSymbol.UpdateType:type_name -> Pxm.Api.ConfigUpdateType
	124, // 68: Pxm.Api.ConfigApiSubscribeResponse_Currency.Data:type_name -> Pxm.Api.Currency
	0,   // 69: Pxm.Api.ConfigApiSubscribeResponse_Currency.UpdateType:type_name -> Pxm.Api.ConfigUpdateType
	127, // 70: Pxm.Api.ConfigApiSubscribeResponse_Pool.Data:type_name -> Pxm.Api.Pool
	0,   // 71: Pxm.Api.ConfigApiSubscribeResponse_Pool.UpdateType:type_name -> Pxm.Api.ConfigUpdateType
	128, // 72: Pxm.Api.ConfigApiSubscribeResponse_PoolSymbol.Data:type_name -> Pxm.Api.PoolSymbol
	0,   // 73: Pxm.Api.ConfigApiSubscribeResponse_PoolSymbol.UpdateType:type_name -> Pxm.Api.ConfigUpdateType
	129, // 74: Pxm.Api.ConfigApiSubscribeResponse_Profile.Data:type_name -> Pxm.Api.Profile
	0,   // 75: Pxm.Api.ConfigApiSubscribeResponse_Profile.UpdateType:type_name -> Pxm.Api.ConfigUpdateType
	130, // 76: Pxm.Api.ConfigApiSubscribeResponse_ProfileSymbol.Data:type_name -> Pxm.Api.ProfileSymbol
	0,   // 77: Pxm.Api.ConfigApiSubscribeResponse_ProfileSymbol.UpdateType:type_name -> Pxm.Api.ConfigUpdateType
	131, // 78: Pxm.Api.ConfigApiSubscribeResponse_Provider.Data:type_name -> Pxm.Api.Provider
	0,   // 79: Pxm.Api.ConfigApiSubscribeResponse_Provider.UpdateType:type_name -> Pxm.Api.ConfigUpdateType
	132, // 80: Pxm.Api.ConfigApiSubscribeResponse_ProviderConfig.Data:type_name -> Pxm.Api.ProviderConfig
	0,   // 81: Pxm.Api.ConfigApiSubscribeResponse_ProviderConfig.UpdateType:type_name -> Pxm.Api.ConfigUpdateType
	133, // 82: Pxm.Api.ConfigApiSubscribeResponse_ProviderConfigSetting.Data:type_name -> Pxm.Api.ProviderConfigSetting
	0,   // 83: Pxm.Api.ConfigApiSubscribeResponse_ProviderConfigSetting.UpdateType:type_name -> Pxm.Api.ConfigUpdateType
	134, // 84: Pxm.Api.ConfigApiSubscribeResponse_ProviderStream.Data:type_name -> Pxm.Api.ProviderStream
	0,   // 85: Pxm.Api.ConfigApiSubscribeResponse_ProviderStream.UpdateType:type_name -> Pxm.Api.ConfigUpdateType
	135, // 86: Pxm.Api.ConfigApiSubscribeResponse_ProviderStreamSetting.Data:type_name -> Pxm.Api.ProviderStreamSetting
	0,   // 87: Pxm.Api.ConfigApiSubscribeResponse_ProviderStreamSetting.UpdateType:type_name -> Pxm.Api.ConfigUpdateType
	136, // 88: Pxm.Api.ConfigApiSubscribeResponse_ProviderSymbolScaling.Data:type_name -> Pxm.Api.ProviderSymbolScaling
	0,   // 89: Pxm.Api.ConfigApiSubscribeResponse_ProviderSymbolScaling.UpdateType:type_name -> Pxm.Api.ConfigUpdateType
	137, // 90: Pxm.Api.ConfigApiSubscribeResponse_ProviderTrade.Data:type_name -> Pxm.Api.ProviderTrade
	0,   // 91: Pxm.Api.ConfigApiSubscribeResponse_ProviderTrade.UpdateType:type_name -> Pxm.Api.ConfigUpdateType
	138, // 92: Pxm.Api.ConfigApiSubscribeResponse_ProviderTradeSetting.Data:type_name -> Pxm.Api.ProviderTradeSetting
	0,   // 93: Pxm.Api.ConfigApiSubscribeResponse_ProviderTradeSetting.UpdateType:type_name -> Pxm.Api.ConfigUpdateType
	139, // 94: Pxm.Api.ConfigApiSubscribeResponse_Security.Data:type_name -> Pxm.Api.Security
	0,   // 95: Pxm.Api.ConfigApiSubscribeResponse_Security.UpdateType:type_name -> Pxm.Api.ConfigUpdateType
	140, // 96: Pxm.Api.ConfigApiSubscribeResponse_Symbol.Data:type_name -> Pxm.Api.Symbol
	0,   // 97: Pxm.Api.ConfigApiSubscribeResponse_Symbol.UpdateType:type_name -> Pxm.Api.ConfigUpdateType
	1,   // 98: Pxm.Api.ConfigApiUpdateRequest_AccountGroup.Data:type_name -> Pxm.Api.AccountGroup
	2,   // 99: Pxm.Api.ConfigApiUpdateRequest_AccountGroupSetting.Data:type_name -> Pxm.Api.AccountGroupSetting
	3,   // 100: Pxm.Api.ConfigApiUpdateRequest_AccountProfileDividend.Data:type_name -> Pxm.Api.AccountProfileDividend
	4,   // 101: Pxm.Api.ConfigApiUpdateRequest_AccountProfileDividendSetting.Data:type_name -> Pxm.Api.AccountProfileDividendSetting
	6,   // 102: Pxm.Api.ConfigApiUpdateRequest_AccountProfileLeverageCcySetting.Data:type_name -> Pxm.Api.AccountProfileLeverageCcySetting
	8,   // 103: Pxm.Api.ConfigApiUpdateRequest_AccountProfileLeverageSymSetting.Data:type_name -> Pxm.Api.AccountProfileLeverageSymSetting
	10,  // 104: Pxm.Api.ConfigApiUpdateRequest_AccountProfileLimitCurrencySetting.Data:type_name -> Pxm.Api.AccountProfileLimitCurrencySetting
	12,  // 105: Pxm.Api.ConfigApiUpdateRequest_AccountProfileLimitSymbolSetting.Data:type_name -> Pxm.Api.AccountProfileLimitSymbolSetting
	14,  // 106: Pxm.Api.ConfigApiUpdateRequest_AccountProfilePlSetting.Data:type_name -> Pxm.Api.AccountProfilePlSetting
	16,  // 107: Pxm.Api.ConfigApiUpdateRequest_AccountProfileSwapSetting.Data:type_name -> Pxm.Api.AccountProfileSwapSetting
	17,  // 108: Pxm.Api.ConfigApiUpdateRequest_AccountProfileWallet.Data:type_name -> Pxm.Api.AccountProfileWallet
	18,  // 109: Pxm.Api.ConfigApiUpdateRequest_AccountProfileWalletSetting.Data:type_name -> Pxm.Api.AccountProfileWalletSetting
	19,  // 110: Pxm.Api.ConfigApiUpdateRequest_AccountSetting.Data:type_name -> Pxm.Api.AccountSetting
	22,  // 111: Pxm.Api.ConfigApiUpdateRequest_CommissionProfileSetting.Data:type_name -> Pxm.Api.CommissionProfileSetting
	112, // 112: Pxm.Api.ConfigApiUpdateRequest_Connector.Data:type_name -> Pxm.Api.Connector
	113, // 113: Pxm.Api.ConfigApiUpdateRequest_ConnectorAccount.Data:type_name -> Pxm.Api.ConnectorAccount
	114, // 114: Pxm.Api.ConfigApiUpdateRequest_ConnectorAccountSymbol.Data:type_name -> Pxm.Api.ConnectorAccountSymbol
	115, // 115: Pxm.Api.ConfigApiUpdateRequest_ConnectorConfig.Data:type_name -> Pxm.Api.ConnectorConfig
	116, // 116: Pxm.Api.ConfigApiUpdateRequest_ConnectorConfigSetting.Data:type_name -> Pxm.Api.ConnectorConfigSetting
	118, // 117: Pxm.Api.ConfigApiUpdateRequest_ConnectorProfileXhedgeSetting.Data:type_name -> Pxm.Api.ConnectorProfileXhedgeSetting
	119, // 118: Pxm.Api.ConfigApiUpdateRequest_ConnectorRouteAdd.Data:type_name -> Pxm.Api.ConnectorRouteAdd
	120, // 119: Pxm.Api.ConfigApiUpdateRequest_ConnectorRouteDelete.Data:type_name -> Pxm.Api.ConnectorRouteDelete
	121, // 120: Pxm.Api.ConfigApiUpdateRequest_ConnectorRouteUpdate.Data:type_name -> Pxm.Api.ConnectorRouteUpdate
	122, // 121: Pxm.Api.ConfigApiUpdateRequest_ConnectorStream.Data:type_name -> Pxm.Api.ConnectorStream
	123, // 122: Pxm.Api.ConfigApiUpdateRequest_ConnectorStreamSymbol.Data:type_name -> Pxm.Api.ConnectorStreamSymbol
	124, // 123: Pxm.Api.ConfigApiUpdateRequest_Currency.Data:type_name -> Pxm.Api.Currency
	127, // 124: Pxm.Api.ConfigApiUpdateRequest_Pool.Data:type_name -> Pxm.Api.Pool
	128, // 125: Pxm.Api.ConfigApiUpdateRequest_PoolSymbol.Data:type_name -> Pxm.Api.PoolSymbol
	129, // 126: Pxm.Api.ConfigApiUpdateRequest_Profile.Data:type_name -> Pxm.Api.Profile
	130, // 127: Pxm.Api.ConfigApiUpdateRequest_ProfileSymbol.Data:type_name -> Pxm.Api.ProfileSymbol
	131, // 128: Pxm.Api.ConfigApiUpdateRequest_Provider.Data:type_name -> Pxm.Api.Provider
	132, // 129: Pxm.Api.ConfigApiUpdateRequest_ProviderConfig.Data:type_name -> Pxm.Api.ProviderConfig
	133, // 130: Pxm.Api.ConfigApiUpdateRequest_ProviderConfigSetting.Data:type_name -> Pxm.Api.ProviderConfigSetting
	135, // 131: Pxm.Api.ConfigApiUpdateRequest_ProviderStreamSetting.Data:type_name -> Pxm.Api.ProviderStreamSetting
	136, // 132: Pxm.Api.ConfigApiUpdateRequest_ProviderSymbolScaling.Data:type_name -> Pxm.Api.ProviderSymbolScaling
	138, // 133: Pxm.Api.ConfigApiUpdateRequest_ProviderTradeSetting.Data:type_name -> Pxm.Api.ProviderTradeSetting
	139, // 134: Pxm.Api.ConfigApiUpdateRequest_Security.Data:type_name -> Pxm.Api.Security
	140, // 135: Pxm.Api.ConfigApiUpdateRequest_Symbol.Data:type_name -> Pxm.Api.Symbol
	126, // 136: Pxm.Api.ConnectorAccountSymbol.Sessions:type_name -> Pxm.Api.Interval
	126, // 137: Pxm.Api.ConnectorStreamSymbol.Sessions:type_name -> Pxm.Api.Interval
	126, // 138: Pxm.Api.PoolSymbol.Sessions:type_name -> Pxm.Api.Interval
	126, // 139: Pxm.Api.ProfileSymbol.Sessions:type_name -> Pxm.Api.Interval
	126, // 140: Pxm.Api.ProviderStreamSetting.Sessions:type_name -> Pxm.Api.Interval
	126, // 141: Pxm.Api.Symbol.Sessions:type_name -> Pxm.Api.Interval
	142, // [142:142] is the sub-list for method output_type
	142, // [142:142] is the sub-list for method input_type
	142, // [142:142] is the sub-list for extension type_name
	142, // [142:142] is the sub-list for extension extendee
	0,   // [0:142] is the sub-list for field type_name
}

func init() { file_Configuration_proto_init() }
func file_Configuration_proto_init() {
	if File_Configuration_proto != nil {
		return
	}
	file_ApiEnums_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_Configuration_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountGroupSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountProfileDividend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountProfileDividendSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountProfileLeverageCcy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountProfileLeverageCcySetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountProfileLeverageSym); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountProfileLeverageSymSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountProfileLimitCurrency); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountProfileLimitCurrencySetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountProfileLimitSymbol); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountProfileLimitSymbolSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountProfilePl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountProfilePlSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountProfileSwap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountProfileSwapSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountProfileWallet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountProfileWalletSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommissionConnector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommissionProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommissionProfileSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiReferenceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiReferenceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiSubscribeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiSubscribeResponse_AccountGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiSubscribeResponse_AccountGroupSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiSubscribeResponse_AccountProfileDividend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiSubscribeResponse_AccountProfileDividendSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiSubscribeResponse_AccountProfileLeverageCcy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiSubscribeResponse_AccountProfileLeverageCcySetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiSubscribeResponse_AccountProfileLeverageSym); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiSubscribeResponse_AccountProfileLeverageSymSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiSubscribeResponse_AccountProfileLimitCurrency); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiSubscribeResponse_AccountProfileLimitCurrencySetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiSubscribeResponse_AccountProfileLimitSymbol); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiSubscribeResponse_AccountProfileLimitSymbolSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiSubscribeResponse_AccountProfilePl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiSubscribeResponse_AccountProfilePlSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiSubscribeResponse_AccountProfileSwap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiSubscribeResponse_AccountProfileSwapSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiSubscribeResponse_AccountProfileWallet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiSubscribeResponse_AccountProfileWalletSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiSubscribeResponse_AccountSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiSubscribeResponse_CommissionConnector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiSubscribeResponse_CommissionProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiSubscribeResponse_CommissionProfileSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiSubscribeResponse_Connector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiSubscribeResponse_ConnectorAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiSubscribeResponse_ConnectorAccountSymbol); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiSubscribeResponse_ConnectorConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiSubscribeResponse_ConnectorConfigSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiSubscribeResponse_ConnectorProfileXhedge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiSubscribeResponse_ConnectorProfileXhedgeSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiSubscribeResponse_ConnectorRouteAdd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiSubscribeResponse_ConnectorStream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiSubscribeResponse_ConnectorStreamSymbol); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiSubscribeResponse_Currency); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiSubscribeResponse_Pool); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiSubscribeResponse_PoolSymbol); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiSubscribeResponse_Profile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiSubscribeResponse_ProfileSymbol); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiSubscribeResponse_Provider); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiSubscribeResponse_ProviderConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiSubscribeResponse_ProviderConfigSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiSubscribeResponse_ProviderStream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiSubscribeResponse_ProviderStreamSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiSubscribeResponse_ProviderSymbolScaling); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiSubscribeResponse_ProviderTrade); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiSubscribeResponse_ProviderTradeSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiSubscribeResponse_Security); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiSubscribeResponse_Symbol); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiUpdateRequest_AccountGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiUpdateRequest_AccountGroupSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiUpdateRequest_AccountProfileDividend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiUpdateRequest_AccountProfileDividendSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiUpdateRequest_AccountProfileLeverageCcySetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiUpdateRequest_AccountProfileLeverageSymSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiUpdateRequest_AccountProfileLimitCurrencySetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiUpdateRequest_AccountProfileLimitSymbolSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiUpdateRequest_AccountProfilePlSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiUpdateRequest_AccountProfileSwapSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiUpdateRequest_AccountProfileWallet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiUpdateRequest_AccountProfileWalletSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiUpdateRequest_AccountSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiUpdateRequest_CommissionProfileSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiUpdateRequest_Connector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiUpdateRequest_ConnectorAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiUpdateRequest_ConnectorAccountSymbol); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiUpdateRequest_ConnectorConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiUpdateRequest_ConnectorConfigSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiUpdateRequest_ConnectorProfileXhedgeSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiUpdateRequest_ConnectorRouteAdd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiUpdateRequest_ConnectorRouteDelete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiUpdateRequest_ConnectorRouteUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiUpdateRequest_ConnectorStream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiUpdateRequest_ConnectorStreamSymbol); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiUpdateRequest_Currency); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiUpdateRequest_Pool); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiUpdateRequest_PoolSymbol); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiUpdateRequest_Profile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiUpdateRequest_ProfileSymbol); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiUpdateRequest_Provider); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiUpdateRequest_ProviderConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiUpdateRequest_ProviderConfigSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiUpdateRequest_ProviderStreamSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiUpdateRequest_ProviderSymbolScaling); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiUpdateRequest_ProviderTradeSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiUpdateRequest_Security); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigApiUpdateRequest_Symbol); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Connector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectorAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectorAccountSymbol); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectorConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectorConfigSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectorProfileXhedge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectorProfileXhedgeSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectorRouteAdd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectorRouteDelete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectorRouteUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectorStream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectorStreamSymbol); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Currency); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Interval); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pool); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[127].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PoolSymbol); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[128].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Profile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[129].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileSymbol); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[130].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Provider); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[131].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProviderConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[132].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProviderConfigSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[133].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProviderStream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[134].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProviderStreamSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[135].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProviderSymbolScaling); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[136].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProviderTrade); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[137].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProviderTradeSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[138].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Security); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Configuration_proto_msgTypes[139].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Symbol); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Configuration_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   140,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_Configuration_proto_goTypes,
		DependencyIndexes: file_Configuration_proto_depIdxs,
		EnumInfos:         file_Configuration_proto_enumTypes,
		MessageInfos:      file_Configuration_proto_msgTypes,
	}.Build()
	File_Configuration_proto = out.File
	file_Configuration_proto_rawDesc = nil
	file_Configuration_proto_goTypes = nil
	file_Configuration_proto_depIdxs = nil
}
