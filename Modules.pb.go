// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: Modules.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ModuleType int32

const (
	ModuleType_General       ModuleType = 0
	ModuleType_Accounts      ModuleType = 7
	ModuleType_Configuration ModuleType = 17
)

// Enum value maps for ModuleType.
var (
	ModuleType_name = map[int32]string{
		0:  "General",
		7:  "Accounts",
		17: "Configuration",
	}
	ModuleType_value = map[string]int32{
		"General":       0,
		"Accounts":      7,
		"Configuration": 17,
	}
)

func (x ModuleType) Enum() *ModuleType {
	p := new(ModuleType)
	*p = x
	return p
}

func (x ModuleType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ModuleType) Descriptor() protoreflect.EnumDescriptor {
	return file_Modules_proto_enumTypes[0].Descriptor()
}

func (ModuleType) Type() protoreflect.EnumType {
	return &file_Modules_proto_enumTypes[0]
}

func (x ModuleType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ModuleType.Descriptor instead.
func (ModuleType) EnumDescriptor() ([]byte, []int) {
	return file_Modules_proto_rawDescGZIP(), []int{0}
}

type GeneralModule int32

const (
	GeneralModule_UnknownGeneralMessage       GeneralModule = 0
	GeneralModule_QueuePing                   GeneralModule = 28
	GeneralModule_QueuePong                   GeneralModule = 29
	GeneralModule_QueueErrorResponse          GeneralModule = 30
	GeneralModule_QueueAuthenticationRequest  GeneralModule = 31
	GeneralModule_QueueAuthenticationResponse GeneralModule = 32
	GeneralModule_QueueSessionReset           GeneralModule = 33
)

// Enum value maps for GeneralModule.
var (
	GeneralModule_name = map[int32]string{
		0:  "UnknownGeneralMessage",
		28: "QueuePing",
		29: "QueuePong",
		30: "QueueErrorResponse",
		31: "QueueAuthenticationRequest",
		32: "QueueAuthenticationResponse",
		33: "QueueSessionReset",
	}
	GeneralModule_value = map[string]int32{
		"UnknownGeneralMessage":       0,
		"QueuePing":                   28,
		"QueuePong":                   29,
		"QueueErrorResponse":          30,
		"QueueAuthenticationRequest":  31,
		"QueueAuthenticationResponse": 32,
		"QueueSessionReset":           33,
	}
)

func (x GeneralModule) Enum() *GeneralModule {
	p := new(GeneralModule)
	*p = x
	return p
}

func (x GeneralModule) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GeneralModule) Descriptor() protoreflect.EnumDescriptor {
	return file_Modules_proto_enumTypes[1].Descriptor()
}

func (GeneralModule) Type() protoreflect.EnumType {
	return &file_Modules_proto_enumTypes[1]
}

func (x GeneralModule) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GeneralModule.Descriptor instead.
func (GeneralModule) EnumDescriptor() ([]byte, []int) {
	return file_Modules_proto_rawDescGZIP(), []int{1}
}

type AccountsModule int32

const (
	AccountsModule_UnknownAccountsMessage                    AccountsModule = 0
	AccountsModule_AccountApiSubscribeRequest                AccountsModule = 100
	AccountsModule_AccountApiOperationRequest_AccountUpdate  AccountsModule = 102
	AccountsModule_AccountApiOperationRequest_PositionUpdate AccountsModule = 103
	AccountsModule_AccountApiResponse_Account                AccountsModule = 104
	AccountsModule_AccountApiResponse_Reset                  AccountsModule = 118
	AccountsModule_AccountApiResponse_AccountPosition        AccountsModule = 105
	AccountsModule_AccountApiOperationResponse               AccountsModule = 106
	AccountsModule_AccountApiHistoryRequestAccount           AccountsModule = 107
	AccountsModule_AccountApiHistoryRequestPosition          AccountsModule = 108
	AccountsModule_AccountApiHistoryResponseAccount          AccountsModule = 109
	AccountsModule_AccountApiHistoryResponsePosition         AccountsModule = 110
	AccountsModule_AccountApiFlushRequest                    AccountsModule = 111
	AccountsModule_AccountApiFlushResponse                   AccountsModule = 112
	AccountsModule_AccountApiResponse_AccountExposure        AccountsModule = 113
)

// Enum value maps for AccountsModule.
var (
	AccountsModule_name = map[int32]string{
		0:   "UnknownAccountsMessage",
		100: "AccountApiSubscribeRequest",
		102: "AccountApiOperationRequest_AccountUpdate",
		103: "AccountApiOperationRequest_PositionUpdate",
		104: "AccountApiResponse_Account",
		118: "AccountApiResponse_Reset",
		105: "AccountApiResponse_AccountPosition",
		106: "AccountApiOperationResponse",
		107: "AccountApiHistoryRequestAccount",
		108: "AccountApiHistoryRequestPosition",
		109: "AccountApiHistoryResponseAccount",
		110: "AccountApiHistoryResponsePosition",
		111: "AccountApiFlushRequest",
		112: "AccountApiFlushResponse",
		113: "AccountApiResponse_AccountExposure",
	}
	AccountsModule_value = map[string]int32{
		"UnknownAccountsMessage":                    0,
		"AccountApiSubscribeRequest":                100,
		"AccountApiOperationRequest_AccountUpdate":  102,
		"AccountApiOperationRequest_PositionUpdate": 103,
		"AccountApiResponse_Account":                104,
		"AccountApiResponse_Reset":                  118,
		"AccountApiResponse_AccountPosition":        105,
		"AccountApiOperationResponse":               106,
		"AccountApiHistoryRequestAccount":           107,
		"AccountApiHistoryRequestPosition":          108,
		"AccountApiHistoryResponseAccount":          109,
		"AccountApiHistoryResponsePosition":         110,
		"AccountApiFlushRequest":                    111,
		"AccountApiFlushResponse":                   112,
		"AccountApiResponse_AccountExposure":        113,
	}
)

func (x AccountsModule) Enum() *AccountsModule {
	p := new(AccountsModule)
	*p = x
	return p
}

func (x AccountsModule) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AccountsModule) Descriptor() protoreflect.EnumDescriptor {
	return file_Modules_proto_enumTypes[2].Descriptor()
}

func (AccountsModule) Type() protoreflect.EnumType {
	return &file_Modules_proto_enumTypes[2]
}

func (x AccountsModule) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AccountsModule.Descriptor instead.
func (AccountsModule) EnumDescriptor() ([]byte, []int) {
	return file_Modules_proto_rawDescGZIP(), []int{2}
}

type ConfigurationModule int32

const (
	ConfigurationModule_UnknownConfigurationMessage                                   ConfigurationModule = 0
	ConfigurationModule_ConfigApiSubscribeRequest                                     ConfigurationModule = 10
	ConfigurationModule_ConfigApiReferenceRequest                                     ConfigurationModule = 150
	ConfigurationModule_ConfigApiReferenceResponse                                    ConfigurationModule = 151
	ConfigurationModule_ConfigApiResponse                                             ConfigurationModule = 152
	ConfigurationModule_ConfigApiSubscribeResponse_AccountSetting                     ConfigurationModule = 12
	ConfigurationModule_ConfigApiSubscribeResponse_AccountProfileLeverageCcy          ConfigurationModule = 16
	ConfigurationModule_ConfigApiSubscribeResponse_AccountProfileLeverageCcySetting   ConfigurationModule = 17
	ConfigurationModule_ConfigApiSubscribeResponse_AccountProfileLimitCurrency        ConfigurationModule = 18
	ConfigurationModule_ConfigApiSubscribeResponse_AccountProfileLimitCurrencySetting ConfigurationModule = 19
	ConfigurationModule_ConfigApiSubscribeResponse_AccountProfileLimitSymbol          ConfigurationModule = 20
	ConfigurationModule_ConfigApiSubscribeResponse_AccountProfileLimitSymbolSetting   ConfigurationModule = 21
	ConfigurationModule_ConfigApiSubscribeResponse_AccountProfileSwap                 ConfigurationModule = 26
	ConfigurationModule_ConfigApiSubscribeResponse_AccountProfileSwapSetting          ConfigurationModule = 27
	ConfigurationModule_ConfigApiSubscribeResponse_CommissionConnector                ConfigurationModule = 28
	ConfigurationModule_ConfigApiSubscribeResponse_CommissionProfile                  ConfigurationModule = 29
	ConfigurationModule_ConfigApiSubscribeResponse_CommissionProfileSetting           ConfigurationModule = 30
	ConfigurationModule_ConfigApiSubscribeResponse_AccountProfileLeverageSym          ConfigurationModule = 31
	ConfigurationModule_ConfigApiSubscribeResponse_AccountProfileLeverageSymSetting   ConfigurationModule = 32
	ConfigurationModule_ConfigApiUpdateRequest_Connector                              ConfigurationModule = 101
	ConfigurationModule_ConfigApiUpdateRequest_ConnectorAccount                       ConfigurationModule = 102
	ConfigurationModule_ConfigApiUpdateRequest_ConnectorAccountSymbol                 ConfigurationModule = 104
	ConfigurationModule_ConfigApiUpdateRequest_ConnectorStream                        ConfigurationModule = 105
	ConfigurationModule_ConfigApiUpdateRequest_ConnectorStreamSymbol                  ConfigurationModule = 107
	ConfigurationModule_ConfigApiUpdateRequest_Pool                                   ConfigurationModule = 108
	ConfigurationModule_ConfigApiUpdateRequest_PoolSymbol                             ConfigurationModule = 110
	ConfigurationModule_ConfigApiUpdateRequest_Profile                                ConfigurationModule = 111
	ConfigurationModule_ConfigApiUpdateRequest_ProfileSymbol                          ConfigurationModule = 113
	ConfigurationModule_ConfigApiUpdateRequest_Provider                               ConfigurationModule = 114
	ConfigurationModule_ConfigApiUpdateRequest_Security                               ConfigurationModule = 117
	ConfigurationModule_ConfigApiUpdateRequest_Symbol                                 ConfigurationModule = 118
	ConfigurationModule_ConfigApiSubscribeResponse_Connector                          ConfigurationModule = 119
	ConfigurationModule_ConfigApiSubscribeResponse_ConnectorAccount                   ConfigurationModule = 120
	ConfigurationModule_ConfigApiSubscribeResponse_ConnectorAccountSymbol             ConfigurationModule = 122
	ConfigurationModule_ConfigApiSubscribeResponse_ConnectorStream                    ConfigurationModule = 124
	ConfigurationModule_ConfigApiSubscribeResponse_ConnectorStreamSymbol              ConfigurationModule = 126
	ConfigurationModule_ConfigApiSubscribeResponse_Pool                               ConfigurationModule = 127
	ConfigurationModule_ConfigApiSubscribeResponse_PoolSymbol                         ConfigurationModule = 129
	ConfigurationModule_ConfigApiSubscribeResponse_Profile                            ConfigurationModule = 130
	ConfigurationModule_ConfigApiSubscribeResponse_ProfileSymbol                      ConfigurationModule = 132
	ConfigurationModule_ConfigApiSubscribeResponse_Provider                           ConfigurationModule = 133
	ConfigurationModule_ConfigApiSubscribeResponse_Security                           ConfigurationModule = 136
	ConfigurationModule_ConfigApiSubscribeResponse_Symbol                             ConfigurationModule = 137
	ConfigurationModule_ConfigApiSubscribeResponse_ConnectorConfigSetting             ConfigurationModule = 138
	ConfigurationModule_ConfigApiSubscribeResponse_ProviderConfigSetting              ConfigurationModule = 139
	ConfigurationModule_ConfigApiSubscribeResponse_Currency                           ConfigurationModule = 140
	ConfigurationModule_ConfigApiSubscribeResponse_ProviderSymbolScaling              ConfigurationModule = 141
	ConfigurationModule_ConfigApiUpdateRequest_ProviderSymbolScaling                  ConfigurationModule = 142
	ConfigurationModule_ConfigApiUpdateRequest_AccountSetting                         ConfigurationModule = 143
	ConfigurationModule_ConfigApiUpdateRequest_AccountProfileLeverageCcySetting       ConfigurationModule = 153
	ConfigurationModule_ConfigApiUpdateRequest_AccountProfileLeverageSymSetting       ConfigurationModule = 154
	ConfigurationModule_ConfigApiUpdateRequest_AccountProfileLimitCurrencySetting     ConfigurationModule = 155
	ConfigurationModule_ConfigApiUpdateRequest_AccountProfileLimitSymbolSetting       ConfigurationModule = 156
	ConfigurationModule_ConfigApiUpdateRequest_AccountProfileSwapSetting              ConfigurationModule = 157
	ConfigurationModule_ConfigApiSubscribeResponse_AccountProfilePlSetting            ConfigurationModule = 158
	ConfigurationModule_ConfigApiUpdateRequest_AccountProfilePlSetting                ConfigurationModule = 159
	ConfigurationModule_ConfigApiSubscribeResponse_AccountProfileDividend             ConfigurationModule = 160
	ConfigurationModule_ConfigApiUpdateRequest_AccountProfileDividend                 ConfigurationModule = 161
	ConfigurationModule_ConfigApiSubscribeResponse_AccountProfileDividendSetting      ConfigurationModule = 162
	ConfigurationModule_ConfigApiUpdateRequest_AccountProfileDividendSetting          ConfigurationModule = 163
	ConfigurationModule_ConfigApiSubscribeResponse_AccountGroup                       ConfigurationModule = 164
	ConfigurationModule_ConfigApiUpdateRequest_AccountGroup                           ConfigurationModule = 165
	ConfigurationModule_ConfigApiSubscribeResponse_AccountGroupSetting                ConfigurationModule = 166
	ConfigurationModule_ConfigApiUpdateRequest_AccountGroupSetting                    ConfigurationModule = 167
	ConfigurationModule_ConfigApiSubscribeResponse_AccountProfileWallet               ConfigurationModule = 169
	ConfigurationModule_ConfigApiUpdateRequest_AccountProfileWallet                   ConfigurationModule = 170
	ConfigurationModule_ConfigApiSubscribeResponse_AccountProfileWalletSetting        ConfigurationModule = 171
	ConfigurationModule_ConfigApiUpdateRequest_AccountProfileWalletSetting            ConfigurationModule = 172
	ConfigurationModule_ConfigApiUpdateRequest_CommissionProfileSetting               ConfigurationModule = 173
	ConfigurationModule_ConfigApiSubscribeResponse_ProviderStream                     ConfigurationModule = 174
	ConfigurationModule_ConfigApiSubscribeResponse_ProviderStreamSetting              ConfigurationModule = 175
	ConfigurationModule_ConfigApiUpdateRequest_ProviderStreamSetting                  ConfigurationModule = 176
	ConfigurationModule_ConfigApiSubscribeResponse_ProviderTrade                      ConfigurationModule = 177
	ConfigurationModule_ConfigApiSubscribeResponse_ProviderTradeSetting               ConfigurationModule = 178
	ConfigurationModule_ConfigApiUpdateRequest_ProviderTradeSetting                   ConfigurationModule = 179
	ConfigurationModule_ConfigApiSubscribeResponse_AccountProfilePl                   ConfigurationModule = 180
	ConfigurationModule_ConfigApiSubscribeResponse_ConnectorRouteAdd                  ConfigurationModule = 181
	ConfigurationModule_ConfigApiUpdateRequest_ConnectorRouteAdd                      ConfigurationModule = 182
	ConfigurationModule_ConfigApiUpdateRequest_ConnectorRouteUpdate                   ConfigurationModule = 183
	ConfigurationModule_ConfigApiUpdateRequest_ConnectorRouteDelete                   ConfigurationModule = 184
	ConfigurationModule_ConfigApiSubscribeResponse_ProviderConfig                     ConfigurationModule = 185
	ConfigurationModule_ConfigApiSubscribeResponse_ConnectorConfig                    ConfigurationModule = 186
	ConfigurationModule_ConfigApiUpdateRequest_ProviderConfig                         ConfigurationModule = 187
	ConfigurationModule_ConfigApiUpdateRequest_ConnectorConfig                        ConfigurationModule = 188
	ConfigurationModule_ConfigApiUpdateRequest_ProviderConfigSetting                  ConfigurationModule = 189
	ConfigurationModule_ConfigApiUpdateRequest_ConnectorConfigSetting                 ConfigurationModule = 190
	ConfigurationModule_ConfigApiUpdateRequest_Currency                               ConfigurationModule = 191
	ConfigurationModule_ConfigApiSubscribeResponse_ConnectorProfileXhedge             ConfigurationModule = 192
	ConfigurationModule_ConfigApiSubscribeResponse_ConnectorProfileXhedgeSetting      ConfigurationModule = 193
	ConfigurationModule_ConfigApiUpdateRequest_ConnectorProfileXhedgeSetting          ConfigurationModule = 194
)

// Enum value maps for ConfigurationModule.
var (
	ConfigurationModule_name = map[int32]string{
		0:   "UnknownConfigurationMessage",
		10:  "ConfigApiSubscribeRequest",
		150: "ConfigApiReferenceRequest",
		151: "ConfigApiReferenceResponse",
		152: "ConfigApiResponse",
		12:  "ConfigApiSubscribeResponse_AccountSetting",
		16:  "ConfigApiSubscribeResponse_AccountProfileLeverageCcy",
		17:  "ConfigApiSubscribeResponse_AccountProfileLeverageCcySetting",
		18:  "ConfigApiSubscribeResponse_AccountProfileLimitCurrency",
		19:  "ConfigApiSubscribeResponse_AccountProfileLimitCurrencySetting",
		20:  "ConfigApiSubscribeResponse_AccountProfileLimitSymbol",
		21:  "ConfigApiSubscribeResponse_AccountProfileLimitSymbolSetting",
		26:  "ConfigApiSubscribeResponse_AccountProfileSwap",
		27:  "ConfigApiSubscribeResponse_AccountProfileSwapSetting",
		28:  "ConfigApiSubscribeResponse_CommissionConnector",
		29:  "ConfigApiSubscribeResponse_CommissionProfile",
		30:  "ConfigApiSubscribeResponse_CommissionProfileSetting",
		31:  "ConfigApiSubscribeResponse_AccountProfileLeverageSym",
		32:  "ConfigApiSubscribeResponse_AccountProfileLeverageSymSetting",
		101: "ConfigApiUpdateRequest_Connector",
		102: "ConfigApiUpdateRequest_ConnectorAccount",
		104: "ConfigApiUpdateRequest_ConnectorAccountSymbol",
		105: "ConfigApiUpdateRequest_ConnectorStream",
		107: "ConfigApiUpdateRequest_ConnectorStreamSymbol",
		108: "ConfigApiUpdateRequest_Pool",
		110: "ConfigApiUpdateRequest_PoolSymbol",
		111: "ConfigApiUpdateRequest_Profile",
		113: "ConfigApiUpdateRequest_ProfileSymbol",
		114: "ConfigApiUpdateRequest_Provider",
		117: "ConfigApiUpdateRequest_Security",
		118: "ConfigApiUpdateRequest_Symbol",
		119: "ConfigApiSubscribeResponse_Connector",
		120: "ConfigApiSubscribeResponse_ConnectorAccount",
		122: "ConfigApiSubscribeResponse_ConnectorAccountSymbol",
		124: "ConfigApiSubscribeResponse_ConnectorStream",
		126: "ConfigApiSubscribeResponse_ConnectorStreamSymbol",
		127: "ConfigApiSubscribeResponse_Pool",
		129: "ConfigApiSubscribeResponse_PoolSymbol",
		130: "ConfigApiSubscribeResponse_Profile",
		132: "ConfigApiSubscribeResponse_ProfileSymbol",
		133: "ConfigApiSubscribeResponse_Provider",
		136: "ConfigApiSubscribeResponse_Security",
		137: "ConfigApiSubscribeResponse_Symbol",
		138: "ConfigApiSubscribeResponse_ConnectorConfigSetting",
		139: "ConfigApiSubscribeResponse_ProviderConfigSetting",
		140: "ConfigApiSubscribeResponse_Currency",
		141: "ConfigApiSubscribeResponse_ProviderSymbolScaling",
		142: "ConfigApiUpdateRequest_ProviderSymbolScaling",
		143: "ConfigApiUpdateRequest_AccountSetting",
		153: "ConfigApiUpdateRequest_AccountProfileLeverageCcySetting",
		154: "ConfigApiUpdateRequest_AccountProfileLeverageSymSetting",
		155: "ConfigApiUpdateRequest_AccountProfileLimitCurrencySetting",
		156: "ConfigApiUpdateRequest_AccountProfileLimitSymbolSetting",
		157: "ConfigApiUpdateRequest_AccountProfileSwapSetting",
		158: "ConfigApiSubscribeResponse_AccountProfilePlSetting",
		159: "ConfigApiUpdateRequest_AccountProfilePlSetting",
		160: "ConfigApiSubscribeResponse_AccountProfileDividend",
		161: "ConfigApiUpdateRequest_AccountProfileDividend",
		162: "ConfigApiSubscribeResponse_AccountProfileDividendSetting",
		163: "ConfigApiUpdateRequest_AccountProfileDividendSetting",
		164: "ConfigApiSubscribeResponse_AccountGroup",
		165: "ConfigApiUpdateRequest_AccountGroup",
		166: "ConfigApiSubscribeResponse_AccountGroupSetting",
		167: "ConfigApiUpdateRequest_AccountGroupSetting",
		169: "ConfigApiSubscribeResponse_AccountProfileWallet",
		170: "ConfigApiUpdateRequest_AccountProfileWallet",
		171: "ConfigApiSubscribeResponse_AccountProfileWalletSetting",
		172: "ConfigApiUpdateRequest_AccountProfileWalletSetting",
		173: "ConfigApiUpdateRequest_CommissionProfileSetting",
		174: "ConfigApiSubscribeResponse_ProviderStream",
		175: "ConfigApiSubscribeResponse_ProviderStreamSetting",
		176: "ConfigApiUpdateRequest_ProviderStreamSetting",
		177: "ConfigApiSubscribeResponse_ProviderTrade",
		178: "ConfigApiSubscribeResponse_ProviderTradeSetting",
		179: "ConfigApiUpdateRequest_ProviderTradeSetting",
		180: "ConfigApiSubscribeResponse_AccountProfilePl",
		181: "ConfigApiSubscribeResponse_ConnectorRouteAdd",
		182: "ConfigApiUpdateRequest_ConnectorRouteAdd",
		183: "ConfigApiUpdateRequest_ConnectorRouteUpdate",
		184: "ConfigApiUpdateRequest_ConnectorRouteDelete",
		185: "ConfigApiSubscribeResponse_ProviderConfig",
		186: "ConfigApiSubscribeResponse_ConnectorConfig",
		187: "ConfigApiUpdateRequest_ProviderConfig",
		188: "ConfigApiUpdateRequest_ConnectorConfig",
		189: "ConfigApiUpdateRequest_ProviderConfigSetting",
		190: "ConfigApiUpdateRequest_ConnectorConfigSetting",
		191: "ConfigApiUpdateRequest_Currency",
		192: "ConfigApiSubscribeResponse_ConnectorProfileXhedge",
		193: "ConfigApiSubscribeResponse_ConnectorProfileXhedgeSetting",
		194: "ConfigApiUpdateRequest_ConnectorProfileXhedgeSetting",
	}
	ConfigurationModule_value = map[string]int32{
		"UnknownConfigurationMessage":                                   0,
		"ConfigApiSubscribeRequest":                                     10,
		"ConfigApiReferenceRequest":                                     150,
		"ConfigApiReferenceResponse":                                    151,
		"ConfigApiResponse":                                             152,
		"ConfigApiSubscribeResponse_AccountSetting":                     12,
		"ConfigApiSubscribeResponse_AccountProfileLeverageCcy":          16,
		"ConfigApiSubscribeResponse_AccountProfileLeverageCcySetting":   17,
		"ConfigApiSubscribeResponse_AccountProfileLimitCurrency":        18,
		"ConfigApiSubscribeResponse_AccountProfileLimitCurrencySetting": 19,
		"ConfigApiSubscribeResponse_AccountProfileLimitSymbol":          20,
		"ConfigApiSubscribeResponse_AccountProfileLimitSymbolSetting":   21,
		"ConfigApiSubscribeResponse_AccountProfileSwap":                 26,
		"ConfigApiSubscribeResponse_AccountProfileSwapSetting":          27,
		"ConfigApiSubscribeResponse_CommissionConnector":                28,
		"ConfigApiSubscribeResponse_CommissionProfile":                  29,
		"ConfigApiSubscribeResponse_CommissionProfileSetting":           30,
		"ConfigApiSubscribeResponse_AccountProfileLeverageSym":          31,
		"ConfigApiSubscribeResponse_AccountProfileLeverageSymSetting":   32,
		"ConfigApiUpdateRequest_Connector":                              101,
		"ConfigApiUpdateRequest_ConnectorAccount":                       102,
		"ConfigApiUpdateRequest_ConnectorAccountSymbol":                 104,
		"ConfigApiUpdateRequest_ConnectorStream":                        105,
		"ConfigApiUpdateRequest_ConnectorStreamSymbol":                  107,
		"ConfigApiUpdateRequest_Pool":                                   108,
		"ConfigApiUpdateRequest_PoolSymbol":                             110,
		"ConfigApiUpdateRequest_Profile":                                111,
		"ConfigApiUpdateRequest_ProfileSymbol":                          113,
		"ConfigApiUpdateRequest_Provider":                               114,
		"ConfigApiUpdateRequest_Security":                               117,
		"ConfigApiUpdateRequest_Symbol":                                 118,
		"ConfigApiSubscribeResponse_Connector":                          119,
		"ConfigApiSubscribeResponse_ConnectorAccount":                   120,
		"ConfigApiSubscribeResponse_ConnectorAccountSymbol":             122,
		"ConfigApiSubscribeResponse_ConnectorStream":                    124,
		"ConfigApiSubscribeResponse_ConnectorStreamSymbol":              126,
		"ConfigApiSubscribeResponse_Pool":                               127,
		"ConfigApiSubscribeResponse_PoolSymbol":                         129,
		"ConfigApiSubscribeResponse_Profile":                            130,
		"ConfigApiSubscribeResponse_ProfileSymbol":                      132,
		"ConfigApiSubscribeResponse_Provider":                           133,
		"ConfigApiSubscribeResponse_Security":                           136,
		"ConfigApiSubscribeResponse_Symbol":                             137,
		"ConfigApiSubscribeResponse_ConnectorConfigSetting":             138,
		"ConfigApiSubscribeResponse_ProviderConfigSetting":              139,
		"ConfigApiSubscribeResponse_Currency":                           140,
		"ConfigApiSubscribeResponse_ProviderSymbolScaling":              141,
		"ConfigApiUpdateRequest_ProviderSymbolScaling":                  142,
		"ConfigApiUpdateRequest_AccountSetting":                         143,
		"ConfigApiUpdateRequest_AccountProfileLeverageCcySetting":       153,
		"ConfigApiUpdateRequest_AccountProfileLeverageSymSetting":       154,
		"ConfigApiUpdateRequest_AccountProfileLimitCurrencySetting":     155,
		"ConfigApiUpdateRequest_AccountProfileLimitSymbolSetting":       156,
		"ConfigApiUpdateRequest_AccountProfileSwapSetting":              157,
		"ConfigApiSubscribeResponse_AccountProfilePlSetting":            158,
		"ConfigApiUpdateRequest_AccountProfilePlSetting":                159,
		"ConfigApiSubscribeResponse_AccountProfileDividend":             160,
		"ConfigApiUpdateRequest_AccountProfileDividend":                 161,
		"ConfigApiSubscribeResponse_AccountProfileDividendSetting":      162,
		"ConfigApiUpdateRequest_AccountProfileDividendSetting":          163,
		"ConfigApiSubscribeResponse_AccountGroup":                       164,
		"ConfigApiUpdateRequest_AccountGroup":                           165,
		"ConfigApiSubscribeResponse_AccountGroupSetting":                166,
		"ConfigApiUpdateRequest_AccountGroupSetting":                    167,
		"ConfigApiSubscribeResponse_AccountProfileWallet":               169,
		"ConfigApiUpdateRequest_AccountProfileWallet":                   170,
		"ConfigApiSubscribeResponse_AccountProfileWalletSetting":        171,
		"ConfigApiUpdateRequest_AccountProfileWalletSetting":            172,
		"ConfigApiUpdateRequest_CommissionProfileSetting":               173,
		"ConfigApiSubscribeResponse_ProviderStream":                     174,
		"ConfigApiSubscribeResponse_ProviderStreamSetting":              175,
		"ConfigApiUpdateRequest_ProviderStreamSetting":                  176,
		"ConfigApiSubscribeResponse_ProviderTrade":                      177,
		"ConfigApiSubscribeResponse_ProviderTradeSetting":               178,
		"ConfigApiUpdateRequest_ProviderTradeSetting":                   179,
		"ConfigApiSubscribeResponse_AccountProfilePl":                   180,
		"ConfigApiSubscribeResponse_ConnectorRouteAdd":                  181,
		"ConfigApiUpdateRequest_ConnectorRouteAdd":                      182,
		"ConfigApiUpdateRequest_ConnectorRouteUpdate":                   183,
		"ConfigApiUpdateRequest_ConnectorRouteDelete":                   184,
		"ConfigApiSubscribeResponse_ProviderConfig":                     185,
		"ConfigApiSubscribeResponse_ConnectorConfig":                    186,
		"ConfigApiUpdateRequest_ProviderConfig":                         187,
		"ConfigApiUpdateRequest_ConnectorConfig":                        188,
		"ConfigApiUpdateRequest_ProviderConfigSetting":                  189,
		"ConfigApiUpdateRequest_ConnectorConfigSetting":                 190,
		"ConfigApiUpdateRequest_Currency":                               191,
		"ConfigApiSubscribeResponse_ConnectorProfileXhedge":             192,
		"ConfigApiSubscribeResponse_ConnectorProfileXhedgeSetting":      193,
		"ConfigApiUpdateRequest_ConnectorProfileXhedgeSetting":          194,
	}
)

func (x ConfigurationModule) Enum() *ConfigurationModule {
	p := new(ConfigurationModule)
	*p = x
	return p
}

func (x ConfigurationModule) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConfigurationModule) Descriptor() protoreflect.EnumDescriptor {
	return file_Modules_proto_enumTypes[3].Descriptor()
}

func (ConfigurationModule) Type() protoreflect.EnumType {
	return &file_Modules_proto_enumTypes[3]
}

func (x ConfigurationModule) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConfigurationModule.Descriptor instead.
func (ConfigurationModule) EnumDescriptor() ([]byte, []int) {
	return file_Modules_proto_rawDescGZIP(), []int{3}
}

var File_Modules_proto protoreflect.FileDescriptor

var file_Modules_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0b, 0x50, 0x78, 0x6d, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x2a, 0x3a, 0x0a, 0x0a,
	0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x6c, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x10, 0x07, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x11, 0x2a, 0xb8, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x6c, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x55, 0x6e,
	0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x51, 0x75, 0x65, 0x75, 0x65, 0x50, 0x69,
	0x6e, 0x67, 0x10, 0x1c, 0x12, 0x0d, 0x0a, 0x09, 0x51, 0x75, 0x65, 0x75, 0x65, 0x50, 0x6f, 0x6e,
	0x67, 0x10, 0x1d, 0x12, 0x16, 0x0a, 0x12, 0x51, 0x75, 0x65, 0x75, 0x65, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0x1e, 0x12, 0x1e, 0x0a, 0x1a, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0x1f, 0x12, 0x1f, 0x0a, 0x1b, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0x20, 0x12, 0x15, 0x0a, 0x11,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x65,
	0x74, 0x10, 0x21, 0x2a, 0xa9, 0x04, 0x0a, 0x0e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77,
	0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x10, 0x00, 0x12, 0x1e, 0x0a, 0x1a, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x70, 0x69,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x10, 0x64, 0x12, 0x2c, 0x0a, 0x28, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x70, 0x69,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x10, 0x66,
	0x12, 0x2d, 0x0a, 0x29, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x70, 0x69, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x10, 0x67, 0x12,
	0x1e, 0x0a, 0x1a, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x70, 0x69, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x10, 0x68, 0x12,
	0x1c, 0x0a, 0x18, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x70, 0x69, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x52, 0x65, 0x73, 0x65, 0x74, 0x10, 0x76, 0x12, 0x26, 0x0a,
	0x22, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x70, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x5f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x10, 0x69, 0x12, 0x1f, 0x0a, 0x1b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x41, 0x70, 0x69, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x10, 0x6a, 0x12, 0x23, 0x0a, 0x1f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x41, 0x70, 0x69, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x10, 0x6b, 0x12, 0x24, 0x0a, 0x20, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x70, 0x69, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x10,
	0x6c, 0x12, 0x24, 0x0a, 0x20, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x70, 0x69, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x10, 0x6d, 0x12, 0x25, 0x0a, 0x21, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x41, 0x70, 0x69, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x6e, 0x12, 0x1a,
	0x0a, 0x16, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x70, 0x69, 0x46, 0x6c, 0x75, 0x73,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0x6f, 0x12, 0x1b, 0x0a, 0x17, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x70, 0x69, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0x70, 0x12, 0x26, 0x0a, 0x22, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x41, 0x70, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x78, 0x70, 0x6f, 0x73, 0x75, 0x72, 0x65, 0x10, 0x71, 0x2a,
	0x85, 0x23, 0x0a, 0x13, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x1b, 0x55, 0x6e, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x10, 0x00, 0x12, 0x1d, 0x0a, 0x19, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x41, 0x70, 0x69, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0x0a, 0x12, 0x1e, 0x0a, 0x19, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x41, 0x70, 0x69, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x10, 0x96, 0x01, 0x12, 0x1f, 0x0a, 0x1a, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x41, 0x70, 0x69, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0x97, 0x01, 0x12, 0x16, 0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x41, 0x70, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0x98, 0x01,
	0x12, 0x2d, 0x0a, 0x29, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x10, 0x0c, 0x12,
	0x38, 0x0a, 0x34, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x65, 0x76, 0x65,
	0x72, 0x61, 0x67, 0x65, 0x43, 0x63, 0x79, 0x10, 0x10, 0x12, 0x3f, 0x0a, 0x3b, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x43, 0x63,
	0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x10, 0x11, 0x12, 0x3a, 0x0a, 0x36, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x10, 0x12, 0x12, 0x41, 0x0a, 0x3d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x41, 0x70, 0x69, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x10, 0x13, 0x12, 0x38, 0x0a, 0x34, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x53, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x10, 0x14, 0x12, 0x3f, 0x0a, 0x3b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x5f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x10, 0x15, 0x12, 0x31, 0x0a, 0x2d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70,
	0x69, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x5f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x53, 0x77, 0x61, 0x70, 0x10, 0x1a, 0x12, 0x38, 0x0a, 0x34, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x41, 0x70, 0x69, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x53, 0x77, 0x61, 0x70, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x10,
	0x1b, 0x12, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x10, 0x1c, 0x12, 0x30, 0x0a, 0x2c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41,
	0x70, 0x69, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x5f, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x10, 0x1d, 0x12, 0x37, 0x0a, 0x33, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x41, 0x70, 0x69, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x10, 0x1e,
	0x12, 0x38, 0x0a, 0x34, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x65, 0x76,
	0x65, 0x72, 0x61, 0x67, 0x65, 0x53, 0x79, 0x6d, 0x10, 0x1f, 0x12, 0x3f, 0x0a, 0x3b, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x53,
	0x79, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x10, 0x20, 0x12, 0x24, 0x0a, 0x20, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x10,
	0x65, 0x12, 0x2b, 0x0a, 0x27, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x10, 0x66, 0x12, 0x31,
	0x0a, 0x2d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x10,
	0x68, 0x12, 0x2a, 0x0a, 0x26, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x10, 0x69, 0x12, 0x30, 0x0a,
	0x2c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x10, 0x6b, 0x12,
	0x1f, 0x0a, 0x1b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x50, 0x6f, 0x6f, 0x6c, 0x10, 0x6c,
	0x12, 0x25, 0x0a, 0x21, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x50, 0x6f, 0x6f, 0x6c, 0x53,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x10, 0x6e, 0x12, 0x22, 0x0a, 0x1e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x41, 0x70, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x10, 0x6f, 0x12, 0x28, 0x0a, 0x24, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x10, 0x71, 0x12, 0x23, 0x0a, 0x1f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41,
	0x70, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x10, 0x72, 0x12, 0x23, 0x0a, 0x1f, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x10, 0x75, 0x12,
	0x21, 0x0a, 0x1d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x10, 0x76, 0x12, 0x28, 0x0a, 0x24, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x10, 0x77, 0x12, 0x2f, 0x0a, 0x2b,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x10, 0x78, 0x12, 0x35, 0x0a,
	0x31, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x10, 0x7a, 0x12, 0x2e, 0x0a, 0x2a, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70,
	0x69, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x10, 0x7c, 0x12, 0x34, 0x0a, 0x30, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70,
	0x69, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x10, 0x7e, 0x12, 0x23, 0x0a, 0x1f, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x50, 0x6f, 0x6f, 0x6c, 0x10, 0x7f, 0x12,
	0x2a, 0x0a, 0x25, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x50, 0x6f,
	0x6f, 0x6c, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x10, 0x81, 0x01, 0x12, 0x27, 0x0a, 0x22, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x10, 0x82, 0x01, 0x12, 0x2d, 0x0a, 0x28, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70,
	0x69, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x5f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x10, 0x84, 0x01, 0x12, 0x28, 0x0a, 0x23, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x5f, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x10, 0x85, 0x01, 0x12, 0x28, 0x0a,
	0x23, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x53, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x10, 0x88, 0x01, 0x12, 0x26, 0x0a, 0x21, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x41, 0x70, 0x69, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x10, 0x89, 0x01, 0x12,
	0x36, 0x0a, 0x31, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x10, 0x8a, 0x01, 0x12, 0x35, 0x0a, 0x30, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x41, 0x70, 0x69, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x10, 0x8b, 0x01, 0x12, 0x28,
	0x0a, 0x23, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x43, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x10, 0x8c, 0x01, 0x12, 0x35, 0x0a, 0x30, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x41, 0x70, 0x69, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x53,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x53, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x10, 0x8d, 0x01, 0x12,
	0x31, 0x0a, 0x2c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x53, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x10,
	0x8e, 0x01, 0x12, 0x2a, 0x0a, 0x25, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x10, 0x8f, 0x01, 0x12, 0x3c,
	0x0a, 0x37, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x43,
	0x63, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x10, 0x99, 0x01, 0x12, 0x3c, 0x0a, 0x37,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x53, 0x79, 0x6d,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x10, 0x9a, 0x01, 0x12, 0x3e, 0x0a, 0x39, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x10, 0x9b, 0x01, 0x12, 0x3c, 0x0a, 0x37, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x10, 0x9c, 0x01, 0x12, 0x35, 0x0a, 0x30, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x41, 0x70, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x53, 0x77, 0x61, 0x70, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x10, 0x9d, 0x01, 0x12,
	0x37, 0x0a, 0x32, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x6c, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x10, 0x9e, 0x01, 0x12, 0x33, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x41, 0x70, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x50, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x10, 0x9f, 0x01, 0x12, 0x36, 0x0a,
	0x31, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65,
	0x6e, 0x64, 0x10, 0xa0, 0x01, 0x12, 0x32, 0x0a, 0x2d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41,
	0x70, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x44, 0x69,
	0x76, 0x69, 0x64, 0x65, 0x6e, 0x64, 0x10, 0xa1, 0x01, 0x12, 0x3d, 0x0a, 0x38, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x64, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x10, 0xa2, 0x01, 0x12, 0x39, 0x0a, 0x34, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x41, 0x70, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x64, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x10, 0xa3, 0x01, 0x12, 0x2c, 0x0a, 0x27, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x5f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x10, 0xa4,
	0x01, 0x12, 0x28, 0x0a, 0x23, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x10, 0xa5, 0x01, 0x12, 0x33, 0x0a, 0x2e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x10, 0xa6, 0x01,
	0x12, 0x2f, 0x0a, 0x2a, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x10, 0xa7,
	0x01, 0x12, 0x34, 0x0a, 0x2f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x57, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x10, 0xa9, 0x01, 0x12, 0x30, 0x0a, 0x2b, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x41, 0x70, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x10, 0xaa, 0x01, 0x12, 0x3b, 0x0a, 0x36, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x10, 0xab, 0x01, 0x12, 0x37, 0x0a, 0x32, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x41, 0x70, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x57,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x10, 0xac, 0x01, 0x12,
	0x34, 0x0a, 0x2f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x10, 0xad, 0x01, 0x12, 0x2e, 0x0a, 0x29, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41,
	0x70, 0x69, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x5f, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x10, 0xae, 0x01, 0x12, 0x35, 0x0a, 0x30, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41,
	0x70, 0x69, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x5f, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x10, 0xaf, 0x01, 0x12, 0x31, 0x0a, 0x2c,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x10, 0xb0, 0x01, 0x12,
	0x2d, 0x0a, 0x28, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x54, 0x72, 0x61, 0x64, 0x65, 0x10, 0xb1, 0x01, 0x12, 0x34,
	0x0a, 0x2f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x54, 0x72, 0x61, 0x64, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x10, 0xb2, 0x01, 0x12, 0x30, 0x0a, 0x2b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70,
	0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x54, 0x72, 0x61, 0x64, 0x65, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x10, 0xb3, 0x01, 0x12, 0x30, 0x0a, 0x2b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x41, 0x70, 0x69, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x50, 0x6c, 0x10, 0xb4, 0x01, 0x12, 0x31, 0x0a, 0x2c, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x41, 0x70, 0x69, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x41, 0x64, 0x64, 0x10, 0xb5, 0x01, 0x12, 0x2d, 0x0a, 0x28, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x41, 0x64, 0x64, 0x10, 0xb6, 0x01, 0x12, 0x30, 0x0a, 0x2b, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x10, 0xb7, 0x01, 0x12, 0x30, 0x0a, 0x2b,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x10, 0xb8, 0x01, 0x12, 0x2e,
	0x0a, 0x29, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x10, 0xb9, 0x01, 0x12, 0x2f,
	0x0a, 0x2a, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x10, 0xba, 0x01, 0x12,
	0x2a, 0x0a, 0x25, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x10, 0xbb, 0x01, 0x12, 0x2b, 0x0a, 0x26, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x10, 0xbc, 0x01, 0x12, 0x31, 0x0a, 0x2c, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x41, 0x70, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x10, 0xbd, 0x01, 0x12, 0x32, 0x0a, 0x2d, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x10, 0xbe, 0x01, 0x12,
	0x24, 0x0a, 0x1f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x10, 0xbf, 0x01, 0x12, 0x36, 0x0a, 0x31, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41,
	0x70, 0x69, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x58, 0x68, 0x65, 0x64, 0x67, 0x65, 0x10, 0xc0, 0x01, 0x12, 0x3d, 0x0a,
	0x38, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x58, 0x68, 0x65, 0x64,
	0x67, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x10, 0xc1, 0x01, 0x12, 0x39, 0x0a, 0x34,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x58, 0x68, 0x65, 0x64, 0x67, 0x65, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x10, 0xc2, 0x01, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_Modules_proto_rawDescOnce sync.Once
	file_Modules_proto_rawDescData = file_Modules_proto_rawDesc
)

func file_Modules_proto_rawDescGZIP() []byte {
	file_Modules_proto_rawDescOnce.Do(func() {
		file_Modules_proto_rawDescData = protoimpl.X.CompressGZIP(file_Modules_proto_rawDescData)
	})
	return file_Modules_proto_rawDescData
}

var file_Modules_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_Modules_proto_goTypes = []interface{}{
	(ModuleType)(0),          // 0: Pxm.Modules.ModuleType
	(GeneralModule)(0),       // 1: Pxm.Modules.GeneralModule
	(AccountsModule)(0),      // 2: Pxm.Modules.AccountsModule
	(ConfigurationModule)(0), // 3: Pxm.Modules.ConfigurationModule
}
var file_Modules_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_Modules_proto_init() }
func file_Modules_proto_init() {
	if File_Modules_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Modules_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_Modules_proto_goTypes,
		DependencyIndexes: file_Modules_proto_depIdxs,
		EnumInfos:         file_Modules_proto_enumTypes,
	}.Build()
	File_Modules_proto = out.File
	file_Modules_proto_rawDesc = nil
	file_Modules_proto_goTypes = nil
	file_Modules_proto_depIdxs = nil
}
